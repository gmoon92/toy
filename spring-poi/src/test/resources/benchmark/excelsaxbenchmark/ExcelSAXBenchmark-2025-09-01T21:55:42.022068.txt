# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/gmoon/IdeaProjects/toy/spring-poi/src/test/resources/benchmark/excelsaxbenchmark/excelsaxbenchmark-heapdump.hprof -Dserver.port=9000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom
# Parameters: (excelDataRowSize = 1)

# Run progress: 0.00% complete, ETA 00:13:12
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0.201 ops/ms
Iteration   1: 0.594 ops/ms
                 gc.alloc.rate:       1137.039 MB/sec
                 gc.alloc.rate.norm:  2056915.177 B/op
                 gc.count:            36.000 counts
                 gc.time:             73.000 ms
                 heap.memory.used.mb: 55.125 MB

Iteration   2: 0.637 ops/ms
                 gc.alloc.rate:       1208.910 MB/sec
                 gc.alloc.rate.norm:  2029388.069 B/op
                 gc.count:            34.000 counts
                 gc.time:             61.000 ms
                 heap.memory.used.mb: 60.912 MB

Iteration   3: 0.816 ops/ms
                 gc.alloc.rate:       1549.961 MB/sec
                 gc.alloc.rate.norm:  2023831.497 B/op
                 gc.count:            44.000 counts
                 gc.time:             55.000 ms
                 heap.memory.used.mb: 20.683 MB

Iteration   4: 0.885 ops/ms
                 gc.alloc.rate:       1676.068 MB/sec
                 gc.alloc.rate.norm:  2022038.625 B/op
                 gc.count:            47.000 counts
                 gc.time:             59.000 ms
                 heap.memory.used.mb: 64.210 MB

Iteration   5: 0.881 ops/ms
                 gc.alloc.rate:       1656.967 MB/sec
                 gc.alloc.rate.norm:  2021687.217 B/op
                 gc.count:            47.000 counts
                 gc.time:             57.000 ms
                 heap.memory.used.mb: 52.132 MB


# Run progress: 1.39% complete, ETA 00:21:25
# Fork: 1 of 1
# Warmup Iteration   1: 0.238 ops/ms
Iteration   1: 0.624 ops/ms
                 gc.alloc.rate:       1197.411 MB/sec
                 gc.alloc.rate.norm:  2058038.726 B/op
                 gc.count:            33.000 counts
                 gc.time:             66.000 ms
                 heap.memory.used.mb: 37.722 MB

Iteration   2: 0.666 ops/ms
                 gc.alloc.rate:       1277.438 MB/sec
                 gc.alloc.rate.norm:  2032569.246 B/op
                 gc.count:            33.000 counts
                 gc.time:             39.000 ms
                 heap.memory.used.mb: 11.200 MB

Iteration   3: 0.809 ops/ms
                 gc.alloc.rate:       1515.900 MB/sec
                 gc.alloc.rate.norm:  2023004.049 B/op
                 gc.count:            39.000 counts
                 gc.time:             79.000 ms
                 heap.memory.used.mb: 67.742 MB

Iteration   4: 0.883 ops/ms
                 gc.alloc.rate:       1659.977 MB/sec
                 gc.alloc.rate.norm:  2020520.646 B/op
                 gc.count:            43.000 counts
                 gc.time:             71.000 ms
                 heap.memory.used.mb: 27.143 MB

Iteration   5: 0.883 ops/ms
                 gc.alloc.rate:       1647.355 MB/sec
                 gc.alloc.rate.norm:  2019971.701 B/op
                 gc.count:            43.000 counts
                 gc.time:             71.000 ms
                 heap.memory.used.mb: 24.654 MB



Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom":
  0.773 ±(99.9%) 0.468 ops/ms [Average]
  (min, avg, max) = (0.624, 0.773, 0.883), stdev = 0.121
  CI (99.9%): [0.305, 1.241] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate":
  1459.616 ±(99.9%) 817.976 MB/sec [Average]
  (min, avg, max) = (1197.411, 1459.616, 1659.977), stdev = 212.426
  CI (99.9%): [641.640, 2277.592] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate.norm":
  2030820.874 ±(99.9%) 61753.641 B/op [Average]
  (min, avg, max) = (2019971.701, 2030820.874, 2058038.726), stdev = 16037.225
  CI (99.9%): [1969067.232, 2092574.515] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.count":
  191.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (33.000, 38.200, 43.000), stdev = 5.020
  CI (99.9%): [191.000, 191.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.time":
  326.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (39.000, 65.200, 79.000), stdev = 15.369
  CI (99.9%): [326.000, 326.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:heap.memory.used.mb":
  33.692 ±(99.9%) 81.824 MB [Average]
  (min, avg, max) = (11.200, 33.692, 67.742), stdev = 21.249
  CI (99.9%): [≈ 0, 115.516] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/gmoon/IdeaProjects/toy/spring-poi/src/test/resources/benchmark/excelsaxbenchmark/excelsaxbenchmark-heapdump.hprof -Dserver.port=9000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom
# Parameters: (excelDataRowSize = 100)

# Run progress: 2.78% complete, ETA 00:20:49
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0.084 ops/ms
Iteration   1: 0.294 ops/ms
                 gc.alloc.rate:       1995.981 MB/sec
                 gc.alloc.rate.norm:  7303686.105 B/op
                 gc.count:            45.000 counts
                 gc.time:             81.000 ms
                 heap.memory.used.mb: 2.856 MB

Iteration   2: 0.345 ops/ms
                 gc.alloc.rate:       2366.017 MB/sec
                 gc.alloc.rate.norm:  7271546.832 B/op
                 gc.count:            61.000 counts
                 gc.time:             53.000 ms
                 heap.memory.used.mb: 4.689 MB

Iteration   3: 0.366 ops/ms
                 gc.alloc.rate:       2474.664 MB/sec
                 gc.alloc.rate.norm:  7259955.907 B/op
                 gc.count:            62.000 counts
                 gc.time:             78.000 ms
                 heap.memory.used.mb: 35.182 MB

Iteration   4: 0.391 ops/ms
                 gc.alloc.rate:       2645.555 MB/sec
                 gc.alloc.rate.norm:  7257478.013 B/op
                 gc.count:            66.000 counts
                 gc.time:             79.000 ms
                 heap.memory.used.mb: 62.727 MB

Iteration   5: 0.382 ops/ms
                 gc.alloc.rate:       2561.666 MB/sec
                 gc.alloc.rate.norm:  7258190.561 B/op
                 gc.count:            65.000 counts
                 gc.time:             78.000 ms
                 heap.memory.used.mb: 23.627 MB


# Run progress: 4.17% complete, ETA 00:20:26
# Fork: 1 of 1
# Warmup Iteration   1: 0.081 ops/ms
Iteration   1: 0.282 ops/ms
                 gc.alloc.rate:       1915.554 MB/sec
                 gc.alloc.rate.norm:  7292067.152 B/op
                 gc.count:            51.000 counts
                 gc.time:             83.000 ms
                 heap.memory.used.mb: 65.482 MB

Iteration   2: 0.355 ops/ms
                 gc.alloc.rate:       2416.560 MB/sec
                 gc.alloc.rate.norm:  7265235.803 B/op
                 gc.count:            62.000 counts
                 gc.time:             66.000 ms
                 heap.memory.used.mb: 6.791 MB

Iteration   3: 0.365 ops/ms
                 gc.alloc.rate:       2471.831 MB/sec
                 gc.alloc.rate.norm:  7257399.093 B/op
                 gc.count:            63.000 counts
                 gc.time:             78.000 ms
                 heap.memory.used.mb: 66.755 MB

Iteration   4: 0.371 ops/ms
                 gc.alloc.rate:       2506.534 MB/sec
                 gc.alloc.rate.norm:  7256570.040 B/op
                 gc.count:            64.000 counts
                 gc.time:             85.000 ms
                 heap.memory.used.mb: 75.073 MB

Iteration   5: 0.374 ops/ms
                 gc.alloc.rate:       2507.850 MB/sec
                 gc.alloc.rate.norm:  7256758.837 B/op
                 gc.count:            65.000 counts
                 gc.time:             87.000 ms
                 heap.memory.used.mb: 32.099 MB



Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom":
  0.350 ±(99.9%) 0.148 ops/ms [Average]
  (min, avg, max) = (0.282, 0.350, 0.374), stdev = 0.038
  CI (99.9%): [0.202, 0.497] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate":
  2363.666 ±(99.9%) 975.100 MB/sec [Average]
  (min, avg, max) = (1915.554, 2363.666, 2507.850), stdev = 253.230
  CI (99.9%): [1388.566, 3338.765] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate.norm":
  7265606.185 ±(99.9%) 58638.739 B/op [Average]
  (min, avg, max) = (7256570.040, 7265606.185, 7292067.152), stdev = 15228.294
  CI (99.9%): [7206967.446, 7324244.924] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.count":
  305.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (51.000, 61.000, 65.000), stdev = 5.701
  CI (99.9%): [305.000, 305.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.time":
  399.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (66.000, 79.800, 87.000), stdev = 8.408
  CI (99.9%): [399.000, 399.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:heap.memory.used.mb":
  49.240 ±(99.9%) 111.163 MB [Average]
  (min, avg, max) = (6.791, 49.240, 75.073), stdev = 28.869
  CI (99.9%): [≈ 0, 160.403] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/gmoon/IdeaProjects/toy/spring-poi/src/test/resources/benchmark/excelsaxbenchmark/excelsaxbenchmark-heapdump.hprof -Dserver.port=9000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom
# Parameters: (excelDataRowSize = 500)

# Run progress: 5.56% complete, ETA 00:20:11
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0.028 ops/ms
Iteration   1: 0.093 ops/ms
                 gc.alloc.rate:       2479.296 MB/sec
                 gc.alloc.rate.norm:  28595879.786 B/op
                 gc.count:            50.000 counts
                 gc.time:             94.000 ms
                 heap.memory.used.mb: 23.369 MB

Iteration   2: 0.101 ops/ms
                 gc.alloc.rate:       2696.503 MB/sec
                 gc.alloc.rate.norm:  28541294.416 B/op
                 gc.count:            52.000 counts
                 gc.time:             78.000 ms
                 heap.memory.used.mb: 67.165 MB

Iteration   3: 0.102 ops/ms
                 gc.alloc.rate:       2692.522 MB/sec
                 gc.alloc.rate.norm:  28531550.392 B/op
                 gc.count:            55.000 counts
                 gc.time:             90.000 ms
                 heap.memory.used.mb: 53.216 MB

Iteration   4: 0.106 ops/ms
                 gc.alloc.rate:       2819.057 MB/sec
                 gc.alloc.rate.norm:  28526481.690 B/op
                 gc.count:            57.000 counts
                 gc.time:             93.000 ms
                 heap.memory.used.mb: 80.847 MB

Iteration   5: 0.114 ops/ms
                 gc.alloc.rate:       2998.892 MB/sec
                 gc.alloc.rate.norm:  28527351.965 B/op
                 gc.count:            60.000 counts
                 gc.time:             96.000 ms
                 heap.memory.used.mb: 13.054 MB


# Run progress: 6.94% complete, ETA 00:19:52
# Fork: 1 of 1
# Warmup Iteration   1: 0.029 ops/ms
Iteration   1: 0.092 ops/ms
                 gc.alloc.rate:       2451.322 MB/sec
                 gc.alloc.rate.norm:  28588373.652 B/op
                 gc.count:            52.000 counts
                 gc.time:             85.000 ms
                 heap.memory.used.mb: 15.801 MB

Iteration   2: 0.100 ops/ms
                 gc.alloc.rate:       2660.393 MB/sec
                 gc.alloc.rate.norm:  28539871.522 B/op
                 gc.count:            54.000 counts
                 gc.time:             93.000 ms
                 heap.memory.used.mb: 73.522 MB

Iteration   3: 0.099 ops/ms
                 gc.alloc.rate:       2616.031 MB/sec
                 gc.alloc.rate.norm:  28528414.263 B/op
                 gc.count:            52.000 counts
                 gc.time:             100.000 ms
                 heap.memory.used.mb: 65.983 MB

Iteration   4: 0.107 ops/ms
                 gc.alloc.rate:       2840.739 MB/sec
                 gc.alloc.rate.norm:  28526063.477 B/op
                 gc.count:            56.000 counts
                 gc.time:             84.000 ms
                 heap.memory.used.mb: 74.464 MB

Iteration   5: 0.106 ops/ms
                 gc.alloc.rate:       2803.596 MB/sec
                 gc.alloc.rate.norm:  28528074.393 B/op
                 gc.count:            57.000 counts
                 gc.time:             91.000 ms
                 heap.memory.used.mb: 5.054 MB



Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom":
  0.101 ±(99.9%) 0.024 ops/ms [Average]
  (min, avg, max) = (0.092, 0.101, 0.107), stdev = 0.006
  CI (99.9%): [0.077, 0.124] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate":
  2674.416 ±(99.9%) 601.882 MB/sec [Average]
  (min, avg, max) = (2451.322, 2674.416, 2840.739), stdev = 156.307
  CI (99.9%): [2072.534, 3276.298] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate.norm":
  28542159.461 ±(99.9%) 101648.731 B/op [Average]
  (min, avg, max) = (28526063.477, 28542159.461, 28588373.652), stdev = 26397.853
  CI (99.9%): [28440510.731, 28643808.192] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.count":
  271.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (52.000, 54.200, 57.000), stdev = 2.280
  CI (99.9%): [271.000, 271.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.time":
  453.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (84.000, 90.600, 100.000), stdev = 6.504
  CI (99.9%): [453.000, 453.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:heap.memory.used.mb":
  46.965 ±(99.9%) 129.882 MB [Average]
  (min, avg, max) = (5.054, 46.965, 74.464), stdev = 33.730
  CI (99.9%): [≈ 0, 176.847] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/gmoon/IdeaProjects/toy/spring-poi/src/test/resources/benchmark/excelsaxbenchmark/excelsaxbenchmark-heapdump.hprof -Dserver.port=9000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom
# Parameters: (excelDataRowSize = 1000)

# Run progress: 8.33% complete, ETA 00:19:35
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0.015 ops/ms
Iteration   1: 0.050 ops/ms
                 gc.alloc.rate:       2595.002 MB/sec
                 gc.alloc.rate.norm:  55232012.832 B/op
                 gc.count:            47.000 counts
                 gc.time:             98.000 ms
                 heap.memory.used.mb: 125.023 MB

Iteration   2: 0.049 ops/ms
                 gc.alloc.rate:       2524.545 MB/sec
                 gc.alloc.rate.norm:  55185404.283 B/op
                 gc.count:            44.000 counts
                 gc.time:             101.000 ms
                 heap.memory.used.mb: 132.663 MB

Iteration   3: 0.055 ops/ms
                 gc.alloc.rate:       2818.381 MB/sec
                 gc.alloc.rate.norm:  55159333.964 B/op
                 gc.count:            47.000 counts
                 gc.time:             103.000 ms
                 heap.memory.used.mb: 43.060 MB

Iteration   4: 0.056 ops/ms
                 gc.alloc.rate:       2857.053 MB/sec
                 gc.alloc.rate.norm:  55149619.214 B/op
                 gc.count:            49.000 counts
                 gc.time:             104.000 ms
                 heap.memory.used.mb: 39.278 MB

Iteration   5: 0.054 ops/ms
                 gc.alloc.rate:       2731.743 MB/sec
                 gc.alloc.rate.norm:  55151404.741 B/op
                 gc.count:            47.000 counts
                 gc.time:             105.000 ms
                 heap.memory.used.mb: 125.360 MB


# Run progress: 9.72% complete, ETA 00:19:17
# Fork: 1 of 1
# Warmup Iteration   1: 0.013 ops/ms
Iteration   1: 0.049 ops/ms
                 gc.alloc.rate:       2550.277 MB/sec
                 gc.alloc.rate.norm:  55237251.360 B/op
                 gc.count:            45.000 counts
                 gc.time:             101.000 ms
                 heap.memory.used.mb: 88.203 MB

Iteration   2: 0.054 ops/ms
                 gc.alloc.rate:       2763.657 MB/sec
                 gc.alloc.rate.norm:  55180893.704 B/op
                 gc.count:            46.000 counts
                 gc.time:             100.000 ms
                 heap.memory.used.mb: 135.541 MB

Iteration   3: 0.051 ops/ms
                 gc.alloc.rate:       2647.850 MB/sec
                 gc.alloc.rate.norm:  55163502.757 B/op
                 gc.count:            45.000 counts
                 gc.time:             100.000 ms
                 heap.memory.used.mb: 17.590 MB

Iteration   4: 0.055 ops/ms
                 gc.alloc.rate:       2826.970 MB/sec
                 gc.alloc.rate.norm:  55149358.473 B/op
                 gc.count:            47.000 counts
                 gc.time:             102.000 ms
                 heap.memory.used.mb: 8.294 MB

Iteration   5: 0.055 ops/ms
                 gc.alloc.rate:       2806.231 MB/sec
                 gc.alloc.rate.norm:  55150382.691 B/op
                 gc.count:            47.000 counts
                 gc.time:             101.000 ms
                 heap.memory.used.mb: 75.166 MB



Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom":
  0.053 ±(99.9%) 0.009 ops/ms [Average]
  (min, avg, max) = (0.049, 0.053, 0.055), stdev = 0.002
  CI (99.9%): [0.044, 0.062] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate":
  2718.997 ±(99.9%) 450.669 MB/sec [Average]
  (min, avg, max) = (2550.277, 2718.997, 2826.970), stdev = 117.037
  CI (99.9%): [2268.328, 3169.666] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate.norm":
  55176277.797 ±(99.9%) 140132.363 B/op [Average]
  (min, avg, max) = (55149358.473, 55176277.797, 55237251.360), stdev = 36391.930
  CI (99.9%): [55036145.434, 55316410.160] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.count":
  230.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (45.000, 46.000, 47.000), stdev = 1.000
  CI (99.9%): [230.000, 230.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.time":
  504.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (100.000, 100.800, 102.000), stdev = 0.837
  CI (99.9%): [504.000, 504.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:heap.memory.used.mb":
  64.959 ±(99.9%) 202.672 MB [Average]
  (min, avg, max) = (8.294, 64.959, 135.541), stdev = 52.633
  CI (99.9%): [≈ 0, 267.630] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/gmoon/IdeaProjects/toy/spring-poi/src/test/resources/benchmark/excelsaxbenchmark/excelsaxbenchmark-heapdump.hprof -Dserver.port=9000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom
# Parameters: (excelDataRowSize = 5000)

# Run progress: 11.11% complete, ETA 00:19:00
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0.004 ops/ms
Iteration   1: 0.007 ops/ms
                 gc.alloc.rate:       1819.951 MB/sec
                 gc.alloc.rate.norm:  267924427.200 B/op
                 gc.count:            46.000 counts
                 gc.time:             210.000 ms
                 heap.memory.used.mb: 156.346 MB

Iteration   2: 0.007 ops/ms
                 gc.alloc.rate:       1854.818 MB/sec
                 gc.alloc.rate.norm:  267863161.067 B/op
                 gc.count:            43.000 counts
                 gc.time:             209.000 ms
                 heap.memory.used.mb: 207.563 MB

Iteration   3: 0.007 ops/ms
                 gc.alloc.rate:       1848.734 MB/sec
                 gc.alloc.rate.norm:  267801671.467 B/op
                 gc.count:            45.000 counts
                 gc.time:             207.000 ms
                 heap.memory.used.mb: 119.792 MB

Iteration   4: 0.008 ops/ms
                 gc.alloc.rate:       1924.170 MB/sec
                 gc.alloc.rate.norm:  267803788.500 B/op
                 gc.count:            50.000 counts
                 gc.time:             226.000 ms
                 heap.memory.used.mb: 173.888 MB

Iteration   5: 0.007 ops/ms
                 gc.alloc.rate:       1845.320 MB/sec
                 gc.alloc.rate.norm:  267841224.000 B/op
                 gc.count:            43.000 counts
                 gc.time:             204.000 ms
                 heap.memory.used.mb: 190.292 MB


# Run progress: 12.50% complete, ETA 00:18:44
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ops/ms
Iteration   1: 0.007 ops/ms
                 gc.alloc.rate:       1805.481 MB/sec
                 gc.alloc.rate.norm:  267924674.667 B/op
                 gc.count:            43.000 counts
                 gc.time:             215.000 ms
                 heap.memory.used.mb: 200.029 MB

Iteration   2: 0.007 ops/ms
                 gc.alloc.rate:       1765.369 MB/sec
                 gc.alloc.rate.norm:  267876912.000 B/op
                 gc.count:            46.000 counts
                 gc.time:             217.000 ms
                 heap.memory.used.mb: 150.074 MB

Iteration   3: 0.007 ops/ms
                 gc.alloc.rate:       1844.008 MB/sec
                 gc.alloc.rate.norm:  267801257.067 B/op
                 gc.count:            46.000 counts
                 gc.time:             210.000 ms
                 heap.memory.used.mb: 180.418 MB

Iteration   4: 0.007 ops/ms
                 gc.alloc.rate:       1783.908 MB/sec
                 gc.alloc.rate.norm:  267798873.067 B/op
                 gc.count:            45.000 counts
                 gc.time:             206.000 ms
                 heap.memory.used.mb: 169.417 MB

Iteration   5: 0.008 ops/ms
                 gc.alloc.rate:       1879.697 MB/sec
                 gc.alloc.rate.norm:  267842499.500 B/op
                 gc.count:            44.000 counts
                 gc.time:             217.000 ms
                 heap.memory.used.mb: 207.000 MB



Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom":
  0.007 ±(99.9%) 0.001 ops/ms [Average]
  (min, avg, max) = (0.007, 0.007, 0.008), stdev = 0.001
  CI (99.9%): [0.006, 0.008] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate":
  1815.693 ±(99.9%) 177.978 MB/sec [Average]
  (min, avg, max) = (1765.369, 1815.693, 1879.697), stdev = 46.220
  CI (99.9%): [1637.715, 1993.671] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate.norm":
  267848843.260 ±(99.9%) 205026.140 B/op [Average]
  (min, avg, max) = (267798873.067, 267848843.260, 267924674.667), stdev = 53244.638
  CI (99.9%): [267643817.120, 268053869.400] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.count":
  224.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (43.000, 44.800, 46.000), stdev = 1.304
  CI (99.9%): [224.000, 224.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.time":
  1065.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (206.000, 213.000, 217.000), stdev = 4.848
  CI (99.9%): [1065.000, 1065.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:heap.memory.used.mb":
  181.388 ±(99.9%) 88.820 MB [Average]
  (min, avg, max) = (150.074, 181.388, 207.000), stdev = 23.066
  CI (99.9%): [92.567, 270.208] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/gmoon/IdeaProjects/toy/spring-poi/src/test/resources/benchmark/excelsaxbenchmark/excelsaxbenchmark-heapdump.hprof -Dserver.port=9000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom
# Parameters: (excelDataRowSize = 10000)

# Run progress: 13.89% complete, ETA 00:18:29
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0.001 ops/ms
Iteration   1: 0.003 ops/ms
                 gc.alloc.rate:       1483.095 MB/sec
                 gc.alloc.rate.norm:  533917649.333 B/op
                 gc.count:            37.000 counts
                 gc.time:             196.000 ms
                 heap.memory.used.mb: 257.312 MB

Iteration   2: 0.003 ops/ms
                 gc.alloc.rate:       1454.577 MB/sec
                 gc.alloc.rate.norm:  533998497.333 B/op
                 gc.count:            34.000 counts
                 gc.time:             186.000 ms
                 heap.memory.used.mb: 297.176 MB

Iteration   3: 0.003 ops/ms
                 gc.alloc.rate:       1524.802 MB/sec
                 gc.alloc.rate.norm:  533718802.286 B/op
                 gc.count:            41.000 counts
                 gc.time:             210.000 ms
                 heap.memory.used.mb: 356.148 MB

Iteration   4: 0.003 ops/ms
                 gc.alloc.rate:       1424.210 MB/sec
                 gc.alloc.rate.norm:  533707724.000 B/op
                 gc.count:            37.000 counts
                 gc.time:             194.000 ms
                 heap.memory.used.mb: 202.342 MB

Iteration   5: 0.003 ops/ms
                 gc.alloc.rate:       1496.139 MB/sec
                 gc.alloc.rate.norm:  533796075.429 B/op
                 gc.count:            42.000 counts
                 gc.time:             214.000 ms
                 heap.memory.used.mb: 198.418 MB


# Run progress: 15.28% complete, ETA 00:18:17
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ops/ms
Iteration   1: 0.003 ops/ms
                 gc.alloc.rate:       1506.893 MB/sec
                 gc.alloc.rate.norm:  533951806.857 B/op
                 gc.count:            41.000 counts
                 gc.time:             205.000 ms
                 heap.memory.used.mb: 193.812 MB

Iteration   2: 0.003 ops/ms
                 gc.alloc.rate:       1517.606 MB/sec
                 gc.alloc.rate.norm:  533898784.000 B/op
                 gc.count:            41.000 counts
                 gc.time:             205.000 ms
                 heap.memory.used.mb: 177.498 MB

Iteration   3: 0.003 ops/ms
                 gc.alloc.rate:       1439.975 MB/sec
                 gc.alloc.rate.norm:  533706226.667 B/op
                 gc.count:            36.000 counts
                 gc.time:             185.000 ms
                 heap.memory.used.mb: 245.453 MB

Iteration   4: 0.003 ops/ms
                 gc.alloc.rate:       1518.065 MB/sec
                 gc.alloc.rate.norm:  533710672.000 B/op
                 gc.count:            38.000 counts
                 gc.time:             205.000 ms
                 heap.memory.used.mb: 393.612 MB

Iteration   5: 0.003 ops/ms
                 gc.alloc.rate:       1479.410 MB/sec
                 gc.alloc.rate.norm:  533818154.667 B/op
                 gc.count:            37.000 counts
                 gc.time:             192.000 ms
                 heap.memory.used.mb: 205.386 MB



Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom":
  0.003 ±(99.9%) 0.001 ops/ms [Average]
  (min, avg, max) = (0.003, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.003, 0.003] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate":
  1492.390 ±(99.9%) 128.018 MB/sec [Average]
  (min, avg, max) = (1439.975, 1492.390, 1518.065), stdev = 33.246
  CI (99.9%): [1364.372, 1620.408] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate.norm":
  533817128.838 ±(99.9%) 423742.049 B/op [Average]
  (min, avg, max) = (533706226.667, 533817128.838, 533951806.857), stdev = 110044.464
  CI (99.9%): [533393386.789, 534240870.887] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.count":
  193.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (36.000, 38.600, 41.000), stdev = 2.302
  CI (99.9%): [193.000, 193.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.time":
  992.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (185.000, 198.400, 205.000), stdev = 9.370
  CI (99.9%): [992.000, 992.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:heap.memory.used.mb":
  243.152 ±(99.9%) 337.973 MB [Average]
  (min, avg, max) = (177.498, 243.152, 393.612), stdev = 87.770
  CI (99.9%): [≈ 0, 581.125] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/gmoon/IdeaProjects/toy/spring-poi/src/test/resources/benchmark/excelsaxbenchmark/excelsaxbenchmark-heapdump.hprof -Dserver.port=9000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom
# Parameters: (excelDataRowSize = 15000)

# Run progress: 16.67% complete, ETA 00:18:04
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0.001 ops/ms
Iteration   1: 0.002 ops/ms
                 gc.alloc.rate:       1183.435 MB/sec
                 gc.alloc.rate.norm:  803952410.000 B/op
                 gc.count:            37.000 counts
                 gc.time:             202.000 ms
                 heap.memory.used.mb: 296.165 MB

Iteration   2: 0.002 ops/ms
                 gc.alloc.rate:       1261.967 MB/sec
                 gc.alloc.rate.norm:  802210756.000 B/op
                 gc.count:            32.000 counts
                 gc.time:             197.000 ms
                 heap.memory.used.mb: 182.365 MB

Iteration   3: 0.002 ops/ms
                 gc.alloc.rate:       1198.819 MB/sec
                 gc.alloc.rate.norm:  801762300.000 B/op
                 gc.count:            34.000 counts
                 gc.time:             201.000 ms
                 heap.memory.used.mb: 233.507 MB

Iteration   4: 0.002 ops/ms
                 gc.alloc.rate:       1223.799 MB/sec
                 gc.alloc.rate.norm:  801774492.000 B/op
                 gc.count:            34.000 counts
                 gc.time:             202.000 ms
                 heap.memory.used.mb: 295.433 MB

Iteration   5: 0.002 ops/ms
                 gc.alloc.rate:       1233.615 MB/sec
                 gc.alloc.rate.norm:  801930012.000 B/op
                 gc.count:            35.000 counts
                 gc.time:             194.000 ms
                 heap.memory.used.mb: 432.867 MB


# Run progress: 18.06% complete, ETA 00:17:55
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ops/ms
Iteration   1: 0.002 ops/ms
                 gc.alloc.rate:       1135.939 MB/sec
                 gc.alloc.rate.norm:  804275888.000 B/op
                 gc.count:            39.000 counts
                 gc.time:             200.000 ms
                 heap.memory.used.mb: 196.975 MB

Iteration   2: 0.002 ops/ms
                 gc.alloc.rate:       1245.327 MB/sec
                 gc.alloc.rate.norm:  802210612.000 B/op
                 gc.count:            29.000 counts
                 gc.time:             181.000 ms
                 heap.memory.used.mb: 379.151 MB

Iteration   3: 0.002 ops/ms
                 gc.alloc.rate:       1211.987 MB/sec
                 gc.alloc.rate.norm:  801762118.000 B/op
                 gc.count:            33.000 counts
                 gc.time:             200.000 ms
                 heap.memory.used.mb: 130.459 MB

Iteration   4: 0.002 ops/ms
                 gc.alloc.rate:       1231.417 MB/sec
                 gc.alloc.rate.norm:  801774478.000 B/op
                 gc.count:            35.000 counts
                 gc.time:             196.000 ms
                 heap.memory.used.mb: 294.413 MB

Iteration   5: 0.002 ops/ms
                 gc.alloc.rate:       1188.937 MB/sec
                 gc.alloc.rate.norm:  801929642.000 B/op
                 gc.count:            36.000 counts
                 gc.time:             219.000 ms
                 heap.memory.used.mb: 154.838 MB



Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom":
  0.002 ±(99.9%) 0.001 ops/ms [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.001, 0.002] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate":
  1202.721 ±(99.9%) 165.337 MB/sec [Average]
  (min, avg, max) = (1135.939, 1202.721, 1245.327), stdev = 42.937
  CI (99.9%): [1037.385, 1368.058] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate.norm":
  802390547.600 ±(99.9%) 4117572.222 B/op [Average]
  (min, avg, max) = (801762118.000, 802390547.600, 804275888.000), stdev = 1069320.430
  CI (99.9%): [798272975.378, 806508119.822] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.count":
  172.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (29.000, 34.400, 39.000), stdev = 3.715
  CI (99.9%): [172.000, 172.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.time":
  996.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (181.000, 199.200, 219.000), stdev = 13.554
  CI (99.9%): [996.000, 996.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:heap.memory.used.mb":
  231.167 ±(99.9%) 399.413 MB [Average]
  (min, avg, max) = (130.459, 231.167, 379.151), stdev = 103.726
  CI (99.9%): [≈ 0, 630.580] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/gmoon/IdeaProjects/toy/spring-poi/src/test/resources/benchmark/excelsaxbenchmark/excelsaxbenchmark-heapdump.hprof -Dserver.port=9000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom
# Parameters: (excelDataRowSize = 100000)

# Run progress: 19.44% complete, ETA 00:17:46
# Warmup Fork: 1 of 1
# Warmup Iteration   1: ≈ 10⁻⁴ ops/ms
Iteration   1: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       330.037 MB/sec
                 gc.alloc.rate.norm:  5358259816.000 B/op
                 gc.count:            49.000 counts
                 gc.time:             298.000 ms
                 heap.memory.used.mb: 868.309 MB

Iteration   2: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       361.300 MB/sec
                 gc.alloc.rate.norm:  5349273864.000 B/op
                 gc.count:            50.000 counts
                 gc.time:             284.000 ms
                 heap.memory.used.mb: 731.404 MB

Iteration   3: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       349.308 MB/sec
                 gc.alloc.rate.norm:  5349085328.000 B/op
                 gc.count:            52.000 counts
                 gc.time:             294.000 ms
                 heap.memory.used.mb: 716.354 MB

Iteration   4: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       353.968 MB/sec
                 gc.alloc.rate.norm:  5348990280.000 B/op
                 gc.count:            51.000 counts
                 gc.time:             283.000 ms
                 heap.memory.used.mb: 722.370 MB

Iteration   5: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       352.127 MB/sec
                 gc.alloc.rate.norm:  5349643080.000 B/op
                 gc.count:            53.000 counts
                 gc.time:             299.000 ms
                 heap.memory.used.mb: 768.609 MB


# Run progress: 20.83% complete, ETA 00:22:23
# Fork: 1 of 1
# Warmup Iteration   1: ≈ 10⁻⁴ ops/ms
Iteration   1: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       338.080 MB/sec
                 gc.alloc.rate.norm:  5355164768.000 B/op
                 gc.count:            53.000 counts
                 gc.time:             290.000 ms
                 heap.memory.used.mb: 757.365 MB

Iteration   2: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       336.170 MB/sec
                 gc.alloc.rate.norm:  5346089144.000 B/op
                 gc.count:            51.000 counts
                 gc.time:             287.000 ms
                 heap.memory.used.mb: 727.208 MB

Iteration   3: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       321.191 MB/sec
                 gc.alloc.rate.norm:  5345885024.000 B/op
                 gc.count:            50.000 counts
                 gc.time:             296.000 ms
                 heap.memory.used.mb: 721.119 MB

Iteration   4: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       306.564 MB/sec
                 gc.alloc.rate.norm:  5345792072.000 B/op
                 gc.count:            51.000 counts
                 gc.time:             288.000 ms
                 heap.memory.used.mb: 746.030 MB

Iteration   5: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       357.505 MB/sec
                 gc.alloc.rate.norm:  5346440568.000 B/op
                 gc.count:            51.000 counts
                 gc.time:             302.000 ms
                 heap.memory.used.mb: 732.769 MB



Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom":
  ≈ 10⁻⁴ ops/ms

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate":
  331.902 ±(99.9%) 73.783 MB/sec [Average]
  (min, avg, max) = (306.564, 331.902, 357.505), stdev = 19.161
  CI (99.9%): [258.119, 405.685] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate.norm":
  5347874315.200 ±(99.9%) 15722489.139 B/op [Average]
  (min, avg, max) = (5345792072.000, 5347874315.200, 5355164768.000), stdev = 4083080.501
  CI (99.9%): [5332151826.061, 5363596804.339] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.count":
  256.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (50.000, 51.200, 53.000), stdev = 1.095
  CI (99.9%): [256.000, 256.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.time":
  1463.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (287.000, 292.600, 302.000), stdev = 6.309
  CI (99.9%): [1463.000, 1463.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:heap.memory.used.mb":
  736.898 ±(99.9%) 56.534 MB [Average]
  (min, avg, max) = (721.119, 736.898, 757.365), stdev = 14.682
  CI (99.9%): [680.364, 793.432] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/gmoon/IdeaProjects/toy/spring-poi/src/test/resources/benchmark/excelsaxbenchmark/excelsaxbenchmark-heapdump.hprof -Dserver.port=9000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom
# Parameters: (excelDataRowSize = 150000)

# Run progress: 22.22% complete, ETA 00:26:23
# Warmup Fork: 1 of 1
# Warmup Iteration   1: ≈ 10⁻⁵ ops/ms
Iteration   1: ≈ 10⁻⁵ ops/ms
                 gc.alloc.rate:       131.962 MB/sec
                 gc.alloc.rate.norm:  8000964256.000 B/op
                 gc.count:            351.000 counts
                 gc.time:             24172.000 ms
                 heap.memory.used.mb: 985.857 MB

Iteration   2: ≈ 10⁻⁵ ops/ms
                 gc.alloc.rate:       131.298 MB/sec
                 gc.alloc.rate.norm:  7992836600.000 B/op
                 gc.count:            361.000 counts
                 gc.time:             22915.000 ms
                 heap.memory.used.mb: 985.453 MB

Iteration   3: ≈ 10⁻⁵ ops/ms
                 gc.alloc.rate:       137.485 MB/sec
                 gc.alloc.rate.norm:  7992584768.000 B/op
                 gc.count:            354.000 counts
                 gc.time:             23707.000 ms
                 heap.memory.used.mb: 987.455 MB

Iteration   4: ≈ 10⁻⁵ ops/ms
                 gc.alloc.rate:       144.697 MB/sec
                 gc.alloc.rate.norm:  7992544544.000 B/op
                 gc.count:            360.000 counts
                 gc.time:             23005.000 ms
                 heap.memory.used.mb: 984.712 MB

Iteration   5: ≈ 10⁻⁵ ops/ms
                 gc.alloc.rate:       134.586 MB/sec
                 gc.alloc.rate.norm:  7993663736.000 B/op
                 gc.count:            348.000 counts
                 gc.time:             25805.000 ms
                 heap.memory.used.mb: 986.705 MB


# Run progress: 23.61% complete, ETA 00:42:55
# Fork: 1 of 1
# Warmup Iteration   1: ≈ 10⁻⁵ ops/ms
Iteration   1: ≈ 10⁻⁵ ops/ms
                 gc.alloc.rate:       134.462 MB/sec
                 gc.alloc.rate.norm:  7997800552.000 B/op
                 gc.count:            354.000 counts
                 gc.time:             25744.000 ms
                 heap.memory.used.mb: 986.164 MB

Iteration   2: ≈ 10⁻⁵ ops/ms
                 gc.alloc.rate:       128.810 MB/sec
                 gc.alloc.rate.norm:  7984659912.000 B/op
                 gc.count:            356.000 counts
                 gc.time:             25634.000 ms
                 heap.memory.used.mb: 986.085 MB

Iteration   3: ≈ 10⁻⁵ ops/ms
                 gc.alloc.rate:       140.159 MB/sec
                 gc.alloc.rate.norm:  7984406800.000 B/op
                 gc.count:            335.000 counts
                 gc.time:             24687.000 ms
                 heap.memory.used.mb: 986.371 MB

Iteration   4: ≈ 10⁻⁵ ops/ms
                 gc.alloc.rate:       133.223 MB/sec
                 gc.alloc.rate.norm:  7984350968.000 B/op
                 gc.count:            373.000 counts
                 gc.time:             24820.000 ms
                 heap.memory.used.mb: 985.971 MB

Iteration   5: ≈ 10⁻⁵ ops/ms
                 gc.alloc.rate:       127.826 MB/sec
                 gc.alloc.rate.norm:  7985465496.000 B/op
                 gc.count:            349.000 counts
                 gc.time:             24988.000 ms
                 heap.memory.used.mb: 986.443 MB



Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom":
  ≈ 10⁻⁵ ops/ms

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate":
  132.896 ±(99.9%) 19.031 MB/sec [Average]
  (min, avg, max) = (127.826, 132.896, 140.159), stdev = 4.942
  CI (99.9%): [113.865, 151.927] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate.norm":
  7987336745.600 ±(99.9%) 22589344.586 B/op [Average]
  (min, avg, max) = (7984350968.000, 7987336745.600, 7997800552.000), stdev = 5866381.054
  CI (99.9%): [7964747401.014, 8009926090.186] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.count":
  1767.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (335.000, 353.400, 373.000), stdev = 13.686
  CI (99.9%): [1767.000, 1767.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.time":
  125873.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (24687.000, 25174.600, 25744.000), stdev = 483.110
  CI (99.9%): [125873.000, 125873.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:heap.memory.used.mb":
  986.207 ±(99.9%) 0.758 MB [Average]
  (min, avg, max) = (985.971, 986.207, 986.443), stdev = 0.197
  CI (99.9%): [985.449, 986.964] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/gmoon/IdeaProjects/toy/spring-poi/src/test/resources/benchmark/excelsaxbenchmark/excelsaxbenchmark-heapdump.hprof -Dserver.port=9000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax
# Parameters: (excelDataRowSize = 1)

# Run progress: 25.00% complete, ETA 00:57:22
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0.524 ops/ms
Iteration   1: 1.685 ops/ms
                 gc.alloc.rate:       2068.439 MB/sec
                 gc.alloc.rate.norm:  1316434.926 B/op
                 gc.count:            55.000 counts
                 gc.time:             77.000 ms
                 heap.memory.used.mb: 63.309 MB

Iteration   2: 1.984 ops/ms
                 gc.alloc.rate:       2432.001 MB/sec
                 gc.alloc.rate.norm:  1312496.381 B/op
                 gc.count:            64.000 counts
                 gc.time:             72.000 ms
                 heap.memory.used.mb: 38.671 MB

Iteration   3: 2.029 ops/ms
                 gc.alloc.rate:       2489.601 MB/sec
                 gc.alloc.rate.norm:  1312216.214 B/op
                 gc.count:            65.000 counts
                 gc.time:             70.000 ms
                 heap.memory.used.mb: 72.175 MB

Iteration   4: 2.052 ops/ms
                 gc.alloc.rate:       2513.487 MB/sec
                 gc.alloc.rate.norm:  1312177.162 B/op
                 gc.count:            66.000 counts
                 gc.time:             72.000 ms
                 heap.memory.used.mb: 50.728 MB

Iteration   5: 2.060 ops/ms
                 gc.alloc.rate:       2507.408 MB/sec
                 gc.alloc.rate.norm:  1312350.429 B/op
                 gc.count:            66.000 counts
                 gc.time:             72.000 ms
                 heap.memory.used.mb: 60.567 MB


# Run progress: 26.39% complete, ETA 00:54:10
# Fork: 1 of 1
# Warmup Iteration   1: 0.567 ops/ms
Iteration   1: 1.689 ops/ms
                 gc.alloc.rate:       2072.794 MB/sec
                 gc.alloc.rate.norm:  1313902.466 B/op
                 gc.count:            57.000 counts
                 gc.time:             76.000 ms
                 heap.memory.used.mb: 67.269 MB

Iteration   2: 1.963 ops/ms
                 gc.alloc.rate:       2395.046 MB/sec
                 gc.alloc.rate.norm:  1310684.658 B/op
                 gc.count:            62.000 counts
                 gc.time:             78.000 ms
                 heap.memory.used.mb: 3.899 MB

Iteration   3: 1.996 ops/ms
                 gc.alloc.rate:       2439.667 MB/sec
                 gc.alloc.rate.norm:  1310344.798 B/op
                 gc.count:            63.000 counts
                 gc.time:             74.000 ms
                 heap.memory.used.mb: 3.782 MB

Iteration   4: 2.030 ops/ms
                 gc.alloc.rate:       2483.420 MB/sec
                 gc.alloc.rate.norm:  1310266.997 B/op
                 gc.count:            64.000 counts
                 gc.time:             70.000 ms
                 heap.memory.used.mb: 4.173 MB

Iteration   5: 2.035 ops/ms
                 gc.alloc.rate:       2479.221 MB/sec
                 gc.alloc.rate.norm:  1310441.209 B/op
                 gc.count:            64.000 counts
                 gc.time:             61.000 ms
                 heap.memory.used.mb: 40.678 MB



Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax":
  1.943 ±(99.9%) 0.557 ops/ms [Average]
  (min, avg, max) = (1.689, 1.943, 2.035), stdev = 0.145
  CI (99.9%): [1.386, 2.499] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate":
  2374.029 ±(99.9%) 662.837 MB/sec [Average]
  (min, avg, max) = (2072.794, 2374.029, 2483.420), stdev = 172.137
  CI (99.9%): [1711.192, 3036.867] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate.norm":
  1311128.026 ±(99.9%) 6002.754 B/op [Average]
  (min, avg, max) = (1310266.997, 1311128.026, 1313902.466), stdev = 1558.896
  CI (99.9%): [1305125.271, 1317130.780] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.count":
  310.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (57.000, 62.000, 64.000), stdev = 2.915
  CI (99.9%): [310.000, 310.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.time":
  359.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (61.000, 71.800, 78.000), stdev = 6.723
  CI (99.9%): [359.000, 359.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:heap.memory.used.mb":
  23.960 ±(99.9%) 111.540 MB [Average]
  (min, avg, max) = (3.782, 23.960, 67.269), stdev = 28.967
  CI (99.9%): [≈ 0, 135.500] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/gmoon/IdeaProjects/toy/spring-poi/src/test/resources/benchmark/excelsaxbenchmark/excelsaxbenchmark-heapdump.hprof -Dserver.port=9000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax
# Parameters: (excelDataRowSize = 100)

# Run progress: 27.78% complete, ETA 00:51:15
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0.189 ops/ms
Iteration   1: 0.505 ops/ms
                 gc.alloc.rate:       3053.641 MB/sec
                 gc.alloc.rate.norm:  6473255.213 B/op
                 gc.count:            63.000 counts
                 gc.time:             79.000 ms
                 heap.memory.used.mb: 82.459 MB

Iteration   2: 0.563 ops/ms
                 gc.alloc.rate:       3393.358 MB/sec
                 gc.alloc.rate.norm:  6465547.110 B/op
                 gc.count:            74.000 counts
                 gc.time:             80.000 ms
                 heap.memory.used.mb: 82.425 MB

Iteration   3: 0.578 ops/ms
                 gc.alloc.rate:       3487.680 MB/sec
                 gc.alloc.rate.norm:  6464633.071 B/op
                 gc.count:            83.000 counts
                 gc.time:             82.000 ms
                 heap.memory.used.mb: 10.832 MB

Iteration   4: 0.567 ops/ms
                 gc.alloc.rate:       3430.101 MB/sec
                 gc.alloc.rate.norm:  6464096.872 B/op
                 gc.count:            88.000 counts
                 gc.time:             78.000 ms
                 heap.memory.used.mb: 7.359 MB

Iteration   5: 0.576 ops/ms
                 gc.alloc.rate:       3445.356 MB/sec
                 gc.alloc.rate.norm:  6464266.404 B/op
                 gc.count:            56.000 counts
                 gc.time:             69.000 ms
                 heap.memory.used.mb: 5.175 MB


# Run progress: 29.17% complete, ETA 00:48:35
# Fork: 1 of 1
# Warmup Iteration   1: 0.182 ops/ms
Iteration   1: 0.422 ops/ms
                 gc.alloc.rate:       2552.991 MB/sec
                 gc.alloc.rate.norm:  6476792.877 B/op
                 gc.count:            51.000 counts
                 gc.time:             73.000 ms
                 heap.memory.used.mb: 70.468 MB

Iteration   2: 0.470 ops/ms
                 gc.alloc.rate:       2854.572 MB/sec
                 gc.alloc.rate.norm:  6466833.870 B/op
                 gc.count:            65.000 counts
                 gc.time:             74.000 ms
                 heap.memory.used.mb: 74.834 MB

Iteration   3: 0.553 ops/ms
                 gc.alloc.rate:       3352.310 MB/sec
                 gc.alloc.rate.norm:  6466115.037 B/op
                 gc.count:            73.000 counts
                 gc.time:             70.000 ms
                 heap.memory.used.mb: 53.344 MB

Iteration   4: 0.546 ops/ms
                 gc.alloc.rate:       3296.187 MB/sec
                 gc.alloc.rate.norm:  6465398.559 B/op
                 gc.count:            72.000 counts
                 gc.time:             80.000 ms
                 heap.memory.used.mb: 40.839 MB

Iteration   5: 0.565 ops/ms
                 gc.alloc.rate:       3403.506 MB/sec
                 gc.alloc.rate.norm:  6465749.032 B/op
                 gc.count:            78.000 counts
                 gc.time:             66.000 ms
                 heap.memory.used.mb: 5.872 MB



Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax":
  0.511 ±(99.9%) 0.240 ops/ms [Average]
  (min, avg, max) = (0.422, 0.511, 0.565), stdev = 0.062
  CI (99.9%): [0.272, 0.751] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate":
  3091.913 ±(99.9%) 1432.254 MB/sec [Average]
  (min, avg, max) = (2552.991, 3091.913, 3403.506), stdev = 371.952
  CI (99.9%): [1659.659, 4524.167] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate.norm":
  6468177.875 ±(99.9%) 18657.134 B/op [Average]
  (min, avg, max) = (6465398.559, 6468177.875, 6476792.877), stdev = 4845.198
  CI (99.9%): [6449520.741, 6486835.009] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.count":
  339.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (51.000, 67.800, 78.000), stdev = 10.474
  CI (99.9%): [339.000, 339.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.time":
  363.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (66.000, 72.600, 80.000), stdev = 5.177
  CI (99.9%): [363.000, 363.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:heap.memory.used.mb":
  49.071 ±(99.9%) 106.742 MB [Average]
  (min, avg, max) = (5.872, 49.071, 74.834), stdev = 27.720
  CI (99.9%): [≈ 0, 155.813] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/gmoon/IdeaProjects/toy/spring-poi/src/test/resources/benchmark/excelsaxbenchmark/excelsaxbenchmark-heapdump.hprof -Dserver.port=9000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax
# Parameters: (excelDataRowSize = 500)

# Run progress: 30.56% complete, ETA 00:46:08
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0.040 ops/ms
Iteration   1: 0.127 ops/ms
                 gc.alloc.rate:       3262.972 MB/sec
                 gc.alloc.rate.norm:  27443826.531 B/op
                 gc.count:            68.000 counts
                 gc.time:             81.000 ms
                 heap.memory.used.mb: 21.071 MB

Iteration   2: 0.132 ops/ms
                 gc.alloc.rate:       3386.368 MB/sec
                 gc.alloc.rate.norm:  27430803.291 B/op
                 gc.count:            77.000 counts
                 gc.time:             79.000 ms
                 heap.memory.used.mb: 61.798 MB

Iteration   3: 0.138 ops/ms
                 gc.alloc.rate:       3537.946 MB/sec
                 gc.alloc.rate.norm:  27423389.690 B/op
                 gc.count:            79.000 counts
                 gc.time:             80.000 ms
                 heap.memory.used.mb: 44.963 MB

Iteration   4: 0.140 ops/ms
                 gc.alloc.rate:       3595.421 MB/sec
                 gc.alloc.rate.norm:  27417071.089 B/op
                 gc.count:            78.000 counts
                 gc.time:             76.000 ms
                 heap.memory.used.mb: 63.671 MB

Iteration   5: 0.143 ops/ms
                 gc.alloc.rate:       3644.693 MB/sec
                 gc.alloc.rate.norm:  27417764.516 B/op
                 gc.count:            81.000 counts
                 gc.time:             75.000 ms
                 heap.memory.used.mb: 79.048 MB


# Run progress: 31.94% complete, ETA 00:43:53
# Fork: 1 of 1
# Warmup Iteration   1: 0.048 ops/ms
Iteration   1: 0.126 ops/ms
                 gc.alloc.rate:       3242.001 MB/sec
                 gc.alloc.rate.norm:  27426925.606 B/op
                 gc.count:            67.000 counts
                 gc.time:             76.000 ms
                 heap.memory.used.mb: 100.992 MB

Iteration   2: 0.134 ops/ms
                 gc.alloc.rate:       3424.203 MB/sec
                 gc.alloc.rate.norm:  27411827.004 B/op
                 gc.count:            76.000 counts
                 gc.time:             82.000 ms
                 heap.memory.used.mb: 59.817 MB

Iteration   3: 0.137 ops/ms
                 gc.alloc.rate:       3498.203 MB/sec
                 gc.alloc.rate.norm:  27399913.949 B/op
                 gc.count:            77.000 counts
                 gc.time:             80.000 ms
                 heap.memory.used.mb: 82.292 MB

Iteration   4: 0.138 ops/ms
                 gc.alloc.rate:       3557.050 MB/sec
                 gc.alloc.rate.norm:  27398546.388 B/op
                 gc.count:            77.000 counts
                 gc.time:             67.000 ms
                 heap.memory.used.mb: 80.030 MB

Iteration   5: 0.140 ops/ms
                 gc.alloc.rate:       3549.240 MB/sec
                 gc.alloc.rate.norm:  27400570.562 B/op
                 gc.count:            80.000 counts
                 gc.time:             83.000 ms
                 heap.memory.used.mb: 33.921 MB



Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax":
  0.135 ±(99.9%) 0.020 ops/ms [Average]
  (min, avg, max) = (0.126, 0.135, 0.140), stdev = 0.005
  CI (99.9%): [0.115, 0.155] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate":
  3454.139 ±(99.9%) 500.121 MB/sec [Average]
  (min, avg, max) = (3242.001, 3454.139, 3557.050), stdev = 129.880
  CI (99.9%): [2954.018, 3954.260] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate.norm":
  27407556.702 ±(99.9%) 46439.528 B/op [Average]
  (min, avg, max) = (27398546.388, 27407556.702, 27426925.606), stdev = 12060.198
  CI (99.9%): [27361117.174, 27453996.230] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.count":
  377.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (67.000, 75.400, 80.000), stdev = 4.930
  CI (99.9%): [377.000, 377.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.time":
  388.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (67.000, 77.600, 83.000), stdev = 6.504
  CI (99.9%): [388.000, 388.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:heap.memory.used.mb":
  71.411 ±(99.9%) 98.318 MB [Average]
  (min, avg, max) = (33.921, 71.411, 100.992), stdev = 25.533
  CI (99.9%): [≈ 0, 169.728] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/gmoon/IdeaProjects/toy/spring-poi/src/test/resources/benchmark/excelsaxbenchmark/excelsaxbenchmark-heapdump.hprof -Dserver.port=9000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax
# Parameters: (excelDataRowSize = 1000)

# Run progress: 33.33% complete, ETA 00:41:47
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0.024 ops/ms
Iteration   1: 0.065 ops/ms
                 gc.alloc.rate:       3249.826 MB/sec
                 gc.alloc.rate.norm:  53680019.938 B/op
                 gc.count:            63.000 counts
                 gc.time:             77.000 ms
                 heap.memory.used.mb: 34.424 MB

Iteration   2: 0.067 ops/ms
                 gc.alloc.rate:       3376.453 MB/sec
                 gc.alloc.rate.norm:  53662784.176 B/op
                 gc.count:            75.000 counts
                 gc.time:             82.000 ms
                 heap.memory.used.mb: 55.471 MB

Iteration   3: 0.068 ops/ms
                 gc.alloc.rate:       3418.722 MB/sec
                 gc.alloc.rate.norm:  53658724.964 B/op
                 gc.count:            75.000 counts
                 gc.time:             79.000 ms
                 heap.memory.used.mb: 79.324 MB

Iteration   4: 0.069 ops/ms
                 gc.alloc.rate:       3437.601 MB/sec
                 gc.alloc.rate.norm:  53652452.116 B/op
                 gc.count:            75.000 counts
                 gc.time:             81.000 ms
                 heap.memory.used.mb: 28.326 MB

Iteration   5: 0.069 ops/ms
                 gc.alloc.rate:       3448.317 MB/sec
                 gc.alloc.rate.norm:  53652884.914 B/op
                 gc.count:            75.000 counts
                 gc.time:             80.000 ms
                 heap.memory.used.mb: 96.182 MB


# Run progress: 34.72% complete, ETA 00:39:49
# Fork: 1 of 1
# Warmup Iteration   1: 0.022 ops/ms
Iteration   1: 0.064 ops/ms
                 gc.alloc.rate:       3194.279 MB/sec
                 gc.alloc.rate.norm:  53681285.938 B/op
                 gc.count:            63.000 counts
                 gc.time:             76.000 ms
                 heap.memory.used.mb: 109.532 MB

Iteration   2: 0.065 ops/ms
                 gc.alloc.rate:       3281.728 MB/sec
                 gc.alloc.rate.norm:  53664414.909 B/op
                 gc.count:            72.000 counts
                 gc.time:             79.000 ms
                 heap.memory.used.mb: 49.039 MB

Iteration   3: 0.067 ops/ms
                 gc.alloc.rate:       3355.346 MB/sec
                 gc.alloc.rate.norm:  53657941.511 B/op
                 gc.count:            74.000 counts
                 gc.time:             77.000 ms
                 heap.memory.used.mb: 69.575 MB

Iteration   4: 0.067 ops/ms
                 gc.alloc.rate:       3362.465 MB/sec
                 gc.alloc.rate.norm:  53652415.526 B/op
                 gc.count:            74.000 counts
                 gc.time:             83.000 ms
                 heap.memory.used.mb: 36.613 MB

Iteration   5: 0.068 ops/ms
                 gc.alloc.rate:       3387.837 MB/sec
                 gc.alloc.rate.norm:  53653012.380 B/op
                 gc.count:            75.000 counts
                 gc.time:             78.000 ms
                 heap.memory.used.mb: 82.575 MB



Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax":
  0.066 ±(99.9%) 0.007 ops/ms [Average]
  (min, avg, max) = (0.064, 0.066, 0.068), stdev = 0.002
  CI (99.9%): [0.060, 0.073] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate":
  3316.331 ±(99.9%) 303.552 MB/sec [Average]
  (min, avg, max) = (3194.279, 3316.331, 3387.837), stdev = 78.832
  CI (99.9%): [3012.779, 3619.883] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate.norm":
  53661814.053 ±(99.9%) 45833.869 B/op [Average]
  (min, avg, max) = (53652415.526, 53661814.053, 53681285.938), stdev = 11902.910
  CI (99.9%): [53615980.184, 53707647.922] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.count":
  358.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (63.000, 71.600, 75.000), stdev = 4.930
  CI (99.9%): [358.000, 358.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.time":
  393.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (76.000, 78.600, 83.000), stdev = 2.702
  CI (99.9%): [393.000, 393.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:heap.memory.used.mb":
  69.467 ±(99.9%) 110.160 MB [Average]
  (min, avg, max) = (36.613, 69.467, 109.532), stdev = 28.608
  CI (99.9%): [≈ 0, 179.627] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/gmoon/IdeaProjects/toy/spring-poi/src/test/resources/benchmark/excelsaxbenchmark/excelsaxbenchmark-heapdump.hprof -Dserver.port=9000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax
# Parameters: (excelDataRowSize = 5000)

# Run progress: 36.11% complete, ETA 00:38:00
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0.025 ops/ms
Iteration   1: 0.055 ops/ms
                 gc.alloc.rate:       2931.348 MB/sec
                 gc.alloc.rate.norm:  56647476.613 B/op
                 gc.count:            56.000 counts
                 gc.time:             79.000 ms
                 heap.memory.used.mb: 9.765 MB

Iteration   2: 0.052 ops/ms
                 gc.alloc.rate:       2733.194 MB/sec
                 gc.alloc.rate.norm:  56628532.000 B/op
                 gc.count:            171.000 counts
                 gc.time:             161.000 ms
                 heap.memory.used.mb: 22.787 MB

Iteration   3: 0.057 ops/ms
                 gc.alloc.rate:       2992.775 MB/sec
                 gc.alloc.rate.norm:  56622678.035 B/op
                 gc.count:            72.000 counts
                 gc.time:             90.000 ms
                 heap.memory.used.mb: 67.635 MB

Iteration   4: 0.051 ops/ms
                 gc.alloc.rate:       2715.002 MB/sec
                 gc.alloc.rate.norm:  56618495.231 B/op
                 gc.count:            196.000 counts
                 gc.time:             180.000 ms
                 heap.memory.used.mb: 56.924 MB

Iteration   5: 0.053 ops/ms
                 gc.alloc.rate:       2790.726 MB/sec
                 gc.alloc.rate.norm:  56620499.364 B/op
                 gc.count:            161.000 counts
                 gc.time:             162.000 ms
                 heap.memory.used.mb: 81.415 MB


# Run progress: 37.50% complete, ETA 00:36:17
# Fork: 1 of 1
# Warmup Iteration   1: 0.020 ops/ms
Iteration   1: 0.053 ops/ms
                 gc.alloc.rate:       2805.700 MB/sec
                 gc.alloc.rate.norm:  56649157.907 B/op
                 gc.count:            102.000 counts
                 gc.time:             110.000 ms
                 heap.memory.used.mb: 142.366 MB

Iteration   2: 0.054 ops/ms
                 gc.alloc.rate:       2844.325 MB/sec
                 gc.alloc.rate.norm:  56635238.889 B/op
                 gc.count:            135.000 counts
                 gc.time:             140.000 ms
                 heap.memory.used.mb: 56.865 MB

Iteration   3: 0.052 ops/ms
                 gc.alloc.rate:       2764.275 MB/sec
                 gc.alloc.rate.norm:  56624285.867 B/op
                 gc.count:            145.000 counts
                 gc.time:             150.000 ms
                 heap.memory.used.mb: 18.563 MB

Iteration   4: 0.058 ops/ms
                 gc.alloc.rate:       3082.069 MB/sec
                 gc.alloc.rate.norm:  56621168.137 B/op
                 gc.count:            65.000 counts
                 gc.time:             84.000 ms
                 heap.memory.used.mb: 210.963 MB

Iteration   5: 0.057 ops/ms
                 gc.alloc.rate:       2990.607 MB/sec
                 gc.alloc.rate.norm:  56621248.421 B/op
                 gc.count:            110.000 counts
                 gc.time:             119.000 ms
                 heap.memory.used.mb: 81.430 MB



Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax":
  0.055 ±(99.9%) 0.010 ops/ms [Average]
  (min, avg, max) = (0.052, 0.055, 0.058), stdev = 0.003
  CI (99.9%): [0.045, 0.065] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate":
  2897.395 ±(99.9%) 515.677 MB/sec [Average]
  (min, avg, max) = (2764.275, 2897.395, 3082.069), stdev = 133.920
  CI (99.9%): [2381.718, 3413.072] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate.norm":
  56630219.844 ±(99.9%) 46426.733 B/op [Average]
  (min, avg, max) = (56621168.137, 56630219.844, 56649157.907), stdev = 12056.875
  CI (99.9%): [56583793.111, 56676646.577] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.count":
  557.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (65.000, 111.400, 145.000), stdev = 31.342
  CI (99.9%): [557.000, 557.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.time":
  603.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (84.000, 120.600, 150.000), stdev = 25.958
  CI (99.9%): [603.000, 603.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:heap.memory.used.mb":
  102.037 ±(99.9%) 291.508 MB [Average]
  (min, avg, max) = (18.563, 102.037, 210.963), stdev = 75.704
  CI (99.9%): [≈ 0, 393.546] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/gmoon/IdeaProjects/toy/spring-poi/src/test/resources/benchmark/excelsaxbenchmark/excelsaxbenchmark-heapdump.hprof -Dserver.port=9000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax
# Parameters: (excelDataRowSize = 10000)

# Run progress: 38.89% complete, ETA 00:34:40
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0.023 ops/ms
Iteration   1: 0.044 ops/ms
                 gc.alloc.rate:       2493.131 MB/sec
                 gc.alloc.rate.norm:  60463956.764 B/op
                 gc.count:            236.000 counts
                 gc.time:             201.000 ms
                 heap.memory.used.mb: 61.452 MB

Iteration   2: 0.045 ops/ms
                 gc.alloc.rate:       2539.577 MB/sec
                 gc.alloc.rate.norm:  60452236.484 B/op
                 gc.count:            249.000 counts
                 gc.time:             213.000 ms
                 heap.memory.used.mb: 61.879 MB

Iteration   3: 0.046 ops/ms
                 gc.alloc.rate:       2571.868 MB/sec
                 gc.alloc.rate.norm:  60443173.565 B/op
                 gc.count:            245.000 counts
                 gc.time:             209.000 ms
                 heap.memory.used.mb: 61.941 MB

Iteration   4: 0.047 ops/ms
                 gc.alloc.rate:       2669.431 MB/sec
                 gc.alloc.rate.norm:  60440693.811 B/op
                 gc.count:            210.000 counts
                 gc.time:             189.000 ms
                 heap.memory.used.mb: 61.354 MB

Iteration   5: 0.046 ops/ms
                 gc.alloc.rate:       2595.705 MB/sec
                 gc.alloc.rate.norm:  60444418.151 B/op
                 gc.count:            223.000 counts
                 gc.time:             203.000 ms
                 heap.memory.used.mb: 86.437 MB


# Run progress: 40.28% complete, ETA 00:33:09
# Fork: 1 of 1
# Warmup Iteration   1: 0.023 ops/ms
Iteration   1: 0.051 ops/ms
                 gc.alloc.rate:       2862.564 MB/sec
                 gc.alloc.rate.norm:  60462953.647 B/op
                 gc.count:            64.000 counts
                 gc.time:             85.000 ms
                 heap.memory.used.mb: 61.776 MB

Iteration   2: 0.052 ops/ms
                 gc.alloc.rate:       2929.467 MB/sec
                 gc.alloc.rate.norm:  60448928.308 B/op
                 gc.count:            78.000 counts
                 gc.time:             93.000 ms
                 heap.memory.used.mb: 114.811 MB

Iteration   3: 0.050 ops/ms
                 gc.alloc.rate:       2839.366 MB/sec
                 gc.alloc.rate.norm:  60441944.713 B/op
                 gc.count:            146.000 counts
                 gc.time:             137.000 ms
                 heap.memory.used.mb: 24.788 MB

Iteration   4: 0.051 ops/ms
                 gc.alloc.rate:       2877.813 MB/sec
                 gc.alloc.rate.norm:  60439574.602 B/op
                 gc.count:            128.000 counts
                 gc.time:             136.000 ms
                 heap.memory.used.mb: 106.387 MB

Iteration   5: 0.050 ops/ms
                 gc.alloc.rate:       2807.238 MB/sec
                 gc.alloc.rate.norm:  60439959.604 B/op
                 gc.count:            151.000 counts
                 gc.time:             145.000 ms
                 heap.memory.used.mb: 46.579 MB



Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax":
  0.051 ±(99.9%) 0.003 ops/ms [Average]
  (min, avg, max) = (0.050, 0.051, 0.052), stdev = 0.001
  CI (99.9%): [0.048, 0.054] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate":
  2863.290 ±(99.9%) 175.459 MB/sec [Average]
  (min, avg, max) = (2807.238, 2863.290, 2929.467), stdev = 45.566
  CI (99.9%): [2687.830, 3038.749] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate.norm":
  60446672.175 ±(99.9%) 37922.466 B/op [Average]
  (min, avg, max) = (60439574.602, 60446672.175, 60462953.647), stdev = 9848.344
  CI (99.9%): [60408749.709, 60484594.641] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.count":
  567.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (64.000, 113.400, 151.000), stdev = 39.947
  CI (99.9%): [567.000, 567.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.time":
  596.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (85.000, 119.200, 145.000), stdev = 27.932
  CI (99.9%): [596.000, 596.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:heap.memory.used.mb":
  70.868 ±(99.9%) 148.992 MB [Average]
  (min, avg, max) = (24.788, 70.868, 114.811), stdev = 38.693
  CI (99.9%): [≈ 0, 219.861] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/gmoon/IdeaProjects/toy/spring-poi/src/test/resources/benchmark/excelsaxbenchmark/excelsaxbenchmark-heapdump.hprof -Dserver.port=9000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax
# Parameters: (excelDataRowSize = 15000)

# Run progress: 41.67% complete, ETA 00:31:43
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0.021 ops/ms
Iteration   1: 0.045 ops/ms
                 gc.alloc.rate:       2794.022 MB/sec
                 gc.alloc.rate.norm:  66415862.505 B/op
                 gc.count:            131.000 counts
                 gc.time:             132.000 ms
                 heap.memory.used.mb: 13.172 MB

Iteration   2: 0.046 ops/ms
                 gc.alloc.rate:       2829.264 MB/sec
                 gc.alloc.rate.norm:  66404266.783 B/op
                 gc.count:            143.000 counts
                 gc.time:             143.000 ms
                 heap.memory.used.mb: 35.624 MB

Iteration   3: 0.046 ops/ms
                 gc.alloc.rate:       2879.249 MB/sec
                 gc.alloc.rate.norm:  66394971.269 B/op
                 gc.count:            146.000 counts
                 gc.time:             141.000 ms
                 heap.memory.used.mb: 134.389 MB

Iteration   4: 0.048 ops/ms
                 gc.alloc.rate:       3001.973 MB/sec
                 gc.alloc.rate.norm:  66392471.175 B/op
                 gc.count:            81.000 counts
                 gc.time:             99.000 ms
                 heap.memory.used.mb: 134.613 MB

Iteration   5: 0.047 ops/ms
                 gc.alloc.rate:       2880.454 MB/sec
                 gc.alloc.rate.norm:  66395696.511 B/op
                 gc.count:            121.000 counts
                 gc.time:             133.000 ms
                 heap.memory.used.mb: 45.475 MB


# Run progress: 43.06% complete, ETA 00:30:21
# Fork: 1 of 1
# Warmup Iteration   1: 0.021 ops/ms
Iteration   1: 0.045 ops/ms
                 gc.alloc.rate:       2792.088 MB/sec
                 gc.alloc.rate.norm:  66417087.022 B/op
                 gc.count:            149.000 counts
                 gc.time:             136.000 ms
                 heap.memory.used.mb: 67.638 MB

Iteration   2: 0.046 ops/ms
                 gc.alloc.rate:       2877.567 MB/sec
                 gc.alloc.rate.norm:  66404338.638 B/op
                 gc.count:            143.000 counts
                 gc.time:             144.000 ms
                 heap.memory.used.mb: 67.866 MB

Iteration   3: 0.046 ops/ms
                 gc.alloc.rate:       2861.763 MB/sec
                 gc.alloc.rate.norm:  66395081.204 B/op
                 gc.count:            150.000 counts
                 gc.time:             145.000 ms
                 heap.memory.used.mb: 135.246 MB

Iteration   4: 0.045 ops/ms
                 gc.alloc.rate:       2791.040 MB/sec
                 gc.alloc.rate.norm:  66392342.133 B/op
                 gc.count:            201.000 counts
                 gc.time:             178.000 ms
                 heap.memory.used.mb: 67.933 MB

Iteration   5: 0.047 ops/ms
                 gc.alloc.rate:       2876.972 MB/sec
                 gc.alloc.rate.norm:  66395597.137 B/op
                 gc.count:            111.000 counts
                 gc.time:             130.000 ms
                 heap.memory.used.mb: 45.457 MB



Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax":
  0.046 ±(99.9%) 0.004 ops/ms [Average]
  (min, avg, max) = (0.045, 0.046, 0.047), stdev = 0.001
  CI (99.9%): [0.042, 0.049] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate":
  2839.886 ±(99.9%) 171.607 MB/sec [Average]
  (min, avg, max) = (2791.040, 2839.886, 2877.567), stdev = 44.566
  CI (99.9%): [2668.279, 3011.493] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate.norm":
  66400889.227 ±(99.9%) 38940.043 B/op [Average]
  (min, avg, max) = (66392342.133, 66400889.227, 66417087.022), stdev = 10112.606
  CI (99.9%): [66361949.184, 66439829.270] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.count":
  754.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (111.000, 150.800, 201.000), stdev = 32.283
  CI (99.9%): [754.000, 754.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.time":
  733.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (130.000, 146.600, 178.000), stdev = 18.596
  CI (99.9%): [733.000, 733.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:heap.memory.used.mb":
  76.828 ±(99.9%) 131.159 MB [Average]
  (min, avg, max) = (45.457, 76.828, 135.246), stdev = 34.062
  CI (99.9%): [≈ 0, 207.987] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/gmoon/IdeaProjects/toy/spring-poi/src/test/resources/benchmark/excelsaxbenchmark/excelsaxbenchmark-heapdump.hprof -Dserver.port=9000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax
# Parameters: (excelDataRowSize = 100000)

# Run progress: 44.44% complete, ETA 00:29:03
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0.011 ops/ms
Iteration   1: 0.021 ops/ms
                 gc.alloc.rate:       3106.479 MB/sec
                 gc.alloc.rate.norm:  155052215.814 B/op
                 gc.count:            60.000 counts
                 gc.time:             87.000 ms
                 heap.memory.used.mb: 155.877 MB

Iteration   2: 0.023 ops/ms
                 gc.alloc.rate:       3325.057 MB/sec
                 gc.alloc.rate.norm:  155047333.391 B/op
                 gc.count:            62.000 counts
                 gc.time:             76.000 ms
                 heap.memory.used.mb: 82.163 MB

Iteration   3: 0.023 ops/ms
                 gc.alloc.rate:       3317.885 MB/sec
                 gc.alloc.rate.norm:  155047323.826 B/op
                 gc.count:            67.000 counts
                 gc.time:             82.000 ms
                 heap.memory.used.mb: 83.140 MB

Iteration   4: 0.023 ops/ms
                 gc.alloc.rate:       3350.183 MB/sec
                 gc.alloc.rate.norm:  155031166.979 B/op
                 gc.count:            67.000 counts
                 gc.time:             83.000 ms
                 heap.memory.used.mb: 155.815 MB

Iteration   5: 0.023 ops/ms
                 gc.alloc.rate:       3347.664 MB/sec
                 gc.alloc.rate.norm:  155039879.149 B/op
                 gc.count:            67.000 counts
                 gc.time:             82.000 ms
                 heap.memory.used.mb: 161.365 MB


# Run progress: 45.83% complete, ETA 00:27:49
# Fork: 1 of 1
# Warmup Iteration   1: 0.011 ops/ms
Iteration   1: 0.022 ops/ms
                 gc.alloc.rate:       3260.328 MB/sec
                 gc.alloc.rate.norm:  155015937.067 B/op
                 gc.count:            63.000 counts
                 gc.time:             76.000 ms
                 heap.memory.used.mb: 238.692 MB

Iteration   2: 0.023 ops/ms
                 gc.alloc.rate:       3314.482 MB/sec
                 gc.alloc.rate.norm:  155011737.043 B/op
                 gc.count:            64.000 counts
                 gc.time:             81.000 ms
                 heap.memory.used.mb: 81.682 MB

Iteration   3: 0.023 ops/ms
                 gc.alloc.rate:       3310.087 MB/sec
                 gc.alloc.rate.norm:  155008467.478 B/op
                 gc.count:            64.000 counts
                 gc.time:             84.000 ms
                 heap.memory.used.mb: 81.706 MB

Iteration   4: 0.023 ops/ms
                 gc.alloc.rate:       3329.743 MB/sec
                 gc.alloc.rate.norm:  154995549.043 B/op
                 gc.count:            65.000 counts
                 gc.time:             79.000 ms
                 heap.memory.used.mb: 81.165 MB

Iteration   5: 0.023 ops/ms
                 gc.alloc.rate:       3306.047 MB/sec
                 gc.alloc.rate.norm:  155006112.696 B/op
                 gc.count:            64.000 counts
                 gc.time:             70.000 ms
                 heap.memory.used.mb: 86.756 MB



Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax":
  0.023 ±(99.9%) 0.001 ops/ms [Average]
  (min, avg, max) = (0.022, 0.023, 0.023), stdev = 0.001
  CI (99.9%): [0.022, 0.024] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate":
  3304.137 ±(99.9%) 100.430 MB/sec [Average]
  (min, avg, max) = (3260.328, 3304.137, 3329.743), stdev = 26.081
  CI (99.9%): [3203.707, 3404.567] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate.norm":
  155007560.666 ±(99.9%) 29502.330 B/op [Average]
  (min, avg, max) = (154995549.043, 155007560.666, 155015937.067), stdev = 7661.661
  CI (99.9%): [154978058.336, 155037062.995] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.count":
  320.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (63.000, 64.000, 65.000), stdev = 0.707
  CI (99.9%): [320.000, 320.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.time":
  390.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (70.000, 78.000, 84.000), stdev = 5.339
  CI (99.9%): [390.000, 390.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:heap.memory.used.mb":
  114.000 ±(99.9%) 268.551 MB [Average]
  (min, avg, max) = (81.165, 114.000, 238.692), stdev = 69.742
  CI (99.9%): [≈ 0, 382.551] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/gmoon/IdeaProjects/toy/spring-poi/src/test/resources/benchmark/excelsaxbenchmark/excelsaxbenchmark-heapdump.hprof -Dserver.port=9000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax
# Parameters: (excelDataRowSize = 150000)

# Run progress: 47.22% complete, ETA 00:26:38
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0.009 ops/ms
Iteration   1: 0.017 ops/ms
                 gc.alloc.rate:       2800.787 MB/sec
                 gc.alloc.rate.norm:  172943127.314 B/op
                 gc.count:            86.000 counts
                 gc.time:             94.000 ms
                 heap.memory.used.mb: 53.180 MB

Iteration   2: 0.018 ops/ms
                 gc.alloc.rate:       2913.125 MB/sec
                 gc.alloc.rate.norm:  172938788.541 B/op
                 gc.count:            95.000 counts
                 gc.time:             105.000 ms
                 heap.memory.used.mb: 56.159 MB

Iteration   3: 0.018 ops/ms
                 gc.alloc.rate:       2930.324 MB/sec
                 gc.alloc.rate.norm:  172933261.838 B/op
                 gc.count:            96.000 counts
                 gc.time:             102.000 ms
                 heap.memory.used.mb: 56.054 MB

Iteration   4: 0.018 ops/ms
                 gc.alloc.rate:       2935.456 MB/sec
                 gc.alloc.rate.norm:  172930760.432 B/op
                 gc.count:            97.000 counts
                 gc.time:             103.000 ms
                 heap.memory.used.mb: 56.068 MB

Iteration   5: 0.018 ops/ms
                 gc.alloc.rate:       2911.555 MB/sec
                 gc.alloc.rate.norm:  172938699.027 B/op
                 gc.count:            98.000 counts
                 gc.time:             107.000 ms
                 heap.memory.used.mb: 60.954 MB


# Run progress: 48.61% complete, ETA 00:25:31
# Fork: 1 of 1
# Warmup Iteration   1: 0.009 ops/ms
Iteration   1: 0.018 ops/ms
                 gc.alloc.rate:       2884.055 MB/sec
                 gc.alloc.rate.norm:  172976373.778 B/op
                 gc.count:            91.000 counts
                 gc.time:             94.000 ms
                 heap.memory.used.mb: 54.221 MB

Iteration   2: 0.018 ops/ms
                 gc.alloc.rate:       2931.041 MB/sec
                 gc.alloc.rate.norm:  172972152.000 B/op
                 gc.count:            95.000 counts
                 gc.time:             96.000 ms
                 heap.memory.used.mb: 53.131 MB

Iteration   3: 0.018 ops/ms
                 gc.alloc.rate:       2911.254 MB/sec
                 gc.alloc.rate.norm:  172966766.444 B/op
                 gc.count:            91.000 counts
                 gc.time:             102.000 ms
                 heap.memory.used.mb: 56.126 MB

Iteration   4: 0.018 ops/ms
                 gc.alloc.rate:       2950.054 MB/sec
                 gc.alloc.rate.norm:  172962798.270 B/op
                 gc.count:            96.000 counts
                 gc.time:             104.000 ms
                 heap.memory.used.mb: 56.118 MB

Iteration   5: 0.018 ops/ms
                 gc.alloc.rate:       2933.571 MB/sec
                 gc.alloc.rate.norm:  172970836.324 B/op
                 gc.count:            97.000 counts
                 gc.time:             107.000 ms
                 heap.memory.used.mb: 62.612 MB



Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax":
  0.018 ±(99.9%) 0.001 ops/ms [Average]
  (min, avg, max) = (0.018, 0.018, 0.018), stdev = 0.001
  CI (99.9%): [0.017, 0.019] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate":
  2921.995 ±(99.9%) 97.376 MB/sec [Average]
  (min, avg, max) = (2884.055, 2921.995, 2950.054), stdev = 25.288
  CI (99.9%): [2824.619, 3019.371] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate.norm":
  172969785.363 ±(99.9%) 20012.797 B/op [Average]
  (min, avg, max) = (172962798.270, 172969785.363, 172976373.778), stdev = 5197.260
  CI (99.9%): [172949772.567, 172989798.160] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.count":
  470.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (91.000, 94.000, 97.000), stdev = 2.828
  CI (99.9%): [470.000, 470.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.time":
  503.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (94.000, 100.600, 107.000), stdev = 5.459
  CI (99.9%): [503.000, 503.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:heap.memory.used.mb":
  56.442 ±(99.9%) 14.170 MB [Average]
  (min, avg, max) = (53.131, 56.442, 62.612), stdev = 3.680
  CI (99.9%): [42.272, 70.612] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/gmoon/IdeaProjects/toy/spring-poi/src/test/resources/benchmark/excelsaxbenchmark/excelsaxbenchmark-heapdump.hprof -Dserver.port=9000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom
# Parameters: (excelDataRowSize = 1)

# Run progress: 50.00% complete, ETA 00:24:26
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 4.107 ms/op
Iteration   1: 1.362 ms/op
                 gc.alloc.rate:       1391.456 MB/sec
                 gc.alloc.rate.norm:  2028522.243 B/op
                 gc.count:            39.000 counts
                 gc.time:             66.000 ms
                 heap.memory.used.mb: 43.256 MB

Iteration   2: 1.134 ms/op
                 gc.alloc.rate:       1663.030 MB/sec
                 gc.alloc.rate.norm:  2020654.878 B/op
                 gc.count:            42.000 counts
                 gc.time:             63.000 ms
                 heap.memory.used.mb: 21.176 MB

Iteration   3: 1.100 ms/op
                 gc.alloc.rate:       1712.635 MB/sec
                 gc.alloc.rate.norm:  2019495.627 B/op
                 gc.count:            43.000 counts
                 gc.time:             66.000 ms
                 heap.memory.used.mb: 45.664 MB

Iteration   4: 1.093 ms/op
                 gc.alloc.rate:       1726.757 MB/sec
                 gc.alloc.rate.norm:  2019117.258 B/op
                 gc.count:            43.000 counts
                 gc.time:             62.000 ms
                 heap.memory.used.mb: 66.117 MB

Iteration   5: 1.082 ms/op
                 gc.alloc.rate:       1728.647 MB/sec
                 gc.alloc.rate.norm:  2019372.926 B/op
                 gc.count:            44.000 counts
                 gc.time:             66.000 ms
                 heap.memory.used.mb: 21.197 MB


# Run progress: 51.39% complete, ETA 00:23:23
# Fork: 1 of 1
# Warmup Iteration   1: 4.462 ms/op
Iteration   1: 1.375 ms/op
                 gc.alloc.rate:       1377.587 MB/sec
                 gc.alloc.rate.norm:  2028562.206 B/op
                 gc.count:            40.000 counts
                 gc.time:             70.000 ms
                 heap.memory.used.mb: 82.313 MB

Iteration   2: 1.133 ms/op
                 gc.alloc.rate:       1663.224 MB/sec
                 gc.alloc.rate.norm:  2021072.579 B/op
                 gc.count:            45.000 counts
                 gc.time:             67.000 ms
                 heap.memory.used.mb: 25.739 MB

Iteration   3: 1.099 ms/op
                 gc.alloc.rate:       1717.584 MB/sec
                 gc.alloc.rate.norm:  2019643.630 B/op
                 gc.count:            44.000 counts
                 gc.time:             60.000 ms
                 heap.memory.used.mb: 50.621 MB

Iteration   4: 1.134 ms/op
                 gc.alloc.rate:       1663.786 MB/sec
                 gc.alloc.rate.norm:  2019226.462 B/op
                 gc.count:            43.000 counts
                 gc.time:             61.000 ms
                 heap.memory.used.mb: 20.154 MB

Iteration   5: 1.081 ms/op
                 gc.alloc.rate:       1729.938 MB/sec
                 gc.alloc.rate.norm:  2019460.640 B/op
                 gc.count:            45.000 counts
                 gc.time:             64.000 ms
                 heap.memory.used.mb: 30.138 MB



Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom":
  1.165 ±(99.9%) 0.461 ms/op [Average]
  (min, avg, max) = (1.081, 1.165, 1.375), stdev = 0.120
  CI (99.9%): [0.703, 1.626] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate":
  1630.424 ±(99.9%) 556.732 MB/sec [Average]
  (min, avg, max) = (1377.587, 1630.424, 1729.938), stdev = 144.581
  CI (99.9%): [1073.692, 2187.156] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate.norm":
  2021593.103 ±(99.9%) 15256.057 B/op [Average]
  (min, avg, max) = (2019226.462, 2021593.103, 2028562.206), stdev = 3961.949
  CI (99.9%): [2006337.047, 2036849.160] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.count":
  217.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (40.000, 43.400, 45.000), stdev = 2.074
  CI (99.9%): [217.000, 217.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.time":
  322.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (60.000, 64.400, 70.000), stdev = 4.159
  CI (99.9%): [322.000, 322.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:heap.memory.used.mb":
  41.793 ±(99.9%) 97.825 MB [Average]
  (min, avg, max) = (20.154, 41.793, 82.313), stdev = 25.405
  CI (99.9%): [≈ 0, 139.618] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/gmoon/IdeaProjects/toy/spring-poi/src/test/resources/benchmark/excelsaxbenchmark/excelsaxbenchmark-heapdump.hprof -Dserver.port=9000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom
# Parameters: (excelDataRowSize = 100)

# Run progress: 52.78% complete, ETA 00:22:23
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 11.720 ms/op
Iteration   1: 3.176 ms/op
                 gc.alloc.rate:       2144.611 MB/sec
                 gc.alloc.rate.norm:  7302152.722 B/op
                 gc.count:            48.000 counts
                 gc.time:             73.000 ms
                 heap.memory.used.mb: 6.932 MB

Iteration   2: 2.655 ms/op
                 gc.alloc.rate:       2556.411 MB/sec
                 gc.alloc.rate.norm:  7275967.725 B/op
                 gc.count:            68.000 counts
                 gc.time:             79.000 ms
                 heap.memory.used.mb: 20.159 MB

Iteration   3: 2.555 ms/op
                 gc.alloc.rate:       2658.855 MB/sec
                 gc.alloc.rate.norm:  7273865.121 B/op
                 gc.count:            68.000 counts
                 gc.time:             76.000 ms
                 heap.memory.used.mb: 68.799 MB

Iteration   4: 2.551 ms/op
                 gc.alloc.rate:       2663.289 MB/sec
                 gc.alloc.rate.norm:  7273412.265 B/op
                 gc.count:            68.000 counts
                 gc.time:             74.000 ms
                 heap.memory.used.mb: 75.901 MB

Iteration   5: 2.534 ms/op
                 gc.alloc.rate:       2659.355 MB/sec
                 gc.alloc.rate.norm:  7273615.364 B/op
                 gc.count:            69.000 counts
                 gc.time:             78.000 ms
                 heap.memory.used.mb: 39.958 MB


# Run progress: 54.17% complete, ETA 00:21:25
# Fork: 1 of 1
# Warmup Iteration   1: 10.815 ms/op
Iteration   1: 3.096 ms/op
                 gc.alloc.rate:       2195.834 MB/sec
                 gc.alloc.rate.norm:  7278604.049 B/op
                 gc.count:            48.000 counts
                 gc.time:             72.000 ms
                 heap.memory.used.mb: 43.931 MB

Iteration   2: 2.943 ms/op
                 gc.alloc.rate:       2300.011 MB/sec
                 gc.alloc.rate.norm:  7256912.856 B/op
                 gc.count:            58.000 counts
                 gc.time:             75.000 ms
                 heap.memory.used.mb: 66.299 MB

Iteration   3: 2.598 ms/op
                 gc.alloc.rate:       2604.875 MB/sec
                 gc.alloc.rate.norm:  7255295.140 B/op
                 gc.count:            64.000 counts
                 gc.time:             76.000 ms
                 heap.memory.used.mb: 11.694 MB

Iteration   4: 2.564 ms/op
                 gc.alloc.rate:       2643.065 MB/sec
                 gc.alloc.rate.norm:  7254722.830 B/op
                 gc.count:            65.000 counts
                 gc.time:             75.000 ms
                 heap.memory.used.mb: 1.844 MB

Iteration   5: 2.558 ms/op
                 gc.alloc.rate:       2627.275 MB/sec
                 gc.alloc.rate.norm:  7255088.867 B/op
                 gc.count:            65.000 counts
                 gc.time:             75.000 ms
                 heap.memory.used.mb: 12.314 MB



Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom":
  2.752 ±(99.9%) 0.966 ms/op [Average]
  (min, avg, max) = (2.558, 2.752, 3.096), stdev = 0.251
  CI (99.9%): [1.786, 3.718] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate":
  2474.212 ±(99.9%) 809.672 MB/sec [Average]
  (min, avg, max) = (2195.834, 2474.212, 2643.065), stdev = 210.269
  CI (99.9%): [1664.540, 3283.884] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate.norm":
  7260124.749 ±(99.9%) 39908.852 B/op [Average]
  (min, avg, max) = (7254722.830, 7260124.749, 7278604.049), stdev = 10364.202
  CI (99.9%): [7220215.896, 7300033.601] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.count":
  300.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (48.000, 60.000, 65.000), stdev = 7.314
  CI (99.9%): [300.000, 300.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.time":
  373.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (72.000, 74.600, 76.000), stdev = 1.517
  CI (99.9%): [373.000, 373.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:heap.memory.used.mb":
  27.217 ±(99.9%) 103.925 MB [Average]
  (min, avg, max) = (1.844, 27.217, 66.299), stdev = 26.989
  CI (99.9%): [≈ 0, 131.142] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/gmoon/IdeaProjects/toy/spring-poi/src/test/resources/benchmark/excelsaxbenchmark/excelsaxbenchmark-heapdump.hprof -Dserver.port=9000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom
# Parameters: (excelDataRowSize = 500)

# Run progress: 55.56% complete, ETA 00:20:29
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 42.229 ms/op
Iteration   1: 10.503 ms/op
                 gc.alloc.rate:       2531.448 MB/sec
                 gc.alloc.rate.norm:  28594567.204 B/op
                 gc.count:            53.000 counts
                 gc.time:             96.000 ms
                 heap.memory.used.mb: 21.707 MB

Iteration   2: 9.413 ms/op
                 gc.alloc.rate:       2829.172 MB/sec
                 gc.alloc.rate.norm:  28539793.607 B/op
                 gc.count:            57.000 counts
                 gc.time:             90.000 ms
                 heap.memory.used.mb: 32.689 MB

Iteration   3: 9.171 ms/op
                 gc.alloc.rate:       2900.909 MB/sec
                 gc.alloc.rate.norm:  28527308.218 B/op
                 gc.count:            57.000 counts
                 gc.time:             91.000 ms
                 heap.memory.used.mb: 63.614 MB

Iteration   4: 8.960 ms/op
                 gc.alloc.rate:       2973.979 MB/sec
                 gc.alloc.rate.norm:  28524591.143 B/op
                 gc.count:            58.000 counts
                 gc.time:             89.000 ms
                 heap.memory.used.mb: 90.502 MB

Iteration   5: 8.811 ms/op
                 gc.alloc.rate:       3000.448 MB/sec
                 gc.alloc.rate.norm:  28527121.789 B/op
                 gc.count:            59.000 counts
                 gc.time:             92.000 ms
                 heap.memory.used.mb: 25.542 MB


# Run progress: 56.94% complete, ETA 00:19:35
# Fork: 1 of 1
# Warmup Iteration   1: 31.457 ms/op
Iteration   1: 10.530 ms/op
                 gc.alloc.rate:       2539.001 MB/sec
                 gc.alloc.rate.norm:  28585694.618 B/op
                 gc.count:            58.000 counts
                 gc.time:             85.000 ms
                 heap.memory.used.mb: 13.390 MB

Iteration   2: 9.649 ms/op
                 gc.alloc.rate:       2758.375 MB/sec
                 gc.alloc.rate.norm:  28538063.385 B/op
                 gc.count:            54.000 counts
                 gc.time:             91.000 ms
                 heap.memory.used.mb: 19.689 MB

Iteration   3: 9.271 ms/op
                 gc.alloc.rate:       2870.063 MB/sec
                 gc.alloc.rate.norm:  28528049.106 B/op
                 gc.count:            57.000 counts
                 gc.time:             90.000 ms
                 heap.memory.used.mb: 113.632 MB

Iteration   4: 9.289 ms/op
                 gc.alloc.rate:       2861.850 MB/sec
                 gc.alloc.rate.norm:  28525280.704 B/op
                 gc.count:            56.000 counts
                 gc.time:             93.000 ms
                 heap.memory.used.mb: 15.731 MB

Iteration   5: 9.051 ms/op
                 gc.alloc.rate:       2919.210 MB/sec
                 gc.alloc.rate.norm:  28527705.874 B/op
                 gc.count:            56.000 counts
                 gc.time:             92.000 ms
                 heap.memory.used.mb: 70.293 MB



Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom":
  9.558 ±(99.9%) 2.250 ms/op [Average]
  (min, avg, max) = (9.051, 9.558, 10.530), stdev = 0.584
  CI (99.9%): [7.308, 11.808] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate":
  2789.700 ±(99.9%) 584.829 MB/sec [Average]
  (min, avg, max) = (2539.001, 2789.700, 2919.210), stdev = 151.878
  CI (99.9%): [2204.870, 3374.529] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate.norm":
  28540958.737 ±(99.9%) 98130.617 B/op [Average]
  (min, avg, max) = (28525280.704, 28540958.737, 28585694.618), stdev = 25484.210
  CI (99.9%): [28442828.120, 28639089.355] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.count":
  281.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (54.000, 56.200, 58.000), stdev = 1.483
  CI (99.9%): [281.000, 281.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.time":
  451.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (85.000, 90.200, 93.000), stdev = 3.114
  CI (99.9%): [451.000, 451.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:heap.memory.used.mb":
  46.547 ±(99.9%) 170.417 MB [Average]
  (min, avg, max) = (13.390, 46.547, 113.632), stdev = 44.257
  CI (99.9%): [≈ 0, 216.964] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/gmoon/IdeaProjects/toy/spring-poi/src/test/resources/benchmark/excelsaxbenchmark/excelsaxbenchmark-heapdump.hprof -Dserver.port=9000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom
# Parameters: (excelDataRowSize = 1000)

# Run progress: 58.33% complete, ETA 00:18:43
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 60.465 ms/op
Iteration   1: 20.169 ms/op
                 gc.alloc.rate:       2559.832 MB/sec
                 gc.alloc.rate.norm:  55250840.560 B/op
                 gc.count:            45.000 counts
                 gc.time:             94.000 ms
                 heap.memory.used.mb: 27.880 MB

Iteration   2: 18.687 ms/op
                 gc.alloc.rate:       2752.977 MB/sec
                 gc.alloc.rate.norm:  55212055.556 B/op
                 gc.count:            49.000 counts
                 gc.time:             103.000 ms
                 heap.memory.used.mb: 30.902 MB

Iteration   3: 18.382 ms/op
                 gc.alloc.rate:       2802.692 MB/sec
                 gc.alloc.rate.norm:  55185245.309 B/op
                 gc.count:            49.000 counts
                 gc.time:             105.000 ms
                 heap.memory.used.mb: 46.507 MB

Iteration   4: 18.137 ms/op
                 gc.alloc.rate:       2840.996 MB/sec
                 gc.alloc.rate.norm:  55179130.667 B/op
                 gc.count:            49.000 counts
                 gc.time:             106.000 ms
                 heap.memory.used.mb: 18.027 MB

Iteration   5: 17.907 ms/op
                 gc.alloc.rate:       2859.044 MB/sec
                 gc.alloc.rate.norm:  55181156.743 B/op
                 gc.count:            48.000 counts
                 gc.time:             100.000 ms
                 heap.memory.used.mb: 121.672 MB


# Run progress: 59.72% complete, ETA 00:17:52
# Fork: 1 of 1
# Warmup Iteration   1: 63.073 ms/op
Iteration   1: 19.625 ms/op
                 gc.alloc.rate:       2623.898 MB/sec
                 gc.alloc.rate.norm:  55222759.059 B/op
                 gc.count:            47.000 counts
                 gc.time:             100.000 ms
                 heap.memory.used.mb: 104.548 MB

Iteration   2: 18.565 ms/op
                 gc.alloc.rate:       2774.679 MB/sec
                 gc.alloc.rate.norm:  55179777.174 B/op
                 gc.count:            50.000 counts
                 gc.time:             107.000 ms
                 heap.memory.used.mb: 50.458 MB

Iteration   3: 18.223 ms/op
                 gc.alloc.rate:       2825.231 MB/sec
                 gc.alloc.rate.norm:  55158608.505 B/op
                 gc.count:            46.000 counts
                 gc.time:             103.000 ms
                 heap.memory.used.mb: 136.219 MB

Iteration   4: 17.853 ms/op
                 gc.alloc.rate:       2890.110 MB/sec
                 gc.alloc.rate.norm:  55146825.699 B/op
                 gc.count:            52.000 counts
                 gc.time:             98.000 ms
                 heap.memory.used.mb: 25.188 MB

Iteration   5: 17.733 ms/op
                 gc.alloc.rate:       2878.603 MB/sec
                 gc.alloc.rate.norm:  55147867.823 B/op
                 gc.count:            49.000 counts
                 gc.time:             111.000 ms
                 heap.memory.used.mb: 18.917 MB



Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom":
  18.400 ±(99.9%) 2.922 ms/op [Average]
  (min, avg, max) = (17.733, 18.400, 19.625), stdev = 0.759
  CI (99.9%): [15.478, 21.322] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate":
  2798.504 ±(99.9%) 415.516 MB/sec [Average]
  (min, avg, max) = (2623.898, 2798.504, 2890.110), stdev = 107.908
  CI (99.9%): [2382.988, 3214.020] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate.norm":
  55171167.652 ±(99.9%) 122207.785 B/op [Average]
  (min, avg, max) = (55146825.699, 55171167.652, 55222759.059), stdev = 31736.974
  CI (99.9%): [55048959.867, 55293375.437] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.count":
  244.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (46.000, 48.800, 52.000), stdev = 2.387
  CI (99.9%): [244.000, 244.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.time":
  519.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (98.000, 103.800, 111.000), stdev = 5.263
  CI (99.9%): [519.000, 519.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:heap.memory.used.mb":
  67.066 ±(99.9%) 197.614 MB [Average]
  (min, avg, max) = (18.917, 67.066, 136.219), stdev = 51.320
  CI (99.9%): [≈ 0, 264.680] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/gmoon/IdeaProjects/toy/spring-poi/src/test/resources/benchmark/excelsaxbenchmark/excelsaxbenchmark-heapdump.hprof -Dserver.port=9000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom
# Parameters: (excelDataRowSize = 5000)

# Run progress: 61.11% complete, ETA 00:17:03
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 337.419 ms/op
Iteration   1: 131.997 ms/op
                 gc.alloc.rate:       1899.962 MB/sec
                 gc.alloc.rate.norm:  267759511.000 B/op
                 gc.count:            51.000 counts
                 gc.time:             227.000 ms
                 heap.memory.used.mb: 196.385 MB

Iteration   2: 130.931 ms/op
                 gc.alloc.rate:       1912.974 MB/sec
                 gc.alloc.rate.norm:  267700213.000 B/op
                 gc.count:            50.000 counts
                 gc.time:             218.000 ms
                 heap.memory.used.mb: 172.231 MB

Iteration   3: 132.408 ms/op
                 gc.alloc.rate:       1892.476 MB/sec
                 gc.alloc.rate.norm:  267642610.500 B/op
                 gc.count:            44.000 counts
                 gc.time:             221.000 ms
                 heap.memory.used.mb: 250.391 MB

Iteration   4: 130.919 ms/op
                 gc.alloc.rate:       1913.816 MB/sec
                 gc.alloc.rate.norm:  267639215.500 B/op
                 gc.count:            44.000 counts
                 gc.time:             202.000 ms
                 heap.memory.used.mb: 205.446 MB

Iteration   5: 133.167 ms/op
                 gc.alloc.rate:       1867.317 MB/sec
                 gc.alloc.rate.norm:  267679663.500 B/op
                 gc.count:            51.000 counts
                 gc.time:             222.000 ms
                 heap.memory.used.mb: 193.004 MB


# Run progress: 62.50% complete, ETA 00:16:15
# Fork: 1 of 1
# Warmup Iteration   1: 338.796 ms/op
Iteration   1: 141.501 ms/op
                 gc.alloc.rate:       1772.131 MB/sec
                 gc.alloc.rate.norm:  267912065.600 B/op
                 gc.count:            46.000 counts
                 gc.time:             211.000 ms
                 heap.memory.used.mb: 168.643 MB

Iteration   2: 130.872 ms/op
                 gc.alloc.rate:       1916.239 MB/sec
                 gc.alloc.rate.norm:  267873389.500 B/op
                 gc.count:            51.000 counts
                 gc.time:             220.000 ms
                 heap.memory.used.mb: 120.114 MB

Iteration   3: 127.453 ms/op
                 gc.alloc.rate:       1964.301 MB/sec
                 gc.alloc.rate.norm:  267802445.500 B/op
                 gc.count:            47.000 counts
                 gc.time:             217.000 ms
                 heap.memory.used.mb: 184.092 MB

Iteration   4: 131.036 ms/op
                 gc.alloc.rate:       1911.273 MB/sec
                 gc.alloc.rate.norm:  267799592.000 B/op
                 gc.count:            44.000 counts
                 gc.time:             219.000 ms
                 heap.memory.used.mb: 249.210 MB

Iteration   5: 136.341 ms/op
                 gc.alloc.rate:       1823.867 MB/sec
                 gc.alloc.rate.norm:  267842127.467 B/op
                 gc.count:            48.000 counts
                 gc.time:             209.000 ms
                 heap.memory.used.mb: 153.116 MB



Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom":
  133.440 ±(99.9%) 21.231 ms/op [Average]
  (min, avg, max) = (127.453, 133.440, 141.501), stdev = 5.514
  CI (99.9%): [112.209, 154.672] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate":
  1877.562 ±(99.9%) 299.231 MB/sec [Average]
  (min, avg, max) = (1772.131, 1877.562, 1964.301), stdev = 77.709
  CI (99.9%): [1578.332, 2176.793] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate.norm":
  267845924.013 ±(99.9%) 184474.710 B/op [Average]
  (min, avg, max) = (267799592.000, 267845924.013, 267912065.600), stdev = 47907.496
  CI (99.9%): [267661449.304, 268030398.723] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.count":
  236.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (44.000, 47.200, 51.000), stdev = 2.588
  CI (99.9%): [236.000, 236.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.time":
  1076.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (209.000, 215.200, 220.000), stdev = 4.919
  CI (99.9%): [1076.000, 1076.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:heap.memory.used.mb":
  175.035 ±(99.9%) 183.881 MB [Average]
  (min, avg, max) = (120.114, 175.035, 249.210), stdev = 47.753
  CI (99.9%): [≈ 0, 358.916] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/gmoon/IdeaProjects/toy/spring-poi/src/test/resources/benchmark/excelsaxbenchmark/excelsaxbenchmark-heapdump.hprof -Dserver.port=9000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom
# Parameters: (excelDataRowSize = 10000)

# Run progress: 63.89% complete, ETA 00:15:29
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 668.472 ms/op
Iteration   1: 333.670 ms/op
                 gc.alloc.rate:       1495.374 MB/sec
                 gc.alloc.rate.norm:  533598114.667 B/op
                 gc.count:            37.000 counts
                 gc.time:             191.000 ms
                 heap.memory.used.mb: 190.491 MB

Iteration   2: 329.826 ms/op
                 gc.alloc.rate:       1516.827 MB/sec
                 gc.alloc.rate.norm:  533639870.857 B/op
                 gc.count:            41.000 counts
                 gc.time:             208.000 ms
                 heap.memory.used.mb: 194.996 MB

Iteration   3: 337.345 ms/op
                 gc.alloc.rate:       1479.982 MB/sec
                 gc.alloc.rate.norm:  533397329.333 B/op
                 gc.count:            34.000 counts
                 gc.time:             185.000 ms
                 heap.memory.used.mb: 291.587 MB

Iteration   4: 326.939 ms/op
                 gc.alloc.rate:       1531.325 MB/sec
                 gc.alloc.rate.norm:  533381457.143 B/op
                 gc.count:            42.000 counts
                 gc.time:             212.000 ms
                 heap.memory.used.mb: 203.233 MB

Iteration   5: 337.889 ms/op
                 gc.alloc.rate:       1466.218 MB/sec
                 gc.alloc.rate.norm:  533498506.667 B/op
                 gc.count:            37.000 counts
                 gc.time:             189.000 ms
                 heap.memory.used.mb: 199.338 MB


# Run progress: 65.28% complete, ETA 00:14:44
# Fork: 1 of 1
# Warmup Iteration   1: 669.259 ms/op
Iteration   1: 327.226 ms/op
                 gc.alloc.rate:       1529.348 MB/sec
                 gc.alloc.rate.norm:  533890546.286 B/op
                 gc.count:            42.000 counts
                 gc.time:             215.000 ms
                 heap.memory.used.mb: 185.398 MB

Iteration   2: 345.455 ms/op
                 gc.alloc.rate:       1449.325 MB/sec
                 gc.alloc.rate.norm:  533854958.667 B/op
                 gc.count:            33.000 counts
                 gc.time:             178.000 ms
                 heap.memory.used.mb: 232.847 MB

Iteration   3: 334.333 ms/op
                 gc.alloc.rate:       1497.705 MB/sec
                 gc.alloc.rate.norm:  533637393.143 B/op
                 gc.count:            38.000 counts
                 gc.time:             199.000 ms
                 heap.memory.used.mb: 359.743 MB

Iteration   4: 340.315 ms/op
                 gc.alloc.rate:       1468.342 MB/sec
                 gc.alloc.rate.norm:  533631689.333 B/op
                 gc.count:            37.000 counts
                 gc.time:             195.000 ms
                 heap.memory.used.mb: 181.411 MB

Iteration   5: 341.293 ms/op
                 gc.alloc.rate:       1455.614 MB/sec
                 gc.alloc.rate.norm:  533738533.333 B/op
                 gc.count:            36.000 counts
                 gc.time:             185.000 ms
                 heap.memory.used.mb: 197.236 MB



Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom":
  337.725 ±(99.9%) 27.290 ms/op [Average]
  (min, avg, max) = (327.226, 337.725, 345.455), stdev = 7.087
  CI (99.9%): [310.434, 365.015] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate":
  1480.067 ±(99.9%) 128.004 MB/sec [Average]
  (min, avg, max) = (1449.325, 1480.067, 1529.348), stdev = 33.242
  CI (99.9%): [1352.063, 1608.070] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate.norm":
  533750624.152 ±(99.9%) 461984.345 B/op [Average]
  (min, avg, max) = (533631689.333, 533750624.152, 533890546.286), stdev = 119975.867
  CI (99.9%): [533288639.808, 534212608.497] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.count":
  186.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (33.000, 37.200, 42.000), stdev = 3.271
  CI (99.9%): [186.000, 186.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.time":
  972.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (178.000, 194.400, 215.000), stdev = 14.170
  CI (99.9%): [972.000, 972.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:heap.memory.used.mb":
  231.327 ±(99.9%) 287.230 MB [Average]
  (min, avg, max) = (181.411, 231.327, 359.743), stdev = 74.593
  CI (99.9%): [≈ 0, 518.557] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/gmoon/IdeaProjects/toy/spring-poi/src/test/resources/benchmark/excelsaxbenchmark/excelsaxbenchmark-heapdump.hprof -Dserver.port=9000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom
# Parameters: (excelDataRowSize = 15000)

# Run progress: 66.67% complete, ETA 00:14:00
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 1248.300 ms/op
Iteration   1: 620.333 ms/op
                 gc.alloc.rate:       1217.014 MB/sec
                 gc.alloc.rate.norm:  803324748.000 B/op
                 gc.count:            36.000 counts
                 gc.time:             191.000 ms
                 heap.memory.used.mb: 319.822 MB

Iteration   2: 608.388 ms/op
                 gc.alloc.rate:       1236.399 MB/sec
                 gc.alloc.rate.norm:  801858566.000 B/op
                 gc.count:            36.000 counts
                 gc.time:             202.000 ms
                 heap.memory.used.mb: 239.098 MB

Iteration   3: 579.447 ms/op
                 gc.alloc.rate:       1298.288 MB/sec
                 gc.alloc.rate.norm:  801410210.000 B/op
                 gc.count:            35.000 counts
                 gc.time:             188.000 ms
                 heap.memory.used.mb: 361.123 MB

Iteration   4: 604.092 ms/op
                 gc.alloc.rate:       1244.955 MB/sec
                 gc.alloc.rate.norm:  801422330.000 B/op
                 gc.count:            36.000 counts
                 gc.time:             209.000 ms
                 heap.memory.used.mb: 132.202 MB

Iteration   5: 600.221 ms/op
                 gc.alloc.rate:       1245.905 MB/sec
                 gc.alloc.rate.norm:  801572622.000 B/op
                 gc.count:            34.000 counts
                 gc.time:             203.000 ms
                 heap.memory.used.mb: 169.880 MB


# Run progress: 68.06% complete, ETA 00:13:18
# Fork: 1 of 1
# Warmup Iteration   1: 1227.570 ms/op
Iteration   1: 613.920 ms/op
                 gc.alloc.rate:       1228.216 MB/sec
                 gc.alloc.rate.norm:  803322494.000 B/op
                 gc.count:            36.000 counts
                 gc.time:             197.000 ms
                 heap.memory.used.mb: 236.619 MB

Iteration   2: 616.856 ms/op
                 gc.alloc.rate:       1220.063 MB/sec
                 gc.alloc.rate.norm:  801850538.000 B/op
                 gc.count:            35.000 counts
                 gc.time:             199.000 ms
                 heap.memory.used.mb: 194.123 MB

Iteration   3: 594.200 ms/op
                 gc.alloc.rate:       1265.873 MB/sec
                 gc.alloc.rate.norm:  801402102.000 B/op
                 gc.count:            29.000 counts
                 gc.time:             187.000 ms
                 heap.memory.used.mb: 380.612 MB

Iteration   4: 573.549 ms/op
                 gc.alloc.rate:       1309.449 MB/sec
                 gc.alloc.rate.norm:  801414362.000 B/op
                 gc.count:            34.000 counts
                 gc.time:             199.000 ms
                 heap.memory.used.mb: 388.605 MB

Iteration   5: 606.387 ms/op
                 gc.alloc.rate:       1234.430 MB/sec
                 gc.alloc.rate.norm:  801570524.000 B/op
                 gc.count:            35.000 counts
                 gc.time:             199.000 ms
                 heap.memory.used.mb: 425.335 MB



Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom":
  600.982 ±(99.9%) 67.993 ms/op [Average]
  (min, avg, max) = (573.549, 600.982, 616.856), stdev = 17.658
  CI (99.9%): [532.989, 668.976] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate":
  1251.606 ±(99.9%) 141.304 MB/sec [Average]
  (min, avg, max) = (1220.063, 1251.606, 1309.449), stdev = 36.696
  CI (99.9%): [1110.302, 1392.910] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate.norm":
  801912004.000 ±(99.9%) 3114928.365 B/op [Average]
  (min, avg, max) = (801402102.000, 801912004.000, 803322494.000), stdev = 808937.005
  CI (99.9%): [798797075.635, 805026932.365] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.count":
  169.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (29.000, 33.800, 36.000), stdev = 2.775
  CI (99.9%): [169.000, 169.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.time":
  981.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (187.000, 196.200, 199.000), stdev = 5.215
  CI (99.9%): [981.000, 981.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:heap.memory.used.mb":
  325.059 ±(99.9%) 395.256 MB [Average]
  (min, avg, max) = (194.123, 325.059, 425.335), stdev = 102.647
  CI (99.9%): [≈ 0, 720.315] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/gmoon/IdeaProjects/toy/spring-poi/src/test/resources/benchmark/excelsaxbenchmark/excelsaxbenchmark-heapdump.hprof -Dserver.port=9000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom
# Parameters: (excelDataRowSize = 100000)

# Run progress: 69.44% complete, ETA 00:12:37
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 15878.517 ms/op
Iteration   1: 13764.737 ms/op
                 gc.alloc.rate:       370.159 MB/sec
                 gc.alloc.rate.norm:  5356800048.000 B/op
                 gc.count:            49.000 counts
                 gc.time:             285.000 ms
                 heap.memory.used.mb: 872.514 MB

Iteration   2: 14551.489 ms/op
                 gc.alloc.rate:       349.520 MB/sec
                 gc.alloc.rate.norm:  5346104408.000 B/op
                 gc.count:            51.000 counts
                 gc.time:             286.000 ms
                 heap.memory.used.mb: 722.673 MB

Iteration   3: 15106.376 ms/op
                 gc.alloc.rate:       336.731 MB/sec
                 gc.alloc.rate.norm:  5345892856.000 B/op
                 gc.count:            51.000 counts
                 gc.time:             288.000 ms
                 heap.memory.used.mb: 721.873 MB

Iteration   4: 14664.321 ms/op
                 gc.alloc.rate:       346.969 MB/sec
                 gc.alloc.rate.norm:  5345798568.000 B/op
                 gc.count:            54.000 counts
                 gc.time:             277.000 ms
                 heap.memory.used.mb: 760.424 MB

Iteration   5: 14238.383 ms/op
                 gc.alloc.rate:       356.920 MB/sec
                 gc.alloc.rate.norm:  5346451760.000 B/op
                 gc.count:            51.000 counts
                 gc.time:             273.000 ms
                 heap.memory.used.mb: 733.886 MB


# Run progress: 70.83% complete, ETA 00:12:28
# Fork: 1 of 1
# Warmup Iteration   1: 14436.421 ms/op
Iteration   1: 13842.895 ms/op
                 gc.alloc.rate:       368.111 MB/sec
                 gc.alloc.rate.norm:  5355893040.000 B/op
                 gc.count:            53.000 counts
                 gc.time:             320.000 ms
                 heap.memory.used.mb: 759.258 MB

Iteration   2: 15303.443 ms/op
                 gc.alloc.rate:       332.495 MB/sec
                 gc.alloc.rate.norm:  5346085728.000 B/op
                 gc.count:            53.000 counts
                 gc.time:             269.000 ms
                 heap.memory.used.mb: 759.336 MB

Iteration   3: 14181.405 ms/op
                 gc.alloc.rate:       358.657 MB/sec
                 gc.alloc.rate.norm:  5345884464.000 B/op
                 gc.count:            54.000 counts
                 gc.time:             294.000 ms
                 heap.memory.used.mb: 760.842 MB

Iteration   4: 14558.504 ms/op
                 gc.alloc.rate:       349.365 MB/sec
                 gc.alloc.rate.norm:  5345790216.000 B/op
                 gc.count:            54.000 counts
                 gc.time:             288.000 ms
                 heap.memory.used.mb: 762.022 MB

Iteration   5: 14260.405 ms/op
                 gc.alloc.rate:       356.259 MB/sec
                 gc.alloc.rate.norm:  5346454552.000 B/op
                 gc.count:            50.000 counts
                 gc.time:             271.000 ms
                 heap.memory.used.mb: 746.791 MB



Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom":
  14429.330 ±(99.9%) 2121.937 ms/op [Average]
  (min, avg, max) = (13842.895, 14429.330, 15303.443), stdev = 551.060
  CI (99.9%): [12307.394, 16551.267] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate":
  352.977 ±(99.9%) 51.108 MB/sec [Average]
  (min, avg, max) = (332.495, 352.977, 368.111), stdev = 13.272
  CI (99.9%): [301.870, 404.085] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate.norm":
  5348021600.000 ±(99.9%) 16972259.944 B/op [Average]
  (min, avg, max) = (5345790216.000, 5348021600.000, 5355893040.000), stdev = 4407642.010
  CI (99.9%): [5331049340.056, 5364993859.944] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.count":
  264.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (50.000, 52.800, 54.000), stdev = 1.643
  CI (99.9%): [264.000, 264.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.time":
  1442.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (269.000, 288.400, 320.000), stdev = 20.671
  CI (99.9%): [1442.000, 1442.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:heap.memory.used.mb":
  757.650 ±(99.9%) 23.789 MB [Average]
  (min, avg, max) = (746.791, 757.650, 762.022), stdev = 6.178
  CI (99.9%): [733.861, 781.438] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/gmoon/IdeaProjects/toy/spring-poi/src/test/resources/benchmark/excelsaxbenchmark/excelsaxbenchmark-heapdump.hprof -Dserver.port=9000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom
# Parameters: (excelDataRowSize = 150000)

# Run progress: 72.22% complete, ETA 00:12:14
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 60216.130 ms/op
Iteration   1: 53379.236 ms/op
                 gc.alloc.rate:       142.813 MB/sec
                 gc.alloc.rate.norm:  7999160632.000 B/op
                 gc.count:            342.000 counts
                 gc.time:             25562.000 ms
                 heap.memory.used.mb: 986.735 MB

Iteration   2: 53795.250 ms/op
                 gc.alloc.rate:       141.454 MB/sec
                 gc.alloc.rate.norm:  7984638736.000 B/op
                 gc.count:            336.000 counts
                 gc.time:             25013.000 ms
                 heap.memory.used.mb: 984.524 MB

Iteration   3: 55375.310 ms/op
                 gc.alloc.rate:       137.419 MB/sec
                 gc.alloc.rate.norm:  7984382888.000 B/op
                 gc.count:            352.000 counts
                 gc.time:             25724.000 ms
                 heap.memory.used.mb: 986.283 MB

Iteration   4: 54457.734 ms/op
                 gc.alloc.rate:       139.744 MB/sec
                 gc.alloc.rate.norm:  7984331984.000 B/op
                 gc.count:            358.000 counts
                 gc.time:             25512.000 ms
                 heap.memory.used.mb: 987.404 MB

Iteration   5: 58091.611 ms/op
                 gc.alloc.rate:       130.909 MB/sec
                 gc.alloc.rate.norm:  7985430952.000 B/op
                 gc.count:            365.000 counts
                 gc.time:             28604.000 ms
                 heap.memory.used.mb: ≈ 0 MB


# Run progress: 73.61% complete, ETA 00:13:27
# Fork: 1 of 1
# Warmup Iteration   1: 61424.090 ms/op
Iteration   1: 62716.785 ms/op
                 gc.alloc.rate:       121.586 MB/sec
                 gc.alloc.rate.norm:  8000702704.000 B/op
                 gc.count:            363.000 counts
                 gc.time:             29685.000 ms
                 heap.memory.used.mb: 984.679 MB

Iteration   2: 56488.419 ms/op
                 gc.alloc.rate:       134.799 MB/sec
                 gc.alloc.rate.norm:  7989656496.000 B/op
                 gc.count:            343.000 counts
                 gc.time:             26291.000 ms
                 heap.memory.used.mb: 985.348 MB

Iteration   3: 64027.638 ms/op
                 gc.alloc.rate:       118.932 MB/sec
                 gc.alloc.rate.norm:  7989199880.000 B/op
                 gc.count:            356.000 counts
                 gc.time:             27795.000 ms
                 heap.memory.used.mb: 984.936 MB

Iteration   4: 60934.242 ms/op
                 gc.alloc.rate:       124.975 MB/sec
                 gc.alloc.rate.norm:  7989167896.000 B/op
                 gc.count:            342.000 counts
                 gc.time:             26818.000 ms
                 heap.memory.used.mb: 986.090 MB

Iteration   5: 58830.559 ms/op
                 gc.alloc.rate:       129.374 MB/sec
                 gc.alloc.rate.norm:  7990271912.000 B/op
                 gc.count:            350.000 counts
                 gc.time:             30007.000 ms
                 heap.memory.used.mb: 2.212 MB



Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom":
  60599.529 ±(99.9%) 11612.296 ms/op [Average]
  (min, avg, max) = (56488.419, 60599.529, 64027.638), stdev = 3015.676
  CI (99.9%): [48987.233, 72211.824] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate":
  125.933 ±(99.9%) 24.299 MB/sec [Average]
  (min, avg, max) = (118.932, 125.933, 134.799), stdev = 6.310
  CI (99.9%): [101.635, 150.232] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate.norm":
  7991799777.600 ±(99.9%) 19241317.096 B/op [Average]
  (min, avg, max) = (7989167896.000, 7991799777.600, 8000702704.000), stdev = 4996908.947
  CI (99.9%): [7972558460.504, 8011041094.696] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.count":
  1754.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (342.000, 350.800, 363.000), stdev = 8.871
  CI (99.9%): [1754.000, 1754.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.time":
  140596.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (26291.000, 28119.200, 30007.000), stdev = 1670.034
  CI (99.9%): [140596.000, 140596.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:heap.memory.used.mb":
  788.653 ±(99.9%) 1692.874 MB [Average]
  (min, avg, max) = (2.212, 788.653, 986.090), stdev = 439.634
  CI (99.9%): [≈ 0, 2481.527] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/gmoon/IdeaProjects/toy/spring-poi/src/test/resources/benchmark/excelsaxbenchmark/excelsaxbenchmark-heapdump.hprof -Dserver.port=9000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax
# Parameters: (excelDataRowSize = 1)

# Run progress: 75.00% complete, ETA 00:14:34
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 1.879 ms/op
Iteration   1: 0.602 ms/op
                 gc.alloc.rate:       2043.900 MB/sec
                 gc.alloc.rate.norm:  1315262.685 B/op
                 gc.count:            44.000 counts
                 gc.time:             63.000 ms
                 heap.memory.used.mb: 70.266 MB

Iteration   2: 0.505 ms/op
                 gc.alloc.rate:       2422.216 MB/sec
                 gc.alloc.rate.norm:  1310638.205 B/op
                 gc.count:            64.000 counts
                 gc.time:             73.000 ms
                 heap.memory.used.mb: 60.178 MB

Iteration   3: 0.490 ms/op
                 gc.alloc.rate:       2498.645 MB/sec
                 gc.alloc.rate.norm:  1310286.777 B/op
                 gc.count:            64.000 counts
                 gc.time:             67.000 ms
                 heap.memory.used.mb: 47.206 MB

Iteration   4: 0.485 ms/op
                 gc.alloc.rate:       2519.745 MB/sec
                 gc.alloc.rate.norm:  1310281.072 B/op
                 gc.count:            64.000 counts
                 gc.time:             70.000 ms
                 heap.memory.used.mb: 80.678 MB

Iteration   5: 0.488 ms/op
                 gc.alloc.rate:       2509.018 MB/sec
                 gc.alloc.rate.norm:  1310455.718 B/op
                 gc.count:            64.000 counts
                 gc.time:             57.000 ms
                 heap.memory.used.mb: 73.567 MB


# Run progress: 76.39% complete, ETA 00:13:36
# Fork: 1 of 1
# Warmup Iteration   1: 1.707 ms/op
Iteration   1: 0.593 ms/op
                 gc.alloc.rate:       2074.932 MB/sec
                 gc.alloc.rate.norm:  1313534.738 B/op
                 gc.count:            57.000 counts
                 gc.time:             71.000 ms
                 heap.memory.used.mb: 59.300 MB

Iteration   2: 0.512 ms/op
                 gc.alloc.rate:       2395.316 MB/sec
                 gc.alloc.rate.norm:  1310244.109 B/op
                 gc.count:            63.000 counts
                 gc.time:             65.000 ms
                 heap.memory.used.mb: 19.681 MB

Iteration   3: 0.576 ms/op
                 gc.alloc.rate:       2128.419 MB/sec
                 gc.alloc.rate.norm:  1309895.986 B/op
                 gc.count:            56.000 counts
                 gc.time:             63.000 ms
                 heap.memory.used.mb: 25.140 MB

Iteration   4: 0.475 ms/op
                 gc.alloc.rate:       2572.460 MB/sec
                 gc.alloc.rate.norm:  1309817.891 B/op
                 gc.count:            68.000 counts
                 gc.time:             73.000 ms
                 heap.memory.used.mb: 4.123 MB

Iteration   5: 0.468 ms/op
                 gc.alloc.rate:       2593.413 MB/sec
                 gc.alloc.rate.norm:  1309949.128 B/op
                 gc.count:            69.000 counts
                 gc.time:             72.000 ms
                 heap.memory.used.mb: 7.644 MB



Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax":
  0.525 ±(99.9%) 0.220 ms/op [Average]
  (min, avg, max) = (0.468, 0.525, 0.593), stdev = 0.057
  CI (99.9%): [0.304, 0.745] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate":
  2352.908 ±(99.9%) 934.347 MB/sec [Average]
  (min, avg, max) = (2074.932, 2352.908, 2593.413), stdev = 242.647
  CI (99.9%): [1418.560, 3287.255] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate.norm":
  1310688.370 ±(99.9%) 6158.402 B/op [Average]
  (min, avg, max) = (1309817.891, 1310688.370, 1313534.738), stdev = 1599.317
  CI (99.9%): [1304529.969, 1316846.772] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.count":
  313.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (56.000, 62.600, 69.000), stdev = 6.025
  CI (99.9%): [313.000, 313.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.time":
  344.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (63.000, 68.800, 73.000), stdev = 4.494
  CI (99.9%): [344.000, 344.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:heap.memory.used.mb":
  23.178 ±(99.9%) 84.478 MB [Average]
  (min, avg, max) = (4.123, 23.178, 59.300), stdev = 21.939
  CI (99.9%): [≈ 0, 107.656] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/gmoon/IdeaProjects/toy/spring-poi/src/test/resources/benchmark/excelsaxbenchmark/excelsaxbenchmark-heapdump.hprof -Dserver.port=9000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax
# Parameters: (excelDataRowSize = 100)

# Run progress: 77.78% complete, ETA 00:12:39
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 4.892 ms/op
Iteration   1: 1.892 ms/op
                 gc.alloc.rate:       3206.403 MB/sec
                 gc.alloc.rate.norm:  6478199.112 B/op
                 gc.count:            73.000 counts
                 gc.time:             78.000 ms
                 heap.memory.used.mb: 72.595 MB

Iteration   2: 1.650 ms/op
                 gc.alloc.rate:       3657.333 MB/sec
                 gc.alloc.rate.norm:  6469620.788 B/op
                 gc.count:            81.000 counts
                 gc.time:             79.000 ms
                 heap.memory.used.mb: 10.354 MB

Iteration   3: 1.589 ms/op
                 gc.alloc.rate:       3815.385 MB/sec
                 gc.alloc.rate.norm:  6468668.434 B/op
                 gc.count:            96.000 counts
                 gc.time:             75.000 ms
                 heap.memory.used.mb: 33.858 MB

Iteration   4: 1.583 ms/op
                 gc.alloc.rate:       3815.741 MB/sec
                 gc.alloc.rate.norm:  6468212.755 B/op
                 gc.count:            97.000 counts
                 gc.time:             83.000 ms
                 heap.memory.used.mb: 71.424 MB

Iteration   5: 1.572 ms/op
                 gc.alloc.rate:       3816.305 MB/sec
                 gc.alloc.rate.norm:  6468256.669 B/op
                 gc.count:            54.000 counts
                 gc.time:             68.000 ms
                 heap.memory.used.mb: 57.846 MB


# Run progress: 79.17% complete, ETA 00:11:44
# Fork: 1 of 1
# Warmup Iteration   1: 5.134 ms/op
Iteration   1: 1.876 ms/op
                 gc.alloc.rate:       3221.764 MB/sec
                 gc.alloc.rate.norm:  6474687.955 B/op
                 gc.count:            65.000 counts
                 gc.time:             77.000 ms
                 heap.memory.used.mb: 57.024 MB

Iteration   2: 1.697 ms/op
                 gc.alloc.rate:       3557.742 MB/sec
                 gc.alloc.rate.norm:  6466727.236 B/op
                 gc.count:            79.000 counts
                 gc.time:             79.000 ms
                 heap.memory.used.mb: 7.900 MB

Iteration   3: 1.672 ms/op
                 gc.alloc.rate:       3622.283 MB/sec
                 gc.alloc.rate.norm:  6465860.788 B/op
                 gc.count:            93.000 counts
                 gc.time:             77.000 ms
                 heap.memory.used.mb: 1.393 MB

Iteration   4: 1.637 ms/op
                 gc.alloc.rate:       3701.148 MB/sec
                 gc.alloc.rate.norm:  6465330.671 B/op
                 gc.count:            53.000 counts
                 gc.time:             58.000 ms
                 heap.memory.used.mb: 64.832 MB

Iteration   5: 1.639 ms/op
                 gc.alloc.rate:       3665.404 MB/sec
                 gc.alloc.rate.norm:  6465545.363 B/op
                 gc.count:            92.000 counts
                 gc.time:             79.000 ms
                 heap.memory.used.mb: 55.783 MB



Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax":
  1.704 ±(99.9%) 0.382 ms/op [Average]
  (min, avg, max) = (1.637, 1.704, 1.876), stdev = 0.099
  CI (99.9%): [1.322, 2.086] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate":
  3553.668 ±(99.9%) 743.484 MB/sec [Average]
  (min, avg, max) = (3221.764, 3553.668, 3701.148), stdev = 193.081
  CI (99.9%): [2810.184, 4297.153] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate.norm":
  6467630.403 ±(99.9%) 15329.293 B/op [Average]
  (min, avg, max) = (6465330.671, 6467630.403, 6474687.955), stdev = 3980.969
  CI (99.9%): [6452301.109, 6482959.696] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.count":
  382.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (53.000, 76.400, 93.000), stdev = 17.344
  CI (99.9%): [382.000, 382.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.time":
  370.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (58.000, 74.000, 79.000), stdev = 9.000
  CI (99.9%): [370.000, 370.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:heap.memory.used.mb":
  37.387 ±(99.9%) 116.197 MB [Average]
  (min, avg, max) = (1.393, 37.387, 64.832), stdev = 30.176
  CI (99.9%): [≈ 0, 153.584] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/gmoon/IdeaProjects/toy/spring-poi/src/test/resources/benchmark/excelsaxbenchmark/excelsaxbenchmark-heapdump.hprof -Dserver.port=9000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax
# Parameters: (excelDataRowSize = 500)

# Run progress: 80.56% complete, ETA 00:10:50
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 18.276 ms/op
Iteration   1: 7.774 ms/op
                 gc.alloc.rate:       3299.417 MB/sec
                 gc.alloc.rate.norm:  27425407.444 B/op
                 gc.count:            65.000 counts
                 gc.time:             74.000 ms
                 heap.memory.used.mb: 27.472 MB

Iteration   2: 7.136 ms/op
                 gc.alloc.rate:       3587.022 MB/sec
                 gc.alloc.rate.norm:  27409836.085 B/op
                 gc.count:            79.000 counts
                 gc.time:             80.000 ms
                 heap.memory.used.mb: 75.043 MB

Iteration   3: 6.963 ms/op
                 gc.alloc.rate:       3682.196 MB/sec
                 gc.alloc.rate.norm:  27400571.931 B/op
                 gc.count:            81.000 counts
                 gc.time:             75.000 ms
                 heap.memory.used.mb: 4.772 MB

Iteration   4: 6.870 ms/op
                 gc.alloc.rate:       3717.857 MB/sec
                 gc.alloc.rate.norm:  27398130.294 B/op
                 gc.count:            78.000 counts
                 gc.time:             82.000 ms
                 heap.memory.used.mb: 19.019 MB

Iteration   5: 6.849 ms/op
                 gc.alloc.rate:       3717.854 MB/sec
                 gc.alloc.rate.norm:  27400008.300 B/op
                 gc.count:            81.000 counts
                 gc.time:             75.000 ms
                 heap.memory.used.mb: 10.280 MB


# Run progress: 81.94% complete, ETA 00:09:57
# Fork: 1 of 1
# Warmup Iteration   1: 19.010 ms/op
Iteration   1: 7.600 ms/op
                 gc.alloc.rate:       3384.523 MB/sec
                 gc.alloc.rate.norm:  27426360.667 B/op
                 gc.count:            76.000 counts
                 gc.time:             72.000 ms
                 heap.memory.used.mb: 17.123 MB

Iteration   2: 7.199 ms/op
                 gc.alloc.rate:       3554.702 MB/sec
                 gc.alloc.rate.norm:  27409086.446 B/op
                 gc.count:            75.000 counts
                 gc.time:             79.000 ms
                 heap.memory.used.mb: 9.294 MB

Iteration   3: 6.974 ms/op
                 gc.alloc.rate:       3668.018 MB/sec
                 gc.alloc.rate.norm:  27399652.917 B/op
                 gc.count:            80.000 counts
                 gc.time:             80.000 ms
                 heap.memory.used.mb: 30.760 MB

Iteration   4: 6.872 ms/op
                 gc.alloc.rate:       3726.019 MB/sec
                 gc.alloc.rate.norm:  27398396.411 B/op
                 gc.count:            80.000 counts
                 gc.time:             77.000 ms
                 heap.memory.used.mb: 26.663 MB

Iteration   5: 6.870 ms/op
                 gc.alloc.rate:       3704.995 MB/sec
                 gc.alloc.rate.norm:  27400209.065 B/op
                 gc.count:            81.000 counts
                 gc.time:             77.000 ms
                 heap.memory.used.mb: 81.804 MB



Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax":
  7.103 ±(99.9%) 1.188 ms/op [Average]
  (min, avg, max) = (6.870, 7.103, 7.600), stdev = 0.308
  CI (99.9%): [5.915, 8.291] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate":
  3607.651 ±(99.9%) 543.613 MB/sec [Average]
  (min, avg, max) = (3384.523, 3607.651, 3726.019), stdev = 141.175
  CI (99.9%): [3064.038, 4151.264] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate.norm":
  27406741.101 ±(99.9%) 45274.621 B/op [Average]
  (min, avg, max) = (27398396.411, 27406741.101, 27426360.667), stdev = 11757.675
  CI (99.9%): [27361466.480, 27452015.722] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.count":
  392.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (75.000, 78.400, 81.000), stdev = 2.702
  CI (99.9%): [392.000, 392.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.time":
  385.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (72.000, 77.000, 80.000), stdev = 3.082
  CI (99.9%): [385.000, 385.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:heap.memory.used.mb":
  33.129 ±(99.9%) 109.608 MB [Average]
  (min, avg, max) = (9.294, 33.129, 81.804), stdev = 28.465
  CI (99.9%): [≈ 0, 142.736] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/gmoon/IdeaProjects/toy/spring-poi/src/test/resources/benchmark/excelsaxbenchmark/excelsaxbenchmark-heapdump.hprof -Dserver.port=9000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax
# Parameters: (excelDataRowSize = 1000)

# Run progress: 83.33% complete, ETA 00:09:05
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 33.987 ms/op
Iteration   1: 15.183 ms/op
                 gc.alloc.rate:       3306.931 MB/sec
                 gc.alloc.rate.norm:  53678712.662 B/op
                 gc.count:            72.000 counts
                 gc.time:             78.000 ms
                 heap.memory.used.mb: 22.325 MB

Iteration   2: 14.657 ms/op
                 gc.alloc.rate:       3420.026 MB/sec
                 gc.alloc.rate.norm:  53661834.920 B/op
                 gc.count:            75.000 counts
                 gc.time:             80.000 ms
                 heap.memory.used.mb: 71.166 MB

Iteration   3: 14.512 ms/op
                 gc.alloc.rate:       3457.517 MB/sec
                 gc.alloc.rate.norm:  53656936.633 B/op
                 gc.count:            77.000 counts
                 gc.time:             79.000 ms
                 heap.memory.used.mb: 41.699 MB

Iteration   4: 14.370 ms/op
                 gc.alloc.rate:       3487.048 MB/sec
                 gc.alloc.rate.norm:  53650552.743 B/op
                 gc.count:            77.000 counts
                 gc.time:             81.000 ms
                 heap.memory.used.mb: 91.761 MB

Iteration   5: 14.234 ms/op
                 gc.alloc.rate:       3502.130 MB/sec
                 gc.alloc.rate.norm:  53651620.225 B/op
                 gc.count:            79.000 counts
                 gc.time:             76.000 ms
                 heap.memory.used.mb: 2.078 MB


# Run progress: 84.72% complete, ETA 00:08:15
# Fork: 1 of 1
# Warmup Iteration   1: 35.889 ms/op
Iteration   1: 15.397 ms/op
                 gc.alloc.rate:       3258.286 MB/sec
                 gc.alloc.rate.norm:  53679605.662 B/op
                 gc.count:            70.000 counts
                 gc.time:             77.000 ms
                 heap.memory.used.mb: 38.642 MB

Iteration   2: 14.801 ms/op
                 gc.alloc.rate:       3384.286 MB/sec
                 gc.alloc.rate.norm:  53662095.706 B/op
                 gc.count:            75.000 counts
                 gc.time:             82.000 ms
                 heap.memory.used.mb: 83.426 MB

Iteration   3: 14.521 ms/op
                 gc.alloc.rate:       3455.304 MB/sec
                 gc.alloc.rate.norm:  53656680.345 B/op
                 gc.count:            77.000 counts
                 gc.time:             77.000 ms
                 heap.memory.used.mb: 42.675 MB

Iteration   4: 14.614 ms/op
                 gc.alloc.rate:       3447.620 MB/sec
                 gc.alloc.rate.norm:  53652095.188 B/op
                 gc.count:            79.000 counts
                 gc.time:             72.000 ms
                 heap.memory.used.mb: 16.279 MB

Iteration   5: 14.372 ms/op
                 gc.alloc.rate:       3457.568 MB/sec
                 gc.alloc.rate.norm:  53651364.057 B/op
                 gc.count:            78.000 counts
                 gc.time:             84.000 ms
                 heap.memory.used.mb: 83.453 MB



Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax":
  14.741 ±(99.9%) 1.534 ms/op [Average]
  (min, avg, max) = (14.372, 14.741, 15.397), stdev = 0.398
  CI (99.9%): [13.207, 16.275] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate":
  3400.613 ±(99.9%) 327.691 MB/sec [Average]
  (min, avg, max) = (3258.286, 3400.613, 3457.568), stdev = 85.100
  CI (99.9%): [3072.922, 3728.304] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate.norm":
  53660368.192 ±(99.9%) 44581.984 B/op [Average]
  (min, avg, max) = (53651364.057, 53660368.192, 53679605.662), stdev = 11577.800
  CI (99.9%): [53615786.207, 53704950.176] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.count":
  379.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (70.000, 75.800, 79.000), stdev = 3.564
  CI (99.9%): [379.000, 379.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.time":
  392.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (72.000, 78.400, 84.000), stdev = 4.722
  CI (99.9%): [392.000, 392.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:heap.memory.used.mb":
  52.895 ±(99.9%) 114.135 MB [Average]
  (min, avg, max) = (16.279, 52.895, 83.453), stdev = 29.641
  CI (99.9%): [≈ 0, 167.030] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/gmoon/IdeaProjects/toy/spring-poi/src/test/resources/benchmark/excelsaxbenchmark/excelsaxbenchmark-heapdump.hprof -Dserver.port=9000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax
# Parameters: (excelDataRowSize = 5000)

# Run progress: 86.11% complete, ETA 00:07:25
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 40.498 ms/op
Iteration   1: 18.844 ms/op
                 gc.alloc.rate:       2808.409 MB/sec
                 gc.alloc.rate.norm:  56646051.439 B/op
                 gc.count:            178.000 counts
                 gc.time:             161.000 ms
                 heap.memory.used.mb: 56.899 MB

Iteration   2: 18.577 ms/op
                 gc.alloc.rate:       2851.712 MB/sec
                 gc.alloc.rate.norm:  56627448.000 B/op
                 gc.count:            198.000 counts
                 gc.time:             170.000 ms
                 heap.memory.used.mb: 65.609 MB

Iteration   3: 18.506 ms/op
                 gc.alloc.rate:       2860.678 MB/sec
                 gc.alloc.rate.norm:  56621934.606 B/op
                 gc.count:            215.000 counts
                 gc.time:             182.000 ms
                 heap.memory.used.mb: 130.872 MB

Iteration   4: 18.298 ms/op
                 gc.alloc.rate:       2889.996 MB/sec
                 gc.alloc.rate.norm:  56617656.800 B/op
                 gc.count:            209.000 counts
                 gc.time:             180.000 ms
                 heap.memory.used.mb: 31.682 MB

Iteration   5: 16.346 ms/op
                 gc.alloc.rate:       3208.636 MB/sec
                 gc.alloc.rate.norm:  56618318.959 B/op
                 gc.count:            80.000 counts
                 gc.time:             96.000 ms
                 heap.memory.used.mb: 162.398 MB


# Run progress: 87.50% complete, ETA 00:06:37
# Fork: 1 of 1
# Warmup Iteration   1: 39.470 ms/op
Iteration   1: 17.206 ms/op
                 gc.alloc.rate:       3076.291 MB/sec
                 gc.alloc.rate.norm:  56644181.675 B/op
                 gc.count:            64.000 counts
                 gc.time:             83.000 ms
                 heap.memory.used.mb: 137.362 MB

Iteration   2: 19.603 ms/op
                 gc.alloc.rate:       2700.010 MB/sec
                 gc.alloc.rate.norm:  56627679.146 B/op
                 gc.count:            253.000 counts
                 gc.time:             206.000 ms
                 heap.memory.used.mb: 56.887 MB

Iteration   3: 19.140 ms/op
                 gc.alloc.rate:       2760.734 MB/sec
                 gc.alloc.rate.norm:  56621377.371 B/op
                 gc.count:            243.000 counts
                 gc.time:             205.000 ms
                 heap.memory.used.mb: 108.178 MB

Iteration   4: 17.817 ms/op
                 gc.alloc.rate:       2972.964 MB/sec
                 gc.alloc.rate.norm:  56617889.487 B/op
                 gc.count:            174.000 counts
                 gc.time:             157.000 ms
                 heap.memory.used.mb: 56.387 MB

Iteration   5: 17.042 ms/op
                 gc.alloc.rate:       3082.339 MB/sec
                 gc.alloc.rate.norm:  56618816.000 B/op
                 gc.count:            134.000 counts
                 gc.time:             135.000 ms
                 heap.memory.used.mb: 117.445 MB



Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax":
  18.161 ±(99.9%) 4.440 ms/op [Average]
  (min, avg, max) = (17.042, 18.161, 19.603), stdev = 1.153
  CI (99.9%): [13.721, 22.602] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate":
  2918.467 ±(99.9%) 687.035 MB/sec [Average]
  (min, avg, max) = (2700.010, 2918.467, 3082.339), stdev = 178.421
  CI (99.9%): [2231.433, 3605.502] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate.norm":
  56625988.736 ±(99.9%) 41835.398 B/op [Average]
  (min, avg, max) = (56617889.487, 56625988.736, 56644181.675), stdev = 10864.520
  CI (99.9%): [56584153.338, 56667824.134] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.count":
  868.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (64.000, 173.600, 253.000), stdev = 78.583
  CI (99.9%): [868.000, 868.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.time":
  786.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (83.000, 157.200, 206.000), stdev = 51.635
  CI (99.9%): [786.000, 786.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:heap.memory.used.mb":
  95.252 ±(99.9%) 141.681 MB [Average]
  (min, avg, max) = (56.387, 95.252, 137.362), stdev = 36.794
  CI (99.9%): [≈ 0, 236.932] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/gmoon/IdeaProjects/toy/spring-poi/src/test/resources/benchmark/excelsaxbenchmark/excelsaxbenchmark-heapdump.hprof -Dserver.port=9000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax
# Parameters: (excelDataRowSize = 10000)

# Run progress: 88.89% complete, ETA 00:05:49
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 41.014 ms/op
Iteration   1: 22.349 ms/op
                 gc.alloc.rate:       2529.075 MB/sec
                 gc.alloc.rate.norm:  60463867.911 B/op
                 gc.count:            271.000 counts
                 gc.time:             214.000 ms
                 heap.memory.used.mb: 61.548 MB

Iteration   2: 18.924 ms/op
                 gc.alloc.rate:       2985.178 MB/sec
                 gc.alloc.rate.norm:  60450808.453 B/op
                 gc.count:            117.000 counts
                 gc.time:             113.000 ms
                 heap.memory.used.mb: 61.820 MB

Iteration   3: 17.988 ms/op
                 gc.alloc.rate:       3141.232 MB/sec
                 gc.alloc.rate.norm:  60441929.786 B/op
                 gc.count:            64.000 counts
                 gc.time:             82.000 ms
                 heap.memory.used.mb: 37.081 MB

Iteration   4: 20.985 ms/op
                 gc.alloc.rate:       2689.522 MB/sec
                 gc.alloc.rate.norm:  60438895.000 B/op
                 gc.count:            260.000 counts
                 gc.time:             214.000 ms
                 heap.memory.used.mb: 61.838 MB

Iteration   5: 23.739 ms/op
                 gc.alloc.rate:       2360.655 MB/sec
                 gc.alloc.rate.norm:  60441706.259 B/op
                 gc.count:            219.000 counts
                 gc.time:             200.000 ms
                 heap.memory.used.mb: 66.482 MB


# Run progress: 90.28% complete, ETA 00:05:03
# Fork: 1 of 1
# Warmup Iteration   1: 44.024 ms/op
Iteration   1: 21.203 ms/op
                 gc.alloc.rate:       2682.527 MB/sec
                 gc.alloc.rate.norm:  60495866.779 B/op
                 gc.count:            230.000 counts
                 gc.time:             179.000 ms
                 heap.memory.used.mb: 6.401 MB

Iteration   2: 20.511 ms/op
                 gc.alloc.rate:       2752.248 MB/sec
                 gc.alloc.rate.norm:  60485796.490 B/op
                 gc.count:            238.000 counts
                 gc.time:             201.000 ms
                 heap.memory.used.mb: 61.362 MB

Iteration   3: 20.301 ms/op
                 gc.alloc.rate:       2781.129 MB/sec
                 gc.alloc.rate.norm:  60475190.240 B/op
                 gc.count:            251.000 counts
                 gc.time:             208.000 ms
                 heap.memory.used.mb: 61.847 MB

Iteration   4: 17.803 ms/op
                 gc.alloc.rate:       3170.652 MB/sec
                 gc.alloc.rate.norm:  60472125.027 B/op
                 gc.count:            121.000 counts
                 gc.time:             126.000 ms
                 heap.memory.used.mb: 123.402 MB

Iteration   5: 18.491 ms/op
                 gc.alloc.rate:       3031.154 MB/sec
                 gc.alloc.rate.norm:  60472564.183 B/op
                 gc.count:            165.000 counts
                 gc.time:             159.000 ms
                 heap.memory.used.mb: 67.649 MB



Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax":
  19.662 ±(99.9%) 5.556 ms/op [Average]
  (min, avg, max) = (17.803, 19.662, 21.203), stdev = 1.443
  CI (99.9%): [14.105, 25.218] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate":
  2883.542 ±(99.9%) 799.310 MB/sec [Average]
  (min, avg, max) = (2682.527, 2883.542, 3170.652), stdev = 207.578
  CI (99.9%): [2084.231, 3682.852] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate.norm":
  60480308.544 ±(99.9%) 39706.391 B/op [Average]
  (min, avg, max) = (60472125.027, 60480308.544, 60495866.779), stdev = 10311.624
  CI (99.9%): [60440602.152, 60520014.935] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.count":
  1005.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (121.000, 201.000, 251.000), stdev = 55.691
  CI (99.9%): [1005.000, 1005.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.time":
  873.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (126.000, 174.600, 208.000), stdev = 33.306
  CI (99.9%): [873.000, 873.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:heap.memory.used.mb":
  64.132 ±(99.9%) 159.594 MB [Average]
  (min, avg, max) = (6.401, 64.132, 123.402), stdev = 41.446
  CI (99.9%): [≈ 0, 223.726] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/gmoon/IdeaProjects/toy/spring-poi/src/test/resources/benchmark/excelsaxbenchmark/excelsaxbenchmark-heapdump.hprof -Dserver.port=9000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax
# Parameters: (excelDataRowSize = 15000)

# Run progress: 91.67% complete, ETA 00:04:17
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 44.183 ms/op
Iteration   1: 20.945 ms/op
                 gc.alloc.rate:       2958.489 MB/sec
                 gc.alloc.rate.norm:  66415530.917 B/op
                 gc.count:            121.000 counts
                 gc.time:             123.000 ms
                 heap.memory.used.mb: 67.926 MB

Iteration   2: 20.227 ms/op
                 gc.alloc.rate:       3069.836 MB/sec
                 gc.alloc.rate.norm:  66402013.760 B/op
                 gc.count:            143.000 counts
                 gc.time:             142.000 ms
                 heap.memory.used.mb: 67.410 MB

Iteration   3: 18.991 ms/op
                 gc.alloc.rate:       3269.095 MB/sec
                 gc.alloc.rate.norm:  66392963.472 B/op
                 gc.count:            86.000 counts
                 gc.time:             95.000 ms
                 heap.memory.used.mb: 134.732 MB

Iteration   4: 20.534 ms/op
                 gc.alloc.rate:       3028.601 MB/sec
                 gc.alloc.rate.norm:  66390674.204 B/op
                 gc.count:            181.000 counts
                 gc.time:             163.000 ms
                 heap.memory.used.mb: 67.125 MB

Iteration   5: 18.746 ms/op
                 gc.alloc.rate:       3286.258 MB/sec
                 gc.alloc.rate.norm:  66391686.889 B/op
                 gc.count:            90.000 counts
                 gc.time:             100.000 ms
                 heap.memory.used.mb: 72.240 MB


# Run progress: 93.06% complete, ETA 00:03:32
# Fork: 1 of 1
# Warmup Iteration   1: 43.668 ms/op
Iteration   1: 22.341 ms/op
                 gc.alloc.rate:       2779.898 MB/sec
                 gc.alloc.rate.norm:  66415766.489 B/op
                 gc.count:            211.000 counts
                 gc.time:             176.000 ms
                 heap.memory.used.mb: 22.954 MB

Iteration   2: 21.178 ms/op
                 gc.alloc.rate:       2926.594 MB/sec
                 gc.alloc.rate.norm:  66404488.000 B/op
                 gc.count:            190.000 counts
                 gc.time:             169.000 ms
                 heap.memory.used.mb: 67.906 MB

Iteration   3: 19.471 ms/op
                 gc.alloc.rate:       2891.353 MB/sec
                 gc.alloc.rate.norm:  66393752.544 B/op
                 gc.count:            113.000 counts
                 gc.time:             330.000 ms
                 heap.memory.used.mb: 67.880 MB

Iteration   4: 18.575 ms/op
                 gc.alloc.rate:       3336.498 MB/sec
                 gc.alloc.rate.norm:  66391395.009 B/op
                 gc.count:            78.000 counts
                 gc.time:             94.000 ms
                 heap.memory.used.mb: 67.674 MB

Iteration   5: 20.526 ms/op
                 gc.alloc.rate:       3002.991 MB/sec
                 gc.alloc.rate.norm:  66392992.571 B/op
                 gc.count:            200.000 counts
                 gc.time:             179.000 ms
                 heap.memory.used.mb: 71.916 MB



Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax":
  20.418 ±(99.9%) 5.640 ms/op [Average]
  (min, avg, max) = (18.575, 20.418, 22.341), stdev = 1.465
  CI (99.9%): [14.778, 26.059] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate":
  2987.467 ±(99.9%) 812.504 MB/sec [Average]
  (min, avg, max) = (2779.898, 2987.467, 3336.498), stdev = 211.005
  CI (99.9%): [2174.963, 3799.970] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate.norm":
  66399678.923 ±(99.9%) 39942.404 B/op [Average]
  (min, avg, max) = (66391395.009, 66399678.923, 66415766.489), stdev = 10372.915
  CI (99.9%): [66359736.519, 66439621.326] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.count":
  792.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (78.000, 158.400, 211.000), stdev = 59.206
  CI (99.9%): [792.000, 792.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.time":
  948.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (94.000, 189.600, 330.000), stdev = 85.984
  CI (99.9%): [948.000, 948.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:heap.memory.used.mb":
  59.666 ±(99.9%) 79.321 MB [Average]
  (min, avg, max) = (22.954, 59.666, 71.916), stdev = 20.599
  CI (99.9%): [≈ 0, 138.987] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/gmoon/IdeaProjects/toy/spring-poi/src/test/resources/benchmark/excelsaxbenchmark/excelsaxbenchmark-heapdump.hprof -Dserver.port=9000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax
# Parameters: (excelDataRowSize = 100000)

# Run progress: 94.44% complete, ETA 00:02:48
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 91.913 ms/op
Iteration   1: 41.399 ms/op
                 gc.alloc.rate:       3504.395 MB/sec
                 gc.alloc.rate.norm:  155014748.408 B/op
                 gc.count:            65.000 counts
                 gc.time:             78.000 ms
                 heap.memory.used.mb: 235.737 MB

Iteration   2: 43.144 ms/op
                 gc.alloc.rate:       3359.470 MB/sec
                 gc.alloc.rate.norm:  155010089.532 B/op
                 gc.count:            66.000 counts
                 gc.time:             85.000 ms
                 heap.memory.used.mb: 155.580 MB

Iteration   3: 40.247 ms/op
                 gc.alloc.rate:       3607.866 MB/sec
                 gc.alloc.rate.norm:  155004899.840 B/op
                 gc.count:            67.000 counts
                 gc.time:             80.000 ms
                 heap.memory.used.mb: 81.182 MB

Iteration   4: 40.208 ms/op
                 gc.alloc.rate:       3609.212 MB/sec
                 gc.alloc.rate.norm:  154995800.941 B/op
                 gc.count:            72.000 counts
                 gc.time:             84.000 ms
                 heap.memory.used.mb: 155.829 MB

Iteration   5: 39.852 ms/op
                 gc.alloc.rate:       3618.317 MB/sec
                 gc.alloc.rate.norm:  155004204.078 B/op
                 gc.count:            72.000 counts
                 gc.time:             82.000 ms
                 heap.memory.used.mb: 162.438 MB


# Run progress: 95.83% complete, ETA 00:02:05
# Fork: 1 of 1
# Warmup Iteration   1: 80.760 ms/op
Iteration   1: 41.672 ms/op
                 gc.alloc.rate:       3486.920 MB/sec
                 gc.alloc.rate.norm:  155047728.490 B/op
                 gc.count:            65.000 counts
                 gc.time:             75.000 ms
                 heap.memory.used.mb: 155.887 MB

Iteration   2: 41.521 ms/op
                 gc.alloc.rate:       3500.183 MB/sec
                 gc.alloc.rate.norm:  155042926.694 B/op
                 gc.count:            66.000 counts
                 gc.time:             75.000 ms
                 heap.memory.used.mb: 235.734 MB

Iteration   3: 41.034 ms/op
                 gc.alloc.rate:       3541.469 MB/sec
                 gc.alloc.rate.norm:  155038444.082 B/op
                 gc.count:            71.000 counts
                 gc.time:             77.000 ms
                 heap.memory.used.mb: 155.583 MB

Iteration   4: 40.947 ms/op
                 gc.alloc.rate:       3544.036 MB/sec
                 gc.alloc.rate.norm:  155028482.560 B/op
                 gc.count:            69.000 counts
                 gc.time:             80.000 ms
                 heap.memory.used.mb: 76.299 MB

Iteration   5: 40.512 ms/op
                 gc.alloc.rate:       3555.373 MB/sec
                 gc.alloc.rate.norm:  155037196.480 B/op
                 gc.count:            73.000 counts
                 gc.time:             84.000 ms
                 heap.memory.used.mb: 88.679 MB



Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax":
  41.137 ±(99.9%) 1.797 ms/op [Average]
  (min, avg, max) = (40.512, 41.137, 41.672), stdev = 0.467
  CI (99.9%): [39.340, 42.934] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate":
  3525.596 ±(99.9%) 115.844 MB/sec [Average]
  (min, avg, max) = (3486.920, 3525.596, 3555.373), stdev = 30.084
  CI (99.9%): [3409.752, 3641.440] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate.norm":
  155038955.661 ±(99.9%) 27618.400 B/op [Average]
  (min, avg, max) = (155028482.560, 155038955.661, 155047728.490), stdev = 7172.411
  CI (99.9%): [155011337.261, 155066574.061] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.count":
  344.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (65.000, 68.800, 73.000), stdev = 3.347
  CI (99.9%): [344.000, 344.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.time":
  391.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (75.000, 78.200, 84.000), stdev = 3.834
  CI (99.9%): [391.000, 391.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:heap.memory.used.mb":
  142.436 ±(99.9%) 245.976 MB [Average]
  (min, avg, max) = (76.299, 142.436, 235.734), stdev = 63.879
  CI (99.9%): [≈ 0, 388.412] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/Users/gmoon/IdeaProjects/toy/spring-poi/src/test/resources/benchmark/excelsaxbenchmark/excelsaxbenchmark-heapdump.hprof -Dserver.port=9000
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 2 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax
# Parameters: (excelDataRowSize = 150000)

# Run progress: 97.22% complete, ETA 00:01:23
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 102.008 ms/op
Iteration   1: 53.627 ms/op
                 gc.alloc.rate:       3021.535 MB/sec
                 gc.alloc.rate.norm:  172940561.053 B/op
                 gc.count:            95.000 counts
                 gc.time:             97.000 ms
                 heap.memory.used.mb: 56.164 MB

Iteration   2: 52.785 ms/op
                 gc.alloc.rate:       3062.125 MB/sec
                 gc.alloc.rate.norm:  172938507.158 B/op
                 gc.count:            96.000 counts
                 gc.time:             97.000 ms
                 heap.memory.used.mb: 60.004 MB

Iteration   3: 52.943 ms/op
                 gc.alloc.rate:       3055.449 MB/sec
                 gc.alloc.rate.norm:  172932984.632 B/op
                 gc.count:            96.000 counts
                 gc.time:             99.000 ms
                 heap.memory.used.mb: 60.024 MB

Iteration   4: 52.804 ms/op
                 gc.alloc.rate:       3065.278 MB/sec
                 gc.alloc.rate.norm:  172928680.000 B/op
                 gc.count:            97.000 counts
                 gc.time:             97.000 ms
                 heap.memory.used.mb: 58.643 MB

Iteration   5: 52.982 ms/op
                 gc.alloc.rate:       3034.265 MB/sec
                 gc.alloc.rate.norm:  172938277.053 B/op
                 gc.count:            98.000 counts
                 gc.time:             112.000 ms
                 heap.memory.used.mb: 69.008 MB


# Run progress: 98.61% complete, ETA 00:00:41
# Fork: 1 of 1
# Warmup Iteration   1: 101.020 ms/op
Iteration   1: 54.394 ms/op
                 gc.alloc.rate:       2975.681 MB/sec
                 gc.alloc.rate.norm:  172941588.108 B/op
                 gc.count:            95.000 counts
                 gc.time:             97.000 ms
                 heap.memory.used.mb: 54.137 MB

Iteration   2: 53.103 ms/op
                 gc.alloc.rate:       3051.707 MB/sec
                 gc.alloc.rate.norm:  172939617.895 B/op
                 gc.count:            96.000 counts
                 gc.time:             96.000 ms
                 heap.memory.used.mb: 60.108 MB

Iteration   3: 53.134 ms/op
                 gc.alloc.rate:       3041.419 MB/sec
                 gc.alloc.rate.norm:  172934026.526 B/op
                 gc.count:            96.000 counts
                 gc.time:             103.000 ms
                 heap.memory.used.mb: 59.100 MB

Iteration   4: 53.083 ms/op
                 gc.alloc.rate:       3047.957 MB/sec
                 gc.alloc.rate.norm:  172930065.684 B/op
                 gc.count:            97.000 counts
                 gc.time:             101.000 ms
                 heap.memory.used.mb: 59.065 MB

Iteration   5: 54.642 ms/op
                 gc.alloc.rate:       2940.873 MB/sec
                 gc.alloc.rate.norm:  172939852.973 B/op
                 gc.count:            97.000 counts
                 gc.time:             102.000 ms
                 heap.memory.used.mb: 61.048 MB



Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax":
  53.671 ±(99.9%) 2.997 ms/op [Average]
  (min, avg, max) = (53.083, 53.671, 54.642), stdev = 0.778
  CI (99.9%): [50.675, 56.668] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate":
  3011.527 ±(99.9%) 193.607 MB/sec [Average]
  (min, avg, max) = (2940.873, 3011.527, 3051.707), stdev = 50.279
  CI (99.9%): [2817.920, 3205.135] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate.norm":
  172937030.237 ±(99.9%) 18563.666 B/op [Average]
  (min, avg, max) = (172930065.684, 172937030.237, 172941588.108), stdev = 4820.925
  CI (99.9%): [172918466.571, 172955593.903] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.count":
  481.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (95.000, 96.200, 97.000), stdev = 0.837
  CI (99.9%): [481.000, 481.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.time":
  499.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (96.000, 99.800, 103.000), stdev = 3.114
  CI (99.9%): [499.000, 499.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:heap.memory.used.mb":
  58.691 ±(99.9%) 10.297 MB [Average]
  (min, avg, max) = (54.137, 58.691, 61.048), stdev = 2.674
  CI (99.9%): [48.394, 68.989] (assumes normal distribution)


# Run complete. Total time: 00:49:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                      (excelDataRowSize)   Mode  Cnt           Score          Error   Units
ExcelSAXBenchmark.readDom                                       1  thrpt    5           0.773 ±        0.468  ops/ms
ExcelSAXBenchmark.readDom:gc.alloc.rate                         1  thrpt    5        1459.616 ±      817.976  MB/sec
ExcelSAXBenchmark.readDom:gc.alloc.rate.norm                    1  thrpt    5     2030820.874 ±    61753.641    B/op
ExcelSAXBenchmark.readDom:gc.count                              1  thrpt    5         191.000                 counts
ExcelSAXBenchmark.readDom:gc.time                               1  thrpt    5         326.000                     ms
ExcelSAXBenchmark.readDom:heap.memory.used.mb                   1  thrpt    5          33.692 ±       81.824      MB
ExcelSAXBenchmark.readDom                                     100  thrpt    5           0.350 ±        0.148  ops/ms
ExcelSAXBenchmark.readDom:gc.alloc.rate                       100  thrpt    5        2363.666 ±      975.100  MB/sec
ExcelSAXBenchmark.readDom:gc.alloc.rate.norm                  100  thrpt    5     7265606.185 ±    58638.739    B/op
ExcelSAXBenchmark.readDom:gc.count                            100  thrpt    5         305.000                 counts
ExcelSAXBenchmark.readDom:gc.time                             100  thrpt    5         399.000                     ms
ExcelSAXBenchmark.readDom:heap.memory.used.mb                 100  thrpt    5          49.240 ±      111.163      MB
ExcelSAXBenchmark.readDom                                     500  thrpt    5           0.101 ±        0.024  ops/ms
ExcelSAXBenchmark.readDom:gc.alloc.rate                       500  thrpt    5        2674.416 ±      601.882  MB/sec
ExcelSAXBenchmark.readDom:gc.alloc.rate.norm                  500  thrpt    5    28542159.461 ±   101648.731    B/op
ExcelSAXBenchmark.readDom:gc.count                            500  thrpt    5         271.000                 counts
ExcelSAXBenchmark.readDom:gc.time                             500  thrpt    5         453.000                     ms
ExcelSAXBenchmark.readDom:heap.memory.used.mb                 500  thrpt    5          46.965 ±      129.882      MB
ExcelSAXBenchmark.readDom                                    1000  thrpt    5           0.053 ±        0.009  ops/ms
ExcelSAXBenchmark.readDom:gc.alloc.rate                      1000  thrpt    5        2718.997 ±      450.669  MB/sec
ExcelSAXBenchmark.readDom:gc.alloc.rate.norm                 1000  thrpt    5    55176277.797 ±   140132.363    B/op
ExcelSAXBenchmark.readDom:gc.count                           1000  thrpt    5         230.000                 counts
ExcelSAXBenchmark.readDom:gc.time                            1000  thrpt    5         504.000                     ms
ExcelSAXBenchmark.readDom:heap.memory.used.mb                1000  thrpt    5          64.959 ±      202.672      MB
ExcelSAXBenchmark.readDom                                    5000  thrpt    5           0.007 ±        0.001  ops/ms
ExcelSAXBenchmark.readDom:gc.alloc.rate                      5000  thrpt    5        1815.693 ±      177.978  MB/sec
ExcelSAXBenchmark.readDom:gc.alloc.rate.norm                 5000  thrpt    5   267848843.260 ±   205026.140    B/op
ExcelSAXBenchmark.readDom:gc.count                           5000  thrpt    5         224.000                 counts
ExcelSAXBenchmark.readDom:gc.time                            5000  thrpt    5        1065.000                     ms
ExcelSAXBenchmark.readDom:heap.memory.used.mb                5000  thrpt    5         181.388 ±       88.820      MB
ExcelSAXBenchmark.readDom                                   10000  thrpt    5           0.003 ±        0.001  ops/ms
ExcelSAXBenchmark.readDom:gc.alloc.rate                     10000  thrpt    5        1492.390 ±      128.018  MB/sec
ExcelSAXBenchmark.readDom:gc.alloc.rate.norm                10000  thrpt    5   533817128.838 ±   423742.049    B/op
ExcelSAXBenchmark.readDom:gc.count                          10000  thrpt    5         193.000                 counts
ExcelSAXBenchmark.readDom:gc.time                           10000  thrpt    5         992.000                     ms
ExcelSAXBenchmark.readDom:heap.memory.used.mb               10000  thrpt    5         243.152 ±      337.973      MB
ExcelSAXBenchmark.readDom                                   15000  thrpt    5           0.002 ±        0.001  ops/ms
ExcelSAXBenchmark.readDom:gc.alloc.rate                     15000  thrpt    5        1202.721 ±      165.337  MB/sec
ExcelSAXBenchmark.readDom:gc.alloc.rate.norm                15000  thrpt    5   802390547.600 ±  4117572.222    B/op
ExcelSAXBenchmark.readDom:gc.count                          15000  thrpt    5         172.000                 counts
ExcelSAXBenchmark.readDom:gc.time                           15000  thrpt    5         996.000                     ms
ExcelSAXBenchmark.readDom:heap.memory.used.mb               15000  thrpt    5         231.167 ±      399.413      MB
ExcelSAXBenchmark.readDom                                  100000  thrpt    5          ≈ 10⁻⁴                 ops/ms
ExcelSAXBenchmark.readDom:gc.alloc.rate                    100000  thrpt    5         331.902 ±       73.783  MB/sec
ExcelSAXBenchmark.readDom:gc.alloc.rate.norm               100000  thrpt    5  5347874315.200 ± 15722489.139    B/op
ExcelSAXBenchmark.readDom:gc.count                         100000  thrpt    5         256.000                 counts
ExcelSAXBenchmark.readDom:gc.time                          100000  thrpt    5        1463.000                     ms
ExcelSAXBenchmark.readDom:heap.memory.used.mb              100000  thrpt    5         736.898 ±       56.534      MB
ExcelSAXBenchmark.readDom                                  150000  thrpt    5          ≈ 10⁻⁵                 ops/ms
ExcelSAXBenchmark.readDom:gc.alloc.rate                    150000  thrpt    5         132.896 ±       19.031  MB/sec
ExcelSAXBenchmark.readDom:gc.alloc.rate.norm               150000  thrpt    5  7987336745.600 ± 22589344.586    B/op
ExcelSAXBenchmark.readDom:gc.count                         150000  thrpt    5        1767.000                 counts
ExcelSAXBenchmark.readDom:gc.time                          150000  thrpt    5      125873.000                     ms
ExcelSAXBenchmark.readDom:heap.memory.used.mb              150000  thrpt    5         986.207 ±        0.758      MB
ExcelSAXBenchmark.readSax                                       1  thrpt    5           1.943 ±        0.557  ops/ms
ExcelSAXBenchmark.readSax:gc.alloc.rate                         1  thrpt    5        2374.029 ±      662.837  MB/sec
ExcelSAXBenchmark.readSax:gc.alloc.rate.norm                    1  thrpt    5     1311128.026 ±     6002.754    B/op
ExcelSAXBenchmark.readSax:gc.count                              1  thrpt    5         310.000                 counts
ExcelSAXBenchmark.readSax:gc.time                               1  thrpt    5         359.000                     ms
ExcelSAXBenchmark.readSax:heap.memory.used.mb                   1  thrpt    5          23.960 ±      111.540      MB
ExcelSAXBenchmark.readSax                                     100  thrpt    5           0.511 ±        0.240  ops/ms
ExcelSAXBenchmark.readSax:gc.alloc.rate                       100  thrpt    5        3091.913 ±     1432.254  MB/sec
ExcelSAXBenchmark.readSax:gc.alloc.rate.norm                  100  thrpt    5     6468177.875 ±    18657.134    B/op
ExcelSAXBenchmark.readSax:gc.count                            100  thrpt    5         339.000                 counts
ExcelSAXBenchmark.readSax:gc.time                             100  thrpt    5         363.000                     ms
ExcelSAXBenchmark.readSax:heap.memory.used.mb                 100  thrpt    5          49.071 ±      106.742      MB
ExcelSAXBenchmark.readSax                                     500  thrpt    5           0.135 ±        0.020  ops/ms
ExcelSAXBenchmark.readSax:gc.alloc.rate                       500  thrpt    5        3454.139 ±      500.121  MB/sec
ExcelSAXBenchmark.readSax:gc.alloc.rate.norm                  500  thrpt    5    27407556.702 ±    46439.528    B/op
ExcelSAXBenchmark.readSax:gc.count                            500  thrpt    5         377.000                 counts
ExcelSAXBenchmark.readSax:gc.time                             500  thrpt    5         388.000                     ms
ExcelSAXBenchmark.readSax:heap.memory.used.mb                 500  thrpt    5          71.411 ±       98.318      MB
ExcelSAXBenchmark.readSax                                    1000  thrpt    5           0.066 ±        0.007  ops/ms
ExcelSAXBenchmark.readSax:gc.alloc.rate                      1000  thrpt    5        3316.331 ±      303.552  MB/sec
ExcelSAXBenchmark.readSax:gc.alloc.rate.norm                 1000  thrpt    5    53661814.053 ±    45833.869    B/op
ExcelSAXBenchmark.readSax:gc.count                           1000  thrpt    5         358.000                 counts
ExcelSAXBenchmark.readSax:gc.time                            1000  thrpt    5         393.000                     ms
ExcelSAXBenchmark.readSax:heap.memory.used.mb                1000  thrpt    5          69.467 ±      110.160      MB
ExcelSAXBenchmark.readSax                                    5000  thrpt    5           0.055 ±        0.010  ops/ms
ExcelSAXBenchmark.readSax:gc.alloc.rate                      5000  thrpt    5        2897.395 ±      515.677  MB/sec
ExcelSAXBenchmark.readSax:gc.alloc.rate.norm                 5000  thrpt    5    56630219.844 ±    46426.733    B/op
ExcelSAXBenchmark.readSax:gc.count                           5000  thrpt    5         557.000                 counts
ExcelSAXBenchmark.readSax:gc.time                            5000  thrpt    5         603.000                     ms
ExcelSAXBenchmark.readSax:heap.memory.used.mb                5000  thrpt    5         102.037 ±      291.508      MB
ExcelSAXBenchmark.readSax                                   10000  thrpt    5           0.051 ±        0.003  ops/ms
ExcelSAXBenchmark.readSax:gc.alloc.rate                     10000  thrpt    5        2863.290 ±      175.459  MB/sec
ExcelSAXBenchmark.readSax:gc.alloc.rate.norm                10000  thrpt    5    60446672.175 ±    37922.466    B/op
ExcelSAXBenchmark.readSax:gc.count                          10000  thrpt    5         567.000                 counts
ExcelSAXBenchmark.readSax:gc.time                           10000  thrpt    5         596.000                     ms
ExcelSAXBenchmark.readSax:heap.memory.used.mb               10000  thrpt    5          70.868 ±      148.992      MB
ExcelSAXBenchmark.readSax                                   15000  thrpt    5           0.046 ±        0.004  ops/ms
ExcelSAXBenchmark.readSax:gc.alloc.rate                     15000  thrpt    5        2839.886 ±      171.607  MB/sec
ExcelSAXBenchmark.readSax:gc.alloc.rate.norm                15000  thrpt    5    66400889.227 ±    38940.043    B/op
ExcelSAXBenchmark.readSax:gc.count                          15000  thrpt    5         754.000                 counts
ExcelSAXBenchmark.readSax:gc.time                           15000  thrpt    5         733.000                     ms
ExcelSAXBenchmark.readSax:heap.memory.used.mb               15000  thrpt    5          76.828 ±      131.159      MB
ExcelSAXBenchmark.readSax                                  100000  thrpt    5           0.023 ±        0.001  ops/ms
ExcelSAXBenchmark.readSax:gc.alloc.rate                    100000  thrpt    5        3304.137 ±      100.430  MB/sec
ExcelSAXBenchmark.readSax:gc.alloc.rate.norm               100000  thrpt    5   155007560.666 ±    29502.330    B/op
ExcelSAXBenchmark.readSax:gc.count                         100000  thrpt    5         320.000                 counts
ExcelSAXBenchmark.readSax:gc.time                          100000  thrpt    5         390.000                     ms
ExcelSAXBenchmark.readSax:heap.memory.used.mb              100000  thrpt    5         114.000 ±      268.551      MB
ExcelSAXBenchmark.readSax                                  150000  thrpt    5           0.018 ±        0.001  ops/ms
ExcelSAXBenchmark.readSax:gc.alloc.rate                    150000  thrpt    5        2921.995 ±       97.376  MB/sec
ExcelSAXBenchmark.readSax:gc.alloc.rate.norm               150000  thrpt    5   172969785.363 ±    20012.797    B/op
ExcelSAXBenchmark.readSax:gc.count                         150000  thrpt    5         470.000                 counts
ExcelSAXBenchmark.readSax:gc.time                          150000  thrpt    5         503.000                     ms
ExcelSAXBenchmark.readSax:heap.memory.used.mb              150000  thrpt    5          56.442 ±       14.170      MB
ExcelSAXBenchmark.readDom                                       1   avgt    5           1.165 ±        0.461   ms/op
ExcelSAXBenchmark.readDom:gc.alloc.rate                         1   avgt    5        1630.424 ±      556.732  MB/sec
ExcelSAXBenchmark.readDom:gc.alloc.rate.norm                    1   avgt    5     2021593.103 ±    15256.057    B/op
ExcelSAXBenchmark.readDom:gc.count                              1   avgt    5         217.000                 counts
ExcelSAXBenchmark.readDom:gc.time                               1   avgt    5         322.000                     ms
ExcelSAXBenchmark.readDom:heap.memory.used.mb                   1   avgt    5          41.793 ±       97.825      MB
ExcelSAXBenchmark.readDom                                     100   avgt    5           2.752 ±        0.966   ms/op
ExcelSAXBenchmark.readDom:gc.alloc.rate                       100   avgt    5        2474.212 ±      809.672  MB/sec
ExcelSAXBenchmark.readDom:gc.alloc.rate.norm                  100   avgt    5     7260124.749 ±    39908.852    B/op
ExcelSAXBenchmark.readDom:gc.count                            100   avgt    5         300.000                 counts
ExcelSAXBenchmark.readDom:gc.time                             100   avgt    5         373.000                     ms
ExcelSAXBenchmark.readDom:heap.memory.used.mb                 100   avgt    5          27.217 ±      103.925      MB
ExcelSAXBenchmark.readDom                                     500   avgt    5           9.558 ±        2.250   ms/op
ExcelSAXBenchmark.readDom:gc.alloc.rate                       500   avgt    5        2789.700 ±      584.829  MB/sec
ExcelSAXBenchmark.readDom:gc.alloc.rate.norm                  500   avgt    5    28540958.737 ±    98130.617    B/op
ExcelSAXBenchmark.readDom:gc.count                            500   avgt    5         281.000                 counts
ExcelSAXBenchmark.readDom:gc.time                             500   avgt    5         451.000                     ms
ExcelSAXBenchmark.readDom:heap.memory.used.mb                 500   avgt    5          46.547 ±      170.417      MB
ExcelSAXBenchmark.readDom                                    1000   avgt    5          18.400 ±        2.922   ms/op
ExcelSAXBenchmark.readDom:gc.alloc.rate                      1000   avgt    5        2798.504 ±      415.516  MB/sec
ExcelSAXBenchmark.readDom:gc.alloc.rate.norm                 1000   avgt    5    55171167.652 ±   122207.785    B/op
ExcelSAXBenchmark.readDom:gc.count                           1000   avgt    5         244.000                 counts
ExcelSAXBenchmark.readDom:gc.time                            1000   avgt    5         519.000                     ms
ExcelSAXBenchmark.readDom:heap.memory.used.mb                1000   avgt    5          67.066 ±      197.614      MB
ExcelSAXBenchmark.readDom                                    5000   avgt    5         133.440 ±       21.231   ms/op
ExcelSAXBenchmark.readDom:gc.alloc.rate                      5000   avgt    5        1877.562 ±      299.231  MB/sec
ExcelSAXBenchmark.readDom:gc.alloc.rate.norm                 5000   avgt    5   267845924.013 ±   184474.710    B/op
ExcelSAXBenchmark.readDom:gc.count                           5000   avgt    5         236.000                 counts
ExcelSAXBenchmark.readDom:gc.time                            5000   avgt    5        1076.000                     ms
ExcelSAXBenchmark.readDom:heap.memory.used.mb                5000   avgt    5         175.035 ±      183.881      MB
ExcelSAXBenchmark.readDom                                   10000   avgt    5         337.725 ±       27.290   ms/op
ExcelSAXBenchmark.readDom:gc.alloc.rate                     10000   avgt    5        1480.067 ±      128.004  MB/sec
ExcelSAXBenchmark.readDom:gc.alloc.rate.norm                10000   avgt    5   533750624.152 ±   461984.345    B/op
ExcelSAXBenchmark.readDom:gc.count                          10000   avgt    5         186.000                 counts
ExcelSAXBenchmark.readDom:gc.time                           10000   avgt    5         972.000                     ms
ExcelSAXBenchmark.readDom:heap.memory.used.mb               10000   avgt    5         231.327 ±      287.230      MB
ExcelSAXBenchmark.readDom                                   15000   avgt    5         600.982 ±       67.993   ms/op
ExcelSAXBenchmark.readDom:gc.alloc.rate                     15000   avgt    5        1251.606 ±      141.304  MB/sec
ExcelSAXBenchmark.readDom:gc.alloc.rate.norm                15000   avgt    5   801912004.000 ±  3114928.365    B/op
ExcelSAXBenchmark.readDom:gc.count                          15000   avgt    5         169.000                 counts
ExcelSAXBenchmark.readDom:gc.time                           15000   avgt    5         981.000                     ms
ExcelSAXBenchmark.readDom:heap.memory.used.mb               15000   avgt    5         325.059 ±      395.256      MB
ExcelSAXBenchmark.readDom                                  100000   avgt    5       14429.330 ±     2121.937   ms/op
ExcelSAXBenchmark.readDom:gc.alloc.rate                    100000   avgt    5         352.977 ±       51.108  MB/sec
ExcelSAXBenchmark.readDom:gc.alloc.rate.norm               100000   avgt    5  5348021600.000 ± 16972259.944    B/op
ExcelSAXBenchmark.readDom:gc.count                         100000   avgt    5         264.000                 counts
ExcelSAXBenchmark.readDom:gc.time                          100000   avgt    5        1442.000                     ms
ExcelSAXBenchmark.readDom:heap.memory.used.mb              100000   avgt    5         757.650 ±       23.789      MB
ExcelSAXBenchmark.readDom                                  150000   avgt    5       60599.529 ±    11612.296   ms/op
ExcelSAXBenchmark.readDom:gc.alloc.rate                    150000   avgt    5         125.933 ±       24.299  MB/sec
ExcelSAXBenchmark.readDom:gc.alloc.rate.norm               150000   avgt    5  7991799777.600 ± 19241317.096    B/op
ExcelSAXBenchmark.readDom:gc.count                         150000   avgt    5        1754.000                 counts
ExcelSAXBenchmark.readDom:gc.time                          150000   avgt    5      140596.000                     ms
ExcelSAXBenchmark.readDom:heap.memory.used.mb              150000   avgt    5         788.653 ±     1692.874      MB
ExcelSAXBenchmark.readSax                                       1   avgt    5           0.525 ±        0.220   ms/op
ExcelSAXBenchmark.readSax:gc.alloc.rate                         1   avgt    5        2352.908 ±      934.347  MB/sec
ExcelSAXBenchmark.readSax:gc.alloc.rate.norm                    1   avgt    5     1310688.370 ±     6158.402    B/op
ExcelSAXBenchmark.readSax:gc.count                              1   avgt    5         313.000                 counts
ExcelSAXBenchmark.readSax:gc.time                               1   avgt    5         344.000                     ms
ExcelSAXBenchmark.readSax:heap.memory.used.mb                   1   avgt    5          23.178 ±       84.478      MB
ExcelSAXBenchmark.readSax                                     100   avgt    5           1.704 ±        0.382   ms/op
ExcelSAXBenchmark.readSax:gc.alloc.rate                       100   avgt    5        3553.668 ±      743.484  MB/sec
ExcelSAXBenchmark.readSax:gc.alloc.rate.norm                  100   avgt    5     6467630.403 ±    15329.293    B/op
ExcelSAXBenchmark.readSax:gc.count                            100   avgt    5         382.000                 counts
ExcelSAXBenchmark.readSax:gc.time                             100   avgt    5         370.000                     ms
ExcelSAXBenchmark.readSax:heap.memory.used.mb                 100   avgt    5          37.387 ±      116.197      MB
ExcelSAXBenchmark.readSax                                     500   avgt    5           7.103 ±        1.188   ms/op
ExcelSAXBenchmark.readSax:gc.alloc.rate                       500   avgt    5        3607.651 ±      543.613  MB/sec
ExcelSAXBenchmark.readSax:gc.alloc.rate.norm                  500   avgt    5    27406741.101 ±    45274.621    B/op
ExcelSAXBenchmark.readSax:gc.count                            500   avgt    5         392.000                 counts
ExcelSAXBenchmark.readSax:gc.time                             500   avgt    5         385.000                     ms
ExcelSAXBenchmark.readSax:heap.memory.used.mb                 500   avgt    5          33.129 ±      109.608      MB
ExcelSAXBenchmark.readSax                                    1000   avgt    5          14.741 ±        1.534   ms/op
ExcelSAXBenchmark.readSax:gc.alloc.rate                      1000   avgt    5        3400.613 ±      327.691  MB/sec
ExcelSAXBenchmark.readSax:gc.alloc.rate.norm                 1000   avgt    5    53660368.192 ±    44581.984    B/op
ExcelSAXBenchmark.readSax:gc.count                           1000   avgt    5         379.000                 counts
ExcelSAXBenchmark.readSax:gc.time                            1000   avgt    5         392.000                     ms
ExcelSAXBenchmark.readSax:heap.memory.used.mb                1000   avgt    5          52.895 ±      114.135      MB
ExcelSAXBenchmark.readSax                                    5000   avgt    5          18.161 ±        4.440   ms/op
ExcelSAXBenchmark.readSax:gc.alloc.rate                      5000   avgt    5        2918.467 ±      687.035  MB/sec
ExcelSAXBenchmark.readSax:gc.alloc.rate.norm                 5000   avgt    5    56625988.736 ±    41835.398    B/op
ExcelSAXBenchmark.readSax:gc.count                           5000   avgt    5         868.000                 counts
ExcelSAXBenchmark.readSax:gc.time                            5000   avgt    5         786.000                     ms
ExcelSAXBenchmark.readSax:heap.memory.used.mb                5000   avgt    5          95.252 ±      141.681      MB
ExcelSAXBenchmark.readSax                                   10000   avgt    5          19.662 ±        5.556   ms/op
ExcelSAXBenchmark.readSax:gc.alloc.rate                     10000   avgt    5        2883.542 ±      799.310  MB/sec
ExcelSAXBenchmark.readSax:gc.alloc.rate.norm                10000   avgt    5    60480308.544 ±    39706.391    B/op
ExcelSAXBenchmark.readSax:gc.count                          10000   avgt    5        1005.000                 counts
ExcelSAXBenchmark.readSax:gc.time                           10000   avgt    5         873.000                     ms
ExcelSAXBenchmark.readSax:heap.memory.used.mb               10000   avgt    5          64.132 ±      159.594      MB
ExcelSAXBenchmark.readSax                                   15000   avgt    5          20.418 ±        5.640   ms/op
ExcelSAXBenchmark.readSax:gc.alloc.rate                     15000   avgt    5        2987.467 ±      812.504  MB/sec
ExcelSAXBenchmark.readSax:gc.alloc.rate.norm                15000   avgt    5    66399678.923 ±    39942.404    B/op
ExcelSAXBenchmark.readSax:gc.count                          15000   avgt    5         792.000                 counts
ExcelSAXBenchmark.readSax:gc.time                           15000   avgt    5         948.000                     ms
ExcelSAXBenchmark.readSax:heap.memory.used.mb               15000   avgt    5          59.666 ±       79.321      MB
ExcelSAXBenchmark.readSax                                  100000   avgt    5          41.137 ±        1.797   ms/op
ExcelSAXBenchmark.readSax:gc.alloc.rate                    100000   avgt    5        3525.596 ±      115.844  MB/sec
ExcelSAXBenchmark.readSax:gc.alloc.rate.norm               100000   avgt    5   155038955.661 ±    27618.400    B/op
ExcelSAXBenchmark.readSax:gc.count                         100000   avgt    5         344.000                 counts
ExcelSAXBenchmark.readSax:gc.time                          100000   avgt    5         391.000                     ms
ExcelSAXBenchmark.readSax:heap.memory.used.mb              100000   avgt    5         142.436 ±      245.976      MB
ExcelSAXBenchmark.readSax                                  150000   avgt    5          53.671 ±        2.997   ms/op
ExcelSAXBenchmark.readSax:gc.alloc.rate                    150000   avgt    5        3011.527 ±      193.607  MB/sec
ExcelSAXBenchmark.readSax:gc.alloc.rate.norm               150000   avgt    5   172937030.237 ±    18563.666    B/op
ExcelSAXBenchmark.readSax:gc.count                         150000   avgt    5         481.000                 counts
ExcelSAXBenchmark.readSax:gc.time                          150000   avgt    5         499.000                     ms
ExcelSAXBenchmark.readSax:heap.memory.used.mb              150000   avgt    5          58.691 ±       10.297      MB
