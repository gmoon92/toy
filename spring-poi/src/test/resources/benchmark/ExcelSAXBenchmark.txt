# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./benchmark-heapdump.hprof
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom
# Parameters: (excelDataRowSize = 1)

# Run progress: 0.00% complete, ETA 00:31:12
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0.244 ops/ms
Iteration   1: 0.709 ops/ms
                 gc.alloc.rate:       1319.729 MB/sec
                 gc.alloc.rate.norm:  2011236.053 B/op
                 gc.count:            86.000 counts
                 gc.time:             107.000 ms
                 heap.memory.used.mb: 55.383 MB

Iteration   2: 0.876 ops/ms
                 gc.alloc.rate:       1622.473 MB/sec
                 gc.alloc.rate.norm:  1993854.295 B/op
                 gc.count:            100.000 counts
                 gc.time:             92.000 ms
                 heap.memory.used.mb: 12.169 MB

Iteration   3: 0.917 ops/ms
                 gc.alloc.rate:       1701.859 MB/sec
                 gc.alloc.rate.norm:  1993255.371 B/op
                 gc.count:            116.000 counts
                 gc.time:             71.000 ms
                 heap.memory.used.mb: 68.172 MB

Iteration   4: 0.831 ops/ms
                 gc.alloc.rate:       1539.385 MB/sec
                 gc.alloc.rate.norm:  1992993.876 B/op
                 gc.count:            104.000 counts
                 gc.time:             87.000 ms
                 heap.memory.used.mb: 19.123 MB

Iteration   5: 0.922 ops/ms
                 gc.alloc.rate:       1709.089 MB/sec
                 gc.alloc.rate.norm:  1992868.366 B/op
                 gc.count:            115.000 counts
                 gc.time:             75.000 ms
                 heap.memory.used.mb: 39.663 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 1.39% complete, ETA 01:14:52
# Fork: 1 of 1
# Warmup Iteration   1: 0.164 ops/ms
Iteration   1: 0.767 ops/ms
                 gc.alloc.rate:       1421.230 MB/sec
                 gc.alloc.rate.norm:  2001693.733 B/op
                 gc.count:            90.000 counts
                 gc.time:             94.000 ms
                 heap.memory.used.mb: 72.860 MB

Iteration   2: 0.891 ops/ms
                 gc.alloc.rate:       1646.826 MB/sec
                 gc.alloc.rate.norm:  1993228.282 B/op
                 gc.count:            116.000 counts
                 gc.time:             94.000 ms
                 heap.memory.used.mb: 45.139 MB

Iteration   3: 0.914 ops/ms
                 gc.alloc.rate:       1694.650 MB/sec
                 gc.alloc.rate.norm:  1992858.803 B/op
                 gc.count:            117.000 counts
                 gc.time:             68.000 ms
                 heap.memory.used.mb: 30.649 MB

Iteration   4: 0.937 ops/ms
                 gc.alloc.rate:       1732.486 MB/sec
                 gc.alloc.rate.norm:  1992721.181 B/op
                 gc.count:            120.000 counts
                 gc.time:             84.000 ms
                 heap.memory.used.mb: 25.191 MB

Iteration   5: 0.923 ops/ms
                 gc.alloc.rate:       1707.093 MB/sec
                 gc.alloc.rate.norm:  1992723.671 B/op
                 gc.count:            118.000 counts
                 gc.time:             79.000 ms
                 heap.memory.used.mb: 41.646 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom":
  0.886 ±(99.9%) 0.265 ops/ms [Average]
  (min, avg, max) = (0.767, 0.886, 0.937), stdev = 0.069
  CI (99.9%): [0.622, 1.151] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate":
  1640.457 ±(99.9%) 486.873 MB/sec [Average]
  (min, avg, max) = (1421.230, 1640.457, 1732.486), stdev = 126.439
  CI (99.9%): [1153.584, 2127.330] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate.norm":
  1994645.134 ±(99.9%) 15193.562 B/op [Average]
  (min, avg, max) = (1992721.181, 1994645.134, 2001693.733), stdev = 3945.720
  CI (99.9%): [1979451.572, 2009838.696] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.count":
  561.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (90.000, 112.200, 120.000), stdev = 12.498
  CI (99.9%): [561.000, 561.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.time":
  419.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (68.000, 83.800, 94.000), stdev = 10.964
  CI (99.9%): [419.000, 419.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:heap.memory.used.mb":
  43.097 ±(99.9%) 71.203 MB [Average]
  (min, avg, max) = (25.191, 43.097, 72.860), stdev = 18.491
  CI (99.9%): [≈ 0, 114.300] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./benchmark-heapdump.hprof
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom
# Parameters: (excelDataRowSize = 100)

# Run progress: 2.78% complete, ETA 01:14:06
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0.096 ops/ms
Iteration   1: 0.363 ops/ms
                 gc.alloc.rate:       2405.792 MB/sec
                 gc.alloc.rate.norm:  7143168.823 B/op
                 gc.count:            170.000 counts
                 gc.time:             126.000 ms
                 heap.memory.used.mb: 34.479 MB

Iteration   2: 0.401 ops/ms
                 gc.alloc.rate:       2652.600 MB/sec
                 gc.alloc.rate.norm:  7126607.216 B/op
                 gc.count:            186.000 counts
                 gc.time:             121.000 ms
                 heap.memory.used.mb: 3.752 MB

Iteration   3: 0.404 ops/ms
                 gc.alloc.rate:       2667.171 MB/sec
                 gc.alloc.rate.norm:  7126034.535 B/op
                 gc.count:            185.000 counts
                 gc.time:             115.000 ms
                 heap.memory.used.mb: 2.752 MB

Iteration   4: 0.407 ops/ms
                 gc.alloc.rate:       2691.425 MB/sec
                 gc.alloc.rate.norm:  7125629.797 B/op
                 gc.count:            186.000 counts
                 gc.time:             111.000 ms
                 heap.memory.used.mb: 21.855 MB

Iteration   5: 0.408 ops/ms
                 gc.alloc.rate:       2695.288 MB/sec
                 gc.alloc.rate.norm:  7125545.145 B/op
                 gc.count:            186.000 counts
                 gc.time:             117.000 ms
                 heap.memory.used.mb: 61.639 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 4.17% complete, ETA 01:12:58
# Fork: 1 of 1
# Warmup Iteration   1: 0.096 ops/ms
Iteration   1: 0.366 ops/ms
                 gc.alloc.rate:       2421.475 MB/sec
                 gc.alloc.rate.norm:  7146235.066 B/op
                 gc.count:            136.000 counts
                 gc.time:             110.000 ms
                 heap.memory.used.mb: 3.007 MB

Iteration   2: 0.405 ops/ms
                 gc.alloc.rate:       2678.337 MB/sec
                 gc.alloc.rate.norm:  7128647.755 B/op
                 gc.count:            162.000 counts
                 gc.time:             112.000 ms
                 heap.memory.used.mb: 37.331 MB

Iteration   3: 0.407 ops/ms
                 gc.alloc.rate:       2692.871 MB/sec
                 gc.alloc.rate.norm:  7127930.472 B/op
                 gc.count:            193.000 counts
                 gc.time:             116.000 ms
                 heap.memory.used.mb: 45.659 MB

Iteration   4: 0.409 ops/ms
                 gc.alloc.rate:       2697.513 MB/sec
                 gc.alloc.rate.norm:  7127618.914 B/op
                 gc.count:            192.000 counts
                 gc.time:             126.000 ms
                 heap.memory.used.mb: 32.803 MB

Iteration   5: 0.410 ops/ms
                 gc.alloc.rate:       2711.284 MB/sec
                 gc.alloc.rate.norm:  7127517.819 B/op
                 gc.count:            193.000 counts
                 gc.time:             121.000 ms
                 heap.memory.used.mb: 20.286 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1175)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/java.lang.System.currentTimeMillis(Native Method)
  at app//org.apache.coyote.AbstractProtocol.lambda$startAsyncTimeout$0(AbstractProtocol.java:664)
  at app//org.apache.coyote.AbstractProtocol$$Lambda/0x0000007001a85688.run(Unknown Source)
  at java.base@21.0.3/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
  at java.base@21.0.3/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom":
  0.399 ±(99.9%) 0.073 ops/ms [Average]
  (min, avg, max) = (0.366, 0.399, 0.410), stdev = 0.019
  CI (99.9%): [0.327, 0.472] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate":
  2640.296 ±(99.9%) 473.203 MB/sec [Average]
  (min, avg, max) = (2421.475, 2640.296, 2711.284), stdev = 122.889
  CI (99.9%): [2167.093, 3113.499] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate.norm":
  7131590.005 ±(99.9%) 31570.531 B/op [Average]
  (min, avg, max) = (7127517.819, 7131590.005, 7146235.066), stdev = 8198.767
  CI (99.9%): [7100019.474, 7163160.536] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.count":
  876.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (136.000, 175.200, 193.000), stdev = 25.626
  CI (99.9%): [876.000, 876.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.time":
  585.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (110.000, 117.000, 126.000), stdev = 6.557
  CI (99.9%): [585.000, 585.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:heap.memory.used.mb":
  27.817 ±(99.9%) 64.029 MB [Average]
  (min, avg, max) = (3.007, 27.817, 45.659), stdev = 16.628
  CI (99.9%): [≈ 0, 91.846] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./benchmark-heapdump.hprof
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom
# Parameters: (excelDataRowSize = 500)

# Run progress: 5.56% complete, ETA 01:11:48
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0.023 ops/ms
Iteration   1: 0.100 ops/ms
                 gc.alloc.rate:       2597.831 MB/sec
                 gc.alloc.rate.norm:  27887700.581 B/op
                 gc.count:            131.000 counts
                 gc.time:             146.000 ms
                 heap.memory.used.mb: 102.177 MB

Iteration   2: 0.111 ops/ms
                 gc.alloc.rate:       2869.236 MB/sec
                 gc.alloc.rate.norm:  27851865.038 B/op
                 gc.count:            136.000 counts
                 gc.time:             150.000 ms
                 heap.memory.used.mb: 12.447 MB

Iteration   3: 0.108 ops/ms
                 gc.alloc.rate:       2797.290 MB/sec
                 gc.alloc.rate.norm:  27849587.690 B/op
                 gc.count:            131.000 counts
                 gc.time:             134.000 ms
                 heap.memory.used.mb: 77.428 MB

Iteration   4: 0.116 ops/ms
                 gc.alloc.rate:       2996.119 MB/sec
                 gc.alloc.rate.norm:  27849366.444 B/op
                 gc.count:            140.000 counts
                 gc.time:             144.000 ms
                 heap.memory.used.mb: 84.589 MB

Iteration   5: 0.117 ops/ms
                 gc.alloc.rate:       3014.379 MB/sec
                 gc.alloc.rate.norm:  27849235.877 B/op
                 gc.count:            139.000 counts
                 gc.time:             139.000 ms
                 heap.memory.used.mb: 60.736 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 6.94% complete, ETA 01:10:46
# Fork: 1 of 1
# Warmup Iteration   1: 0.028 ops/ms
Iteration   1: 0.106 ops/ms
                 gc.alloc.rate:       2752.306 MB/sec
                 gc.alloc.rate.norm:  27881707.632 B/op
                 gc.count:            138.000 counts
                 gc.time:             133.000 ms
                 heap.memory.used.mb: 25.034 MB

Iteration   2: 0.114 ops/ms
                 gc.alloc.rate:       2941.413 MB/sec
                 gc.alloc.rate.norm:  27851756.637 B/op
                 gc.count:            135.000 counts
                 gc.time:             153.000 ms
                 heap.memory.used.mb: 22.001 MB

Iteration   3: 0.115 ops/ms
                 gc.alloc.rate:       2984.435 MB/sec
                 gc.alloc.rate.norm:  27849506.893 B/op
                 gc.count:            137.000 counts
                 gc.time:             144.000 ms
                 heap.memory.used.mb: 74.531 MB

Iteration   4: 0.112 ops/ms
                 gc.alloc.rate:       2891.893 MB/sec
                 gc.alloc.rate.norm:  27849141.386 B/op
                 gc.count:            135.000 counts
                 gc.time:             141.000 ms
                 heap.memory.used.mb: 97.483 MB

Iteration   5: 0.112 ops/ms
                 gc.alloc.rate:       2888.845 MB/sec
                 gc.alloc.rate.norm:  27849212.107 B/op
                 gc.count:            128.000 counts
                 gc.time:             146.000 ms
                 heap.memory.used.mb: 17.576 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom":
  0.112 ±(99.9%) 0.013 ops/ms [Average]
  (min, avg, max) = (0.106, 0.112, 0.115), stdev = 0.003
  CI (99.9%): [0.099, 0.125] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate":
  2891.778 ±(99.9%) 336.298 MB/sec [Average]
  (min, avg, max) = (2752.306, 2891.778, 2984.435), stdev = 87.336
  CI (99.9%): [2555.480, 3228.077] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate.norm":
  27856264.931 ±(99.9%) 54924.481 B/op [Average]
  (min, avg, max) = (27849141.386, 27856264.931, 27881707.632), stdev = 14263.713
  CI (99.9%): [27801340.450, 27911189.412] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.count":
  673.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (128.000, 134.600, 138.000), stdev = 3.912
  CI (99.9%): [673.000, 673.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.time":
  717.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (133.000, 143.400, 153.000), stdev = 7.301
  CI (99.9%): [717.000, 717.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:heap.memory.used.mb":
  47.325 ±(99.9%) 139.891 MB [Average]
  (min, avg, max) = (17.576, 47.325, 97.483), stdev = 36.329
  CI (99.9%): [≈ 0, 187.216] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./benchmark-heapdump.hprof
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom
# Parameters: (excelDataRowSize = 1000)

# Run progress: 8.33% complete, ETA 01:09:41
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0.013 ops/ms
Iteration   1: 0.054 ops/ms
                 gc.alloc.rate:       2690.206 MB/sec
                 gc.alloc.rate.norm:  53830662.904 B/op
                 gc.count:            110.000 counts
                 gc.time:             169.000 ms
                 heap.memory.used.mb: 124.045 MB

Iteration   2: 0.057 ops/ms
                 gc.alloc.rate:       2841.616 MB/sec
                 gc.alloc.rate.norm:  53780004.014 B/op
                 gc.count:            113.000 counts
                 gc.time:             182.000 ms
                 heap.memory.used.mb: 43.283 MB

Iteration   3: 0.057 ops/ms
                 gc.alloc.rate:       2862.887 MB/sec
                 gc.alloc.rate.norm:  53774715.750 B/op
                 gc.count:            112.000 counts
                 gc.time:             183.000 ms
                 heap.memory.used.mb: 11.987 MB

Iteration   4: 0.058 ops/ms
                 gc.alloc.rate:       2869.328 MB/sec
                 gc.alloc.rate.norm:  53773234.574 B/op
                 gc.count:            112.000 counts
                 gc.time:             178.000 ms
                 heap.memory.used.mb: 93.305 MB

Iteration   5: 0.056 ops/ms
                 gc.alloc.rate:       2813.899 MB/sec
                 gc.alloc.rate.norm:  53772447.633 B/op
                 gc.count:            111.000 counts
                 gc.time:             191.000 ms
                 heap.memory.used.mb: 28.235 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 9.72% complete, ETA 01:08:38
# Fork: 1 of 1
# Warmup Iteration   1: 0.013 ops/ms
Iteration   1: 0.053 ops/ms
                 gc.alloc.rate:       2653.469 MB/sec
                 gc.alloc.rate.norm:  53801453.865 B/op
                 gc.count:            112.000 counts
                 gc.time:             174.000 ms
                 heap.memory.used.mb: 101.284 MB

Iteration   2: 0.057 ops/ms
                 gc.alloc.rate:       2816.991 MB/sec
                 gc.alloc.rate.norm:  53748821.795 B/op
                 gc.count:            115.000 counts
                 gc.time:             178.000 ms
                 heap.memory.used.mb: 65.551 MB

Iteration   3: 0.057 ops/ms
                 gc.alloc.rate:       2831.185 MB/sec
                 gc.alloc.rate.norm:  53742866.077 B/op
                 gc.count:            114.000 counts
                 gc.time:             180.000 ms
                 heap.memory.used.mb: 143.405 MB

Iteration   4: 0.057 ops/ms
                 gc.alloc.rate:       2826.398 MB/sec
                 gc.alloc.rate.norm:  53741885.249 B/op
                 gc.count:            107.000 counts
                 gc.time:             183.000 ms
                 heap.memory.used.mb: 50.606 MB

Iteration   5: 0.058 ops/ms
                 gc.alloc.rate:       2879.174 MB/sec
                 gc.alloc.rate.norm:  53741271.696 B/op
                 gc.count:            113.000 counts
                 gc.time:             174.000 ms
                 heap.memory.used.mb: 38.023 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom":
  0.056 ±(99.9%) 0.007 ops/ms [Average]
  (min, avg, max) = (0.053, 0.056, 0.058), stdev = 0.002
  CI (99.9%): [0.049, 0.063] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate":
  2801.444 ±(99.9%) 331.734 MB/sec [Average]
  (min, avg, max) = (2653.469, 2801.444, 2879.174), stdev = 86.150
  CI (99.9%): [2469.710, 3133.177] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate.norm":
  53755259.736 ±(99.9%) 100107.292 B/op [Average]
  (min, avg, max) = (53741271.696, 53755259.736, 53801453.865), stdev = 25997.546
  CI (99.9%): [53655152.444, 53855367.028] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.count":
  561.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (107.000, 112.200, 115.000), stdev = 3.114
  CI (99.9%): [561.000, 561.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.time":
  889.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (174.000, 177.800, 183.000), stdev = 3.899
  CI (99.9%): [889.000, 889.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:heap.memory.used.mb":
  79.774 ±(99.9%) 164.586 MB [Average]
  (min, avg, max) = (38.023, 79.774, 143.405), stdev = 42.743
  CI (99.9%): [≈ 0, 244.360] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./benchmark-heapdump.hprof
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom
# Parameters: (excelDataRowSize = 5000)

# Run progress: 11.11% complete, ETA 01:07:34
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0.003 ops/ms
Iteration   1: 0.007 ops/ms
                 gc.alloc.rate:       1760.908 MB/sec
                 gc.alloc.rate.norm:  263720003.027 B/op
                 gc.count:            97.000 counts
                 gc.time:             403.000 ms
                 heap.memory.used.mb: 118.355 MB

Iteration   2: 0.007 ops/ms
                 gc.alloc.rate:       1768.626 MB/sec
                 gc.alloc.rate.norm:  263633474.811 B/op
                 gc.count:            99.000 counts
                 gc.time:             413.000 ms
                 heap.memory.used.mb: 256.234 MB

Iteration   3: 0.007 ops/ms
                 gc.alloc.rate:       1735.300 MB/sec
                 gc.alloc.rate.norm:  263628079.111 B/op
                 gc.count:            98.000 counts
                 gc.time:             412.000 ms
                 heap.memory.used.mb: 183.155 MB

Iteration   4: 0.007 ops/ms
                 gc.alloc.rate:       1683.931 MB/sec
                 gc.alloc.rate.norm:  263631977.600 B/op
                 gc.count:            97.000 counts
                 gc.time:             431.000 ms
                 heap.memory.used.mb: 273.904 MB

Iteration   5: 0.007 ops/ms
                 gc.alloc.rate:       1774.673 MB/sec
                 gc.alloc.rate.norm:  263609412.757 B/op
                 gc.count:            104.000 counts
                 gc.time:             438.000 ms
                 heap.memory.used.mb: 147.576 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 12.50% complete, ETA 01:06:36
# Fork: 1 of 1
# Warmup Iteration   1: 0.003 ops/ms
Iteration   1: 0.007 ops/ms
                 gc.alloc.rate:       1704.569 MB/sec
                 gc.alloc.rate.norm:  263898165.486 B/op
                 gc.count:            96.000 counts
                 gc.time:             434.000 ms
                 heap.memory.used.mb: 244.031 MB

Iteration   2: 0.007 ops/ms
                 gc.alloc.rate:       1681.849 MB/sec
                 gc.alloc.rate.norm:  263794408.229 B/op
                 gc.count:            93.000 counts
                 gc.time:             418.000 ms
                 heap.memory.used.mb: 186.426 MB

Iteration   3: 0.007 ops/ms
                 gc.alloc.rate:       1737.043 MB/sec
                 gc.alloc.rate.norm:  263792684.667 B/op
                 gc.count:            98.000 counts
                 gc.time:             407.000 ms
                 heap.memory.used.mb: 178.653 MB

Iteration   4: 0.007 ops/ms
                 gc.alloc.rate:       1743.137 MB/sec
                 gc.alloc.rate.norm:  263793177.111 B/op
                 gc.count:            96.000 counts
                 gc.time:             412.000 ms
                 heap.memory.used.mb: 211.476 MB

Iteration   5: 0.007 ops/ms
                 gc.alloc.rate:       1706.557 MB/sec
                 gc.alloc.rate.norm:  263770790.000 B/op
                 gc.count:            98.000 counts
                 gc.time:             431.000 ms
                 heap.memory.used.mb: 121.914 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom":
  0.007 ±(99.9%) 0.001 ops/ms [Average]
  (min, avg, max) = (0.007, 0.007, 0.007), stdev = 0.001
  CI (99.9%): [0.007, 0.007] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate":
  1714.631 ±(99.9%) 97.338 MB/sec [Average]
  (min, avg, max) = (1681.849, 1714.631, 1743.137), stdev = 25.278
  CI (99.9%): [1617.293, 1811.969] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate.norm":
  263809845.098 ±(99.9%) 193840.730 B/op [Average]
  (min, avg, max) = (263770790.000, 263809845.098, 263898165.486), stdev = 50339.822
  CI (99.9%): [263616004.369, 264003685.828] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.count":
  481.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (93.000, 96.200, 98.000), stdev = 2.049
  CI (99.9%): [481.000, 481.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.time":
  2102.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (407.000, 420.400, 434.000), stdev = 11.760
  CI (99.9%): [2102.000, 2102.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:heap.memory.used.mb":
  188.500 ±(99.9%) 173.775 MB [Average]
  (min, avg, max) = (121.914, 188.500, 244.031), stdev = 45.129
  CI (99.9%): [14.725, 362.275] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./benchmark-heapdump.hprof
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom
# Parameters: (excelDataRowSize = 10000)

# Run progress: 13.89% complete, ETA 01:05:37
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0.001 ops/ms
Iteration   1: 0.003 ops/ms
                 gc.alloc.rate:       1358.189 MB/sec
                 gc.alloc.rate.norm:  525418818.857 B/op
                 gc.count:            73.000 counts
                 gc.time:             363.000 ms
                 heap.memory.used.mb: 195.507 MB

Iteration   2: 0.003 ops/ms
                 gc.alloc.rate:       1444.338 MB/sec
                 gc.alloc.rate.norm:  525195561.600 B/op
                 gc.count:            76.000 counts
                 gc.time:             381.000 ms
                 heap.memory.used.mb: 173.122 MB

Iteration   3: 0.003 ops/ms
                 gc.alloc.rate:       1370.947 MB/sec
                 gc.alloc.rate.norm:  525197405.867 B/op
                 gc.count:            80.000 counts
                 gc.time:             402.000 ms
                 heap.memory.used.mb: 287.484 MB

Iteration   4: 0.003 ops/ms
                 gc.alloc.rate:       1316.183 MB/sec
                 gc.alloc.rate.norm:  525195392.571 B/op
                 gc.count:            68.000 counts
                 gc.time:             395.000 ms
                 heap.memory.used.mb: 173.309 MB

Iteration   5: 0.003 ops/ms
                 gc.alloc.rate:       1340.791 MB/sec
                 gc.alloc.rate.norm:  525192866.286 B/op
                 gc.count:            67.000 counts
                 gc.time:             382.000 ms
                 heap.memory.used.mb: 159.559 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 15.28% complete, ETA 01:04:40
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ops/ms
Iteration   1: 0.003 ops/ms
                 gc.alloc.rate:       1330.733 MB/sec
                 gc.alloc.rate.norm:  525894404.571 B/op
                 gc.count:            65.000 counts
                 gc.time:             366.000 ms
                 heap.memory.used.mb: 187.485 MB

Iteration   2: 0.003 ops/ms
                 gc.alloc.rate:       1380.110 MB/sec
                 gc.alloc.rate.norm:  525675588.267 B/op
                 gc.count:            71.000 counts
                 gc.time:             370.000 ms
                 heap.memory.used.mb: 167.648 MB

Iteration   3: 0.003 ops/ms
                 gc.alloc.rate:       1352.790 MB/sec
                 gc.alloc.rate.norm:  525675922.857 B/op
                 gc.count:            71.000 counts
                 gc.time:             360.000 ms
                 heap.memory.used.mb: 165.086 MB

Iteration   4: 0.003 ops/ms
                 gc.alloc.rate:       1344.119 MB/sec
                 gc.alloc.rate.norm:  525675576.000 B/op
                 gc.count:            70.000 counts
                 gc.time:             360.000 ms
                 heap.memory.used.mb: 141.890 MB

Iteration   5: 0.003 ops/ms
                 gc.alloc.rate:       1390.206 MB/sec
                 gc.alloc.rate.norm:  525674453.867 B/op
                 gc.count:            77.000 counts
                 gc.time:             381.000 ms
                 heap.memory.used.mb: 194.739 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom":
  0.003 ±(99.9%) 0.001 ops/ms [Average]
  (min, avg, max) = (0.003, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.003, 0.003] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate":
  1359.592 ±(99.9%) 95.817 MB/sec [Average]
  (min, avg, max) = (1330.733, 1359.592, 1390.206), stdev = 24.883
  CI (99.9%): [1263.774, 1455.409] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate.norm":
  525719189.112 ±(99.9%) 377170.550 B/op [Average]
  (min, avg, max) = (525674453.867, 525719189.112, 525894404.571), stdev = 97949.994
  CI (99.9%): [525342018.562, 526096359.663] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.count":
  354.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (65.000, 70.800, 77.000), stdev = 4.266
  CI (99.9%): [354.000, 354.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.time":
  1837.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (360.000, 367.400, 381.000), stdev = 8.706
  CI (99.9%): [1837.000, 1837.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:heap.memory.used.mb":
  171.370 ±(99.9%) 80.038 MB [Average]
  (min, avg, max) = (141.890, 171.370, 194.739), stdev = 20.786
  CI (99.9%): [91.331, 251.408] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./benchmark-heapdump.hprof
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom
# Parameters: (excelDataRowSize = 15000)

# Run progress: 16.67% complete, ETA 01:03:42
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0.001 ops/ms
Iteration   1: 0.002 ops/ms
                 gc.alloc.rate:       1123.263 MB/sec
                 gc.alloc.rate.norm:  790081219.000 B/op
                 gc.count:            57.000 counts
                 gc.time:             323.000 ms
                 heap.memory.used.mb: 423.304 MB

Iteration   2: 0.002 ops/ms
                 gc.alloc.rate:       1156.261 MB/sec
                 gc.alloc.rate.norm:  789654012.000 B/op
                 gc.count:            57.000 counts
                 gc.time:             336.000 ms
                 heap.memory.used.mb: 267.313 MB

Iteration   3: 0.002 ops/ms
                 gc.alloc.rate:       1150.043 MB/sec
                 gc.alloc.rate.norm:  789653301.000 B/op
                 gc.count:            52.000 counts
                 gc.time:             323.000 ms
                 heap.memory.used.mb: 376.129 MB

Iteration   4: 0.002 ops/ms
                 gc.alloc.rate:       1156.224 MB/sec
                 gc.alloc.rate.norm:  789644514.000 B/op
                 gc.count:            53.000 counts
                 gc.time:             324.000 ms
                 heap.memory.used.mb: 319.480 MB

Iteration   5: 0.002 ops/ms
                 gc.alloc.rate:       1182.306 MB/sec
                 gc.alloc.rate.norm:  789638737.778 B/op
                 gc.count:            57.000 counts
                 gc.time:             347.000 ms
                 heap.memory.used.mb: 363.981 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 18.06% complete, ETA 01:02:41
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ops/ms
Iteration   1: 0.002 ops/ms
                 gc.alloc.rate:       1134.981 MB/sec
                 gc.alloc.rate.norm:  789828605.000 B/op
                 gc.count:            58.000 counts
                 gc.time:             333.000 ms
                 heap.memory.used.mb: 446.049 MB

Iteration   2: 0.002 ops/ms
                 gc.alloc.rate:       1182.798 MB/sec
                 gc.alloc.rate.norm:  789416305.778 B/op
                 gc.count:            62.000 counts
                 gc.time:             362.000 ms
                 heap.memory.used.mb: 427.558 MB

Iteration   3: 0.002 ops/ms
                 gc.alloc.rate:       1199.599 MB/sec
                 gc.alloc.rate.norm:  789411077.333 B/op
                 gc.count:            59.000 counts
                 gc.time:             364.000 ms
                 heap.memory.used.mb: 282.420 MB

Iteration   4: 0.002 ops/ms
                 gc.alloc.rate:       1188.977 MB/sec
                 gc.alloc.rate.norm:  789409405.333 B/op
                 gc.count:            57.000 counts
                 gc.time:             348.000 ms
                 heap.memory.used.mb: 375.476 MB

Iteration   5: 0.002 ops/ms
                 gc.alloc.rate:       1138.440 MB/sec
                 gc.alloc.rate.norm:  789397098.000 B/op
                 gc.count:            53.000 counts
                 gc.time:             325.000 ms
                 heap.memory.used.mb: 312.187 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom":
  0.002 ±(99.9%) 0.001 ops/ms [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.001, 0.002] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate":
  1168.959 ±(99.9%) 115.792 MB/sec [Average]
  (min, avg, max) = (1134.981, 1168.959, 1199.599), stdev = 30.071
  CI (99.9%): [1053.167, 1284.751] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate.norm":
  789492498.289 ±(99.9%) 724003.101 B/op [Average]
  (min, avg, max) = (789397098.000, 789492498.289, 789828605.000), stdev = 188021.306
  CI (99.9%): [788768495.188, 790216501.390] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.count":
  289.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (53.000, 57.800, 62.000), stdev = 3.271
  CI (99.9%): [289.000, 289.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.time":
  1732.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (325.000, 346.400, 364.000), stdev = 17.271
  CI (99.9%): [1732.000, 1732.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:heap.memory.used.mb":
  368.738 ±(99.9%) 273.173 MB [Average]
  (min, avg, max) = (282.420, 368.738, 446.049), stdev = 70.942
  CI (99.9%): [95.565, 641.911] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./benchmark-heapdump.hprof
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom
# Parameters: (excelDataRowSize = 100000)

# Run progress: 19.44% complete, ETA 01:01:45
# Warmup Fork: 1 of 1
# Warmup Iteration   1: ≈ 10⁻⁴ ops/ms
Iteration   1: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       355.378 MB/sec
                 gc.alloc.rate.norm:  5264984640.000 B/op
                 gc.count:            46.000 counts
                 gc.time:             260.000 ms
                 heap.memory.used.mb: 728.473 MB

Iteration   2: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       370.073 MB/sec
                 gc.alloc.rate.norm:  5264820304.000 B/op
                 gc.count:            49.000 counts
                 gc.time:             247.000 ms
                 heap.memory.used.mb: 783.432 MB

Iteration   3: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       357.639 MB/sec
                 gc.alloc.rate.norm:  5264615808.000 B/op
                 gc.count:            49.000 counts
                 gc.time:             256.000 ms
                 heap.memory.used.mb: 658.818 MB

Iteration   4: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       314.156 MB/sec
                 gc.alloc.rate.norm:  5264528520.000 B/op
                 gc.count:            49.000 counts
                 gc.time:             304.000 ms
                 heap.memory.used.mb: 750.555 MB

Iteration   5: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       354.361 MB/sec
                 gc.alloc.rate.norm:  5264524472.000 B/op
                 gc.count:            49.000 counts
                 gc.time:             246.000 ms
                 heap.memory.used.mb: 875.588 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 20.83% complete, ETA 01:04:29
# Fork: 1 of 1
# Warmup Iteration   1: ≈ 10⁻⁴ ops/ms
Iteration   1: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       339.974 MB/sec
                 gc.alloc.rate.norm:  5268184904.000 B/op
                 gc.count:            49.000 counts
                 gc.time:             270.000 ms
                 heap.memory.used.mb: 735.573 MB

Iteration   2: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       354.283 MB/sec
                 gc.alloc.rate.norm:  5268026400.000 B/op
                 gc.count:            49.000 counts
                 gc.time:             269.000 ms
                 heap.memory.used.mb: 689.592 MB

Iteration   3: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       353.136 MB/sec
                 gc.alloc.rate.norm:  5267816480.000 B/op
                 gc.count:            49.000 counts
                 gc.time:             270.000 ms
                 heap.memory.used.mb: 701.317 MB

Iteration   4: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       324.939 MB/sec
                 gc.alloc.rate.norm:  5267728056.000 B/op
                 gc.count:            46.000 counts
                 gc.time:             270.000 ms
                 heap.memory.used.mb: 873.472 MB

Iteration   5: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       374.900 MB/sec
                 gc.alloc.rate.norm:  5267723840.000 B/op
                 gc.count:            49.000 counts
                 gc.time:             282.000 ms
                 heap.memory.used.mb: 741.775 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom":
  ≈ 10⁻⁴ ops/ms

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate":
  349.447 ±(99.9%) 71.398 MB/sec [Average]
  (min, avg, max) = (324.939, 349.447, 374.900), stdev = 18.542
  CI (99.9%): [278.048, 420.845] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate.norm":
  5267895936.000 ±(99.9%) 781209.545 B/op [Average]
  (min, avg, max) = (5267723840.000, 5267895936.000, 5268184904.000), stdev = 202877.638
  CI (99.9%): [5267114726.455, 5268677145.545] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.count":
  242.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (46.000, 48.400, 49.000), stdev = 1.342
  CI (99.9%): [242.000, 242.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.time":
  1361.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (269.000, 272.200, 282.000), stdev = 5.495
  CI (99.9%): [1361.000, 1361.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:heap.memory.used.mb":
  748.346 ±(99.9%) 282.482 MB [Average]
  (min, avg, max) = (689.592, 748.346, 873.472), stdev = 73.360
  CI (99.9%): [465.864, 1030.828] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./benchmark-heapdump.hprof
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom
# Parameters: (excelDataRowSize = 150000)

# Run progress: 22.22% complete, ETA 01:06:38
# Warmup Fork: 1 of 1
# Warmup Iteration   1: ≈ 10⁻⁴ ops/ms
Iteration   1: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       258.168 MB/sec
                 gc.alloc.rate.norm:  7865889392.000 B/op
                 gc.count:            177.000 counts
                 gc.time:             876.000 ms
                 heap.memory.used.mb: 959.545 MB

Iteration   2: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       260.248 MB/sec
                 gc.alloc.rate.norm:  7863498288.000 B/op
                 gc.count:            181.000 counts
                 gc.time:             872.000 ms
                 heap.memory.used.mb: 938.551 MB

Iteration   3: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       247.033 MB/sec
                 gc.alloc.rate.norm:  7863248088.000 B/op
                 gc.count:            169.000 counts
                 gc.time:             868.000 ms
                 heap.memory.used.mb: 958.266 MB

Iteration   4: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       236.418 MB/sec
                 gc.alloc.rate.norm:  7863137552.000 B/op
                 gc.count:            171.000 counts
                 gc.time:             869.000 ms
                 heap.memory.used.mb: 950.953 MB

Iteration   5: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       246.985 MB/sec
                 gc.alloc.rate.norm:  7864406776.000 B/op
                 gc.count:            177.000 counts
                 gc.time:             871.000 ms
                 heap.memory.used.mb: 927.741 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 23.61% complete, ETA 01:13:12
# Fork: 1 of 1
# Warmup Iteration   1: ≈ 10⁻⁴ ops/ms
Iteration   1: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       242.962 MB/sec
                 gc.alloc.rate.norm:  7865906568.000 B/op
                 gc.count:            169.000 counts
                 gc.time:             877.000 ms
                 heap.memory.used.mb: 927.391 MB

Iteration   2: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       237.016 MB/sec
                 gc.alloc.rate.norm:  7864876400.000 B/op
                 gc.count:            167.000 counts
                 gc.time:             898.000 ms
                 heap.memory.used.mb: 921.246 MB

Iteration   3: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       274.847 MB/sec
                 gc.alloc.rate.norm:  7863402536.000 B/op
                 gc.count:            171.000 counts
                 gc.time:             884.000 ms
                 heap.memory.used.mb: 922.235 MB

Iteration   4: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       257.308 MB/sec
                 gc.alloc.rate.norm:  7863328640.000 B/op
                 gc.count:            170.000 counts
                 gc.time:             871.000 ms
                 heap.memory.used.mb: 934.089 MB

Iteration   5: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       240.667 MB/sec
                 gc.alloc.rate.norm:  7863127168.000 B/op
                 gc.count:            171.000 counts
                 gc.time:             734.000 ms
                 heap.memory.used.mb: 922.823 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom":
  ≈ 10⁻⁴ ops/ms

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate":
  250.560 ±(99.9%) 60.100 MB/sec [Average]
  (min, avg, max) = (237.016, 250.560, 274.847), stdev = 15.608
  CI (99.9%): [190.460, 310.660] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate.norm":
  7864128262.400 ±(99.9%) 4672762.937 B/op [Average]
  (min, avg, max) = (7863127168.000, 7864128262.400, 7865906568.000), stdev = 1213501.696
  CI (99.9%): [7859455499.463, 7868801025.337] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.count":
  848.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (167.000, 169.600, 171.000), stdev = 1.673
  CI (99.9%): [848.000, 848.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.time":
  4264.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (734.000, 852.800, 898.000), stdev = 67.169
  CI (99.9%): [4264.000, 4264.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:heap.memory.used.mb":
  925.557 ±(99.9%) 20.490 MB [Average]
  (min, avg, max) = (921.246, 925.557, 934.089), stdev = 5.321
  CI (99.9%): [905.067, 946.046] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./benchmark-heapdump.hprof
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax
# Parameters: (excelDataRowSize = 1)

# Run progress: 25.00% complete, ETA 01:18:47
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0.519 ops/ms
Iteration   1: 1.913 ops/ms
                 gc.alloc.rate:       2285.200 MB/sec
                 gc.alloc.rate.norm:  1288125.542 B/op
                 gc.count:            133.000 counts
                 gc.time:             113.000 ms
                 heap.memory.used.mb: 16.813 MB

Iteration   2: 2.083 ops/ms
                 gc.alloc.rate:       2483.584 MB/sec
                 gc.alloc.rate.norm:  1286853.810 B/op
                 gc.count:            179.000 counts
                 gc.time:             119.000 ms
                 heap.memory.used.mb: 12.204 MB

Iteration   3: 2.088 ops/ms
                 gc.alloc.rate:       2491.663 MB/sec
                 gc.alloc.rate.norm:  1286857.010 B/op
                 gc.count:            177.000 counts
                 gc.time:             116.000 ms
                 heap.memory.used.mb: 32.752 MB

Iteration   4: 2.080 ops/ms
                 gc.alloc.rate:       2480.038 MB/sec
                 gc.alloc.rate.norm:  1286857.958 B/op
                 gc.count:            181.000 counts
                 gc.time:             117.000 ms
                 heap.memory.used.mb: 57.635 MB

Iteration   5: 2.094 ops/ms
                 gc.alloc.rate:       2508.028 MB/sec
                 gc.alloc.rate.norm:  1286856.766 B/op
                 gc.count:            182.000 counts
                 gc.time:             94.000 ms
                 heap.memory.used.mb: 66.676 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 26.39% complete, ETA 01:16:12
# Fork: 1 of 1
# Warmup Iteration   1: 0.617 ops/ms
Iteration   1: 1.876 ops/ms
                 gc.alloc.rate:       2238.090 MB/sec
                 gc.alloc.rate.norm:  1286763.791 B/op
                 gc.count:            161.000 counts
                 gc.time:             116.000 ms
                 heap.memory.used.mb: 47.333 MB

Iteration   2: 2.060 ops/ms
                 gc.alloc.rate:       2455.261 MB/sec
                 gc.alloc.rate.norm:  1283344.959 B/op
                 gc.count:            174.000 counts
                 gc.time:             107.000 ms
                 heap.memory.used.mb: 57.898 MB

Iteration   3: 2.135 ops/ms
                 gc.alloc.rate:       2538.247 MB/sec
                 gc.alloc.rate.norm:  1283326.287 B/op
                 gc.count:            181.000 counts
                 gc.time:             114.000 ms
                 heap.memory.used.mb: 9.168 MB

Iteration   4: 2.142 ops/ms
                 gc.alloc.rate:       2549.886 MB/sec
                 gc.alloc.rate.norm:  1283332.530 B/op
                 gc.count:            181.000 counts
                 gc.time:             103.000 ms
                 heap.memory.used.mb: 54.667 MB

Iteration   5: 2.142 ops/ms
                 gc.alloc.rate:       2548.855 MB/sec
                 gc.alloc.rate.norm:  1283326.025 B/op
                 gc.count:            181.000 counts
                 gc.time:             108.000 ms
                 heap.memory.used.mb: 51.195 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax":
  2.071 ±(99.9%) 0.440 ops/ms [Average]
  (min, avg, max) = (1.876, 2.071, 2.142), stdev = 0.114
  CI (99.9%): [1.631, 2.511] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate":
  2466.068 ±(99.9%) 513.667 MB/sec [Average]
  (min, avg, max) = (2238.090, 2466.068, 2549.886), stdev = 133.398
  CI (99.9%): [1952.401, 2979.735] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate.norm":
  1284018.719 ±(99.9%) 5909.050 B/op [Average]
  (min, avg, max) = (1283326.025, 1284018.719, 1286763.791), stdev = 1534.561
  CI (99.9%): [1278109.669, 1289927.768] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.count":
  878.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (161.000, 175.600, 181.000), stdev = 8.706
  CI (99.9%): [878.000, 878.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.time":
  548.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (103.000, 109.600, 116.000), stdev = 5.320
  CI (99.9%): [548.000, 548.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:heap.memory.used.mb":
  44.052 ±(99.9%) 76.605 MB [Average]
  (min, avg, max) = (9.168, 44.052, 57.898), stdev = 19.894
  CI (99.9%): [≈ 0, 120.657] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./benchmark-heapdump.hprof
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax
# Parameters: (excelDataRowSize = 100)

# Run progress: 27.78% complete, ETA 01:13:46
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0.176 ops/ms
Iteration   1: 0.544 ops/ms
                 gc.alloc.rate:       3199.506 MB/sec
                 gc.alloc.rate.norm:  6313250.023 B/op
                 gc.count:            197.000 counts
                 gc.time:             116.000 ms
                 heap.memory.used.mb: 35.382 MB

Iteration   2: 0.611 ops/ms
                 gc.alloc.rate:       3574.765 MB/sec
                 gc.alloc.rate.norm:  6307888.374 B/op
                 gc.count:            213.000 counts
                 gc.time:             122.000 ms
                 heap.memory.used.mb: 54.694 MB

Iteration   3: 0.612 ops/ms
                 gc.alloc.rate:       3575.678 MB/sec
                 gc.alloc.rate.norm:  6307185.806 B/op
                 gc.count:            209.000 counts
                 gc.time:             129.000 ms
                 heap.memory.used.mb: 59.065 MB

Iteration   4: 0.604 ops/ms
                 gc.alloc.rate:       3540.086 MB/sec
                 gc.alloc.rate.norm:  6307076.190 B/op
                 gc.count:            206.000 counts
                 gc.time:             114.000 ms
                 heap.memory.used.mb: 75.506 MB

Iteration   5: 0.558 ops/ms
                 gc.alloc.rate:       3272.873 MB/sec
                 gc.alloc.rate.norm:  6307084.156 B/op
                 gc.count:            191.000 counts
                 gc.time:             100.000 ms
                 heap.memory.used.mb: 32.993 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 29.17% complete, ETA 01:11:28
# Fork: 1 of 1
# Warmup Iteration   1: 0.179 ops/ms
Iteration   1: 0.536 ops/ms
                 gc.alloc.rate:       3144.897 MB/sec
                 gc.alloc.rate.norm:  6311785.767 B/op
                 gc.count:            188.000 counts
                 gc.time:             121.000 ms
                 heap.memory.used.mb: 16.186 MB

Iteration   2: 0.590 ops/ms
                 gc.alloc.rate:       3446.764 MB/sec
                 gc.alloc.rate.norm:  6304879.851 B/op
                 gc.count:            204.000 counts
                 gc.time:             129.000 ms
                 heap.memory.used.mb: 18.131 MB

Iteration   3: 0.604 ops/ms
                 gc.alloc.rate:       3531.970 MB/sec
                 gc.alloc.rate.norm:  6304069.687 B/op
                 gc.count:            151.000 counts
                 gc.time:             106.000 ms
                 heap.memory.used.mb: 40.503 MB

Iteration   4: 0.610 ops/ms
                 gc.alloc.rate:       3566.270 MB/sec
                 gc.alloc.rate.norm:  6304024.621 B/op
                 gc.count:            213.000 counts
                 gc.time:             116.000 ms
                 heap.memory.used.mb: 88.529 MB

Iteration   5: 0.606 ops/ms
                 gc.alloc.rate:       3552.376 MB/sec
                 gc.alloc.rate.norm:  6304002.215 B/op
                 gc.count:            207.000 counts
                 gc.time:             109.000 ms
                 heap.memory.used.mb: 75.603 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax":
  0.589 ±(99.9%) 0.117 ops/ms [Average]
  (min, avg, max) = (0.536, 0.589, 0.610), stdev = 0.030
  CI (99.9%): [0.472, 0.706] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate":
  3448.456 ±(99.9%) 677.442 MB/sec [Average]
  (min, avg, max) = (3144.897, 3448.456, 3566.270), stdev = 175.930
  CI (99.9%): [2771.013, 4125.898] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate.norm":
  6305752.428 ±(99.9%) 13064.235 B/op [Average]
  (min, avg, max) = (6304002.215, 6305752.428, 6311785.767), stdev = 3392.740
  CI (99.9%): [6292688.193, 6318816.663] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.count":
  963.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (151.000, 192.600, 213.000), stdev = 25.026
  CI (99.9%): [963.000, 963.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.time":
  581.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (106.000, 116.200, 129.000), stdev = 9.257
  CI (99.9%): [581.000, 581.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:heap.memory.used.mb":
  47.790 ±(99.9%) 127.199 MB [Average]
  (min, avg, max) = (16.186, 47.790, 88.529), stdev = 33.033
  CI (99.9%): [≈ 0, 174.989] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./benchmark-heapdump.hprof
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax
# Parameters: (excelDataRowSize = 500)

# Run progress: 30.56% complete, ETA 01:09:16
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0.045 ops/ms
Iteration   1: 0.133 ops/ms
                 gc.alloc.rate:       3274.924 MB/sec
                 gc.alloc.rate.norm:  26583583.084 B/op
                 gc.count:            191.000 counts
                 gc.time:             122.000 ms
                 heap.memory.used.mb: 39.342 MB

Iteration   2: 0.143 ops/ms
                 gc.alloc.rate:       3526.156 MB/sec
                 gc.alloc.rate.norm:  26566305.582 B/op
                 gc.count:            183.000 counts
                 gc.time:             132.000 ms
                 heap.memory.used.mb: 4.208 MB

Iteration   3: 0.145 ops/ms
                 gc.alloc.rate:       3587.448 MB/sec
                 gc.alloc.rate.norm:  26564897.354 B/op
                 gc.count:            209.000 counts
                 gc.time:             114.000 ms
                 heap.memory.used.mb: 23.386 MB

Iteration   4: 0.147 ops/ms
                 gc.alloc.rate:       3631.788 MB/sec
                 gc.alloc.rate.norm:  26564651.435 B/op
                 gc.count:            216.000 counts
                 gc.time:             112.000 ms
                 heap.memory.used.mb: 47.938 MB

Iteration   5: 0.149 ops/ms
                 gc.alloc.rate:       3666.855 MB/sec
                 gc.alloc.rate.norm:  26564276.697 B/op
                 gc.count:            212.000 counts
                 gc.time:             126.000 ms
                 heap.memory.used.mb: 31.990 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 31.94% complete, ETA 01:07:11
# Fork: 1 of 1
# Warmup Iteration   1: 0.052 ops/ms
Iteration   1: 0.131 ops/ms
                 gc.alloc.rate:       3220.224 MB/sec
                 gc.alloc.rate.norm:  26598741.639 B/op
                 gc.count:            193.000 counts
                 gc.time:             130.000 ms
                 heap.memory.used.mb: 79.233 MB

Iteration   2: 0.137 ops/ms
                 gc.alloc.rate:       3367.561 MB/sec
                 gc.alloc.rate.norm:  26581978.628 B/op
                 gc.count:            193.000 counts
                 gc.time:             132.000 ms
                 heap.memory.used.mb: 79.558 MB

Iteration   3: 0.143 ops/ms
                 gc.alloc.rate:       3523.997 MB/sec
                 gc.alloc.rate.norm:  26580674.140 B/op
                 gc.count:            210.000 counts
                 gc.time:             119.000 ms
                 heap.memory.used.mb: 50.844 MB

Iteration   4: 0.143 ops/ms
                 gc.alloc.rate:       3512.136 MB/sec
                 gc.alloc.rate.norm:  26580480.605 B/op
                 gc.count:            206.000 counts
                 gc.time:             124.000 ms
                 heap.memory.used.mb: 26.584 MB

Iteration   5: 0.145 ops/ms
                 gc.alloc.rate:       3573.506 MB/sec
                 gc.alloc.rate.norm:  26580236.403 B/op
                 gc.count:            213.000 counts
                 gc.time:             115.000 ms
                 heap.memory.used.mb: 81.986 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/java.util.concurrent.ConcurrentHashMap$BaseIterator.<init>(ConcurrentHashMap.java:3433)
  at java.base@21.0.3/java.util.concurrent.ConcurrentHashMap$KeyIterator.<init>(ConcurrentHashMap.java:3454)
  at java.base@21.0.3/java.util.concurrent.ConcurrentHashMap$KeySetView.iterator(ConcurrentHashMap.java:4638)
  at app//org.apache.coyote.AbstractProtocol.lambda$startAsyncTimeout$0(AbstractProtocol.java:665)
  at app//org.apache.coyote.AbstractProtocol$$Lambda/0x000000c801a86d80.run(Unknown Source)
  at java.base@21.0.3/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
  at java.base@21.0.3/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/java.lang.System.nanoTime(Native Method)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.getDelay(ScheduledThreadPoolExecutor.java:245)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1172)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax":
  0.139 ±(99.9%) 0.022 ops/ms [Average]
  (min, avg, max) = (0.131, 0.139, 0.145), stdev = 0.006
  CI (99.9%): [0.117, 0.162] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate":
  3439.485 ±(99.9%) 556.783 MB/sec [Average]
  (min, avg, max) = (3220.224, 3439.485, 3573.506), stdev = 144.595
  CI (99.9%): [2882.701, 3996.268] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate.norm":
  26584422.283 ±(99.9%) 30932.585 B/op [Average]
  (min, avg, max) = (26580236.403, 26584422.283, 26598741.639), stdev = 8033.094
  CI (99.9%): [26553489.698, 26615354.868] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.count":
  1015.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (193.000, 203.000, 213.000), stdev = 9.460
  CI (99.9%): [1015.000, 1015.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.time":
  620.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (115.000, 124.000, 132.000), stdev = 7.176
  CI (99.9%): [620.000, 620.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:heap.memory.used.mb":
  63.641 ±(99.9%) 93.729 MB [Average]
  (min, avg, max) = (26.584, 63.641, 81.986), stdev = 24.341
  CI (99.9%): [≈ 0, 157.370] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./benchmark-heapdump.hprof
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax
# Parameters: (excelDataRowSize = 1000)

# Run progress: 33.33% complete, ETA 01:05:11
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0.024 ops/ms
Iteration   1: 0.067 ops/ms
                 gc.alloc.rate:       3220.345 MB/sec
                 gc.alloc.rate.norm:  51967667.027 B/op
                 gc.count:            190.000 counts
                 gc.time:             113.000 ms
                 heap.memory.used.mb: 7.456 MB

Iteration   2: 0.070 ops/ms
                 gc.alloc.rate:       3358.705 MB/sec
                 gc.alloc.rate.norm:  51948129.146 B/op
                 gc.count:            199.000 counts
                 gc.time:             129.000 ms
                 heap.memory.used.mb: 17.815 MB

Iteration   3: 0.071 ops/ms
                 gc.alloc.rate:       3418.824 MB/sec
                 gc.alloc.rate.norm:  51940751.685 B/op
                 gc.count:            203.000 counts
                 gc.time:             133.000 ms
                 heap.memory.used.mb: 35.133 MB

Iteration   4: 0.070 ops/ms
                 gc.alloc.rate:       3360.967 MB/sec
                 gc.alloc.rate.norm:  51940293.623 B/op
                 gc.count:            195.000 counts
                 gc.time:             132.000 ms
                 heap.memory.used.mb: 66.073 MB

Iteration   5: 0.072 ops/ms
                 gc.alloc.rate:       3477.098 MB/sec
                 gc.alloc.rate.norm:  51939871.756 B/op
                 gc.count:            212.000 counts
                 gc.time:             109.000 ms
                 heap.memory.used.mb: 78.535 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 34.72% complete, ETA 01:03:16
# Fork: 1 of 1
# Warmup Iteration   1: 0.024 ops/ms
Iteration   1: 0.066 ops/ms
                 gc.alloc.rate:       3166.299 MB/sec
                 gc.alloc.rate.norm:  51935698.885 B/op
                 gc.count:            178.000 counts
                 gc.time:             130.000 ms
                 heap.memory.used.mb: 37.808 MB

Iteration   2: 0.069 ops/ms
                 gc.alloc.rate:       3335.410 MB/sec
                 gc.alloc.rate.norm:  51913657.890 B/op
                 gc.count:            197.000 counts
                 gc.time:             129.000 ms
                 heap.memory.used.mb: 76.772 MB

Iteration   3: 0.069 ops/ms
                 gc.alloc.rate:       3345.254 MB/sec
                 gc.alloc.rate.norm:  51908273.816 B/op
                 gc.count:            198.000 counts
                 gc.time:             115.000 ms
                 heap.memory.used.mb: 51.373 MB

Iteration   4: 0.071 ops/ms
                 gc.alloc.rate:       3404.783 MB/sec
                 gc.alloc.rate.norm:  51908347.842 B/op
                 gc.count:            203.000 counts
                 gc.time:             119.000 ms
                 heap.memory.used.mb: 86.440 MB

Iteration   5: 0.071 ops/ms
                 gc.alloc.rate:       3437.203 MB/sec
                 gc.alloc.rate.norm:  51907881.636 B/op
                 gc.count:            205.000 counts
                 gc.time:             109.000 ms
                 heap.memory.used.mb: 66.763 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax":
  0.069 ±(99.9%) 0.008 ops/ms [Average]
  (min, avg, max) = (0.066, 0.069, 0.071), stdev = 0.002
  CI (99.9%): [0.061, 0.078] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate":
  3337.790 ±(99.9%) 403.131 MB/sec [Average]
  (min, avg, max) = (3166.299, 3337.790, 3437.203), stdev = 104.692
  CI (99.9%): [2934.659, 3740.920] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate.norm":
  51914772.014 ±(99.9%) 45972.442 B/op [Average]
  (min, avg, max) = (51907881.636, 51914772.014, 51935698.885), stdev = 11938.897
  CI (99.9%): [51868799.572, 51960744.456] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.count":
  981.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (178.000, 196.200, 205.000), stdev = 10.710
  CI (99.9%): [981.000, 981.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.time":
  602.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (109.000, 120.400, 130.000), stdev = 9.044
  CI (99.9%): [602.000, 602.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:heap.memory.used.mb":
  63.831 ±(99.9%) 75.054 MB [Average]
  (min, avg, max) = (37.808, 63.831, 86.440), stdev = 19.491
  CI (99.9%): [≈ 0, 138.885] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./benchmark-heapdump.hprof
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax
# Parameters: (excelDataRowSize = 5000)

# Run progress: 36.11% complete, ETA 01:01:24
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0.004 ops/ms
Iteration   1: 0.010 ops/ms
                 gc.alloc.rate:       2423.814 MB/sec
                 gc.alloc.rate.norm:  254365427.385 B/op
                 gc.count:            364.000 counts
                 gc.time:             247.000 ms
                 heap.memory.used.mb: 24.614 MB

Iteration   2: 0.011 ops/ms
                 gc.alloc.rate:       2527.343 MB/sec
                 gc.alloc.rate.norm:  254351307.704 B/op
                 gc.count:            263.000 counts
                 gc.time:             200.000 ms
                 heap.memory.used.mb: 40.407 MB

Iteration   3: 0.010 ops/ms
                 gc.alloc.rate:       2472.573 MB/sec
                 gc.alloc.rate.norm:  254343722.415 B/op
                 gc.count:            296.000 counts
                 gc.time:             215.000 ms
                 heap.memory.used.mb: 39.530 MB

Iteration   4: 0.011 ops/ms
                 gc.alloc.rate:       2626.405 MB/sec
                 gc.alloc.rate.norm:  254336325.571 B/op
                 gc.count:            152.000 counts
                 gc.time:             108.000 ms
                 heap.memory.used.mb: 101.642 MB

Iteration   5: 0.011 ops/ms
                 gc.alloc.rate:       2709.429 MB/sec
                 gc.alloc.rate.norm:  254332259.310 B/op
                 gc.count:            155.000 counts
                 gc.time:             107.000 ms
                 heap.memory.used.mb: 59.262 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 37.50% complete, ETA 00:59:37
# Fork: 1 of 1
# Warmup Iteration   1: 0.006 ops/ms
Iteration   1: 0.011 ops/ms
                 gc.alloc.rate:       2567.781 MB/sec
                 gc.alloc.rate.norm:  254355821.091 B/op
                 gc.count:            161.000 counts
                 gc.time:             111.000 ms
                 heap.memory.used.mb: 35.710 MB

Iteration   2: 0.010 ops/ms
                 gc.alloc.rate:       2456.554 MB/sec
                 gc.alloc.rate.norm:  254350483.846 B/op
                 gc.count:            282.000 counts
                 gc.time:             188.000 ms
                 heap.memory.used.mb: 115.488 MB

Iteration   3: 0.011 ops/ms
                 gc.alloc.rate:       2500.401 MB/sec
                 gc.alloc.rate.norm:  254343293.585 B/op
                 gc.count:            216.000 counts
                 gc.time:             143.000 ms
                 heap.memory.used.mb: 102.614 MB

Iteration   4: 0.011 ops/ms
                 gc.alloc.rate:       2630.818 MB/sec
                 gc.alloc.rate.norm:  254336581.571 B/op
                 gc.count:            137.000 counts
                 gc.time:             96.000 ms
                 heap.memory.used.mb: 90.416 MB

Iteration   5: 0.011 ops/ms
                 gc.alloc.rate:       2584.922 MB/sec
                 gc.alloc.rate.norm:  254332955.055 B/op
                 gc.count:            137.000 counts
                 gc.time:             112.000 ms
                 heap.memory.used.mb: 37.062 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax":
  0.011 ±(99.9%) 0.001 ops/ms [Average]
  (min, avg, max) = (0.010, 0.011, 0.011), stdev = 0.001
  CI (99.9%): [0.010, 0.012] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate":
  2548.095 ±(99.9%) 267.067 MB/sec [Average]
  (min, avg, max) = (2456.554, 2548.095, 2630.818), stdev = 69.357
  CI (99.9%): [2281.028, 2815.162] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate.norm":
  254343827.030 ±(99.9%) 36487.355 B/op [Average]
  (min, avg, max) = (254332955.055, 254343827.030, 254355821.091), stdev = 9475.650
  CI (99.9%): [254307339.675, 254380314.384] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.count":
  933.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (137.000, 186.600, 282.000), stdev = 62.332
  CI (99.9%): [933.000, 933.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.time":
  650.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (96.000, 130.000, 188.000), stdev = 36.654
  CI (99.9%): [650.000, 650.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:heap.memory.used.mb":
  76.258 ±(99.9%) 144.264 MB [Average]
  (min, avg, max) = (35.710, 76.258, 115.488), stdev = 37.465
  CI (99.9%): [≈ 0, 220.522] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./benchmark-heapdump.hprof
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax
# Parameters: (excelDataRowSize = 10000)

# Run progress: 38.89% complete, ETA 00:57:52
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0.002 ops/ms
Iteration   1: 0.004 ops/ms
                 gc.alloc.rate:       1985.136 MB/sec
                 gc.alloc.rate.norm:  507187829.091 B/op
                 gc.count:            234.000 counts
                 gc.time:             161.000 ms
                 heap.memory.used.mb: 29.863 MB

Iteration   2: 0.004 ops/ms
                 gc.alloc.rate:       1991.780 MB/sec
                 gc.alloc.rate.norm:  507155462.909 B/op
                 gc.count:            244.000 counts
                 gc.time:             177.000 ms
                 heap.memory.used.mb: 63.039 MB

Iteration   3: 0.004 ops/ms
                 gc.alloc.rate:       1948.896 MB/sec
                 gc.alloc.rate.norm:  507152312.762 B/op
                 gc.count:            212.000 counts
                 gc.time:             163.000 ms
                 heap.memory.used.mb: 65.590 MB

Iteration   4: 0.004 ops/ms
                 gc.alloc.rate:       1984.856 MB/sec
                 gc.alloc.rate.norm:  507151343.273 B/op
                 gc.count:            240.000 counts
                 gc.time:             174.000 ms
                 heap.memory.used.mb: 22.991 MB

Iteration   5: 0.004 ops/ms
                 gc.alloc.rate:       1959.824 MB/sec
                 gc.alloc.rate.norm:  507147128.381 B/op
                 gc.count:            206.000 counts
                 gc.time:             164.000 ms
                 heap.memory.used.mb: 104.959 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 40.28% complete, ETA 00:56:11
# Fork: 1 of 1
# Warmup Iteration   1: 0.002 ops/ms
Iteration   1: 0.004 ops/ms
                 gc.alloc.rate:       2053.190 MB/sec
                 gc.alloc.rate.norm:  507497536.000 B/op
                 gc.count:            218.000 counts
                 gc.time:             169.000 ms
                 heap.memory.used.mb: 64.003 MB

Iteration   2: 0.004 ops/ms
                 gc.alloc.rate:       2089.257 MB/sec
                 gc.alloc.rate.norm:  507474178.783 B/op
                 gc.count:            248.000 counts
                 gc.time:             171.000 ms
                 heap.memory.used.mb: 64.642 MB

Iteration   3: 0.004 ops/ms
                 gc.alloc.rate:       2080.283 MB/sec
                 gc.alloc.rate.norm:  507472250.435 B/op
                 gc.count:            235.000 counts
                 gc.time:             174.000 ms
                 heap.memory.used.mb: 64.506 MB

Iteration   4: 0.004 ops/ms
                 gc.alloc.rate:       2100.533 MB/sec
                 gc.alloc.rate.norm:  507470554.087 B/op
                 gc.count:            211.000 counts
                 gc.time:             155.000 ms
                 heap.memory.used.mb: 107.927 MB

Iteration   5: 0.004 ops/ms
                 gc.alloc.rate:       2072.174 MB/sec
                 gc.alloc.rate.norm:  507466531.478 B/op
                 gc.count:            250.000 counts
                 gc.time:             185.000 ms
                 heap.memory.used.mb: 64.014 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax":
  0.004 ±(99.9%) 0.001 ops/ms [Average]
  (min, avg, max) = (0.004, 0.004, 0.004), stdev = 0.001
  CI (99.9%): [0.004, 0.005] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate":
  2079.088 ±(99.9%) 68.969 MB/sec [Average]
  (min, avg, max) = (2053.190, 2079.088, 2100.533), stdev = 17.911
  CI (99.9%): [2010.118, 2148.057] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate.norm":
  507476210.157 ±(99.9%) 47170.994 B/op [Average]
  (min, avg, max) = (507466531.478, 507476210.157, 507497536.000), stdev = 12250.157
  CI (99.9%): [507429039.163, 507523381.150] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.count":
  1162.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (211.000, 232.400, 250.000), stdev = 17.501
  CI (99.9%): [1162.000, 1162.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.time":
  854.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (155.000, 170.800, 185.000), stdev = 10.780
  CI (99.9%): [854.000, 854.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:heap.memory.used.mb":
  73.018 ±(99.9%) 75.152 MB [Average]
  (min, avg, max) = (64.003, 73.018, 107.927), stdev = 19.517
  CI (99.9%): [≈ 0, 148.170] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./benchmark-heapdump.hprof
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax
# Parameters: (excelDataRowSize = 15000)

# Run progress: 41.67% complete, ETA 00:54:32
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 0.001 ops/ms
Iteration   1: 0.003 ops/ms
                 gc.alloc.rate:       1784.005 MB/sec
                 gc.alloc.rate.norm:  762756500.308 B/op
                 gc.count:            186.000 counts
                 gc.time:             128.000 ms
                 heap.memory.used.mb: 108.125 MB

Iteration   2: 0.003 ops/ms
                 gc.alloc.rate:       1808.078 MB/sec
                 gc.alloc.rate.norm:  762715827.692 B/op
                 gc.count:            238.000 counts
                 gc.time:             155.000 ms
                 heap.memory.used.mb: 92.122 MB

Iteration   3: 0.002 ops/ms
                 gc.alloc.rate:       1750.895 MB/sec
                 gc.alloc.rate.norm:  762714529.846 B/op
                 gc.count:            189.000 counts
                 gc.time:             145.000 ms
                 heap.memory.used.mb: 65.801 MB

Iteration   4: 0.003 ops/ms
                 gc.alloc.rate:       1799.431 MB/sec
                 gc.alloc.rate.norm:  762716765.538 B/op
                 gc.count:            192.000 counts
                 gc.time:             150.000 ms
                 heap.memory.used.mb: 107.343 MB

Iteration   5: 0.003 ops/ms
                 gc.alloc.rate:       1802.691 MB/sec
                 gc.alloc.rate.norm:  762714400.615 B/op
                 gc.count:            172.000 counts
                 gc.time:             133.000 ms
                 heap.memory.used.mb: 86.235 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 43.06% complete, ETA 00:52:57
# Fork: 1 of 1
# Warmup Iteration   1: 0.001 ops/ms
Iteration   1: 0.002 ops/ms
                 gc.alloc.rate:       1639.792 MB/sec
                 gc.alloc.rate.norm:  762260946.667 B/op
                 gc.count:            186.000 counts
                 gc.time:             120.000 ms
                 heap.memory.used.mb: 100.067 MB

Iteration   2: 0.002 ops/ms
                 gc.alloc.rate:       1651.885 MB/sec
                 gc.alloc.rate.norm:  762236167.333 B/op
                 gc.count:            185.000 counts
                 gc.time:             130.000 ms
                 heap.memory.used.mb: 105.341 MB

Iteration   3: 0.002 ops/ms
                 gc.alloc.rate:       1642.887 MB/sec
                 gc.alloc.rate.norm:  762234609.333 B/op
                 gc.count:            168.000 counts
                 gc.time:             144.000 ms
                 heap.memory.used.mb: 105.338 MB

Iteration   4: 0.002 ops/ms
                 gc.alloc.rate:       1627.780 MB/sec
                 gc.alloc.rate.norm:  762237112.667 B/op
                 gc.count:            166.000 counts
                 gc.time:             134.000 ms
                 heap.memory.used.mb: 105.305 MB

Iteration   5: 0.002 ops/ms
                 gc.alloc.rate:       1665.630 MB/sec
                 gc.alloc.rate.norm:  762234536.000 B/op
                 gc.count:            165.000 counts
                 gc.time:             140.000 ms
                 heap.memory.used.mb: 45.233 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax":
  0.002 ±(99.9%) 0.001 ops/ms [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.002, 0.002] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate":
  1645.595 ±(99.9%) 54.434 MB/sec [Average]
  (min, avg, max) = (1627.780, 1645.595, 1665.630), stdev = 14.136
  CI (99.9%): [1591.161, 1700.029] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate.norm":
  762240674.400 ±(99.9%) 43837.741 B/op [Average]
  (min, avg, max) = (762234536.000, 762240674.400, 762260946.667), stdev = 11384.522
  CI (99.9%): [762196836.659, 762284512.141] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.count":
  870.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (165.000, 174.000, 186.000), stdev = 10.559
  CI (99.9%): [870.000, 870.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.time":
  668.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (120.000, 133.600, 144.000), stdev = 9.317
  CI (99.9%): [668.000, 668.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:heap.memory.used.mb":
  92.257 ±(99.9%) 101.602 MB [Average]
  (min, avg, max) = (45.233, 92.257, 105.341), stdev = 26.386
  CI (99.9%): [≈ 0, 193.858] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./benchmark-heapdump.hprof
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax
# Parameters: (excelDataRowSize = 100000)

# Run progress: 44.44% complete, ETA 00:51:23
# Warmup Fork: 1 of 1
# Warmup Iteration   1: ≈ 10⁻⁴ ops/ms
Iteration   1: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       523.293 MB/sec
                 gc.alloc.rate.norm:  5092556672.000 B/op
                 gc.count:            132.000 counts
                 gc.time:             112.000 ms
                 heap.memory.used.mb: 63.161 MB

Iteration   2: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       511.151 MB/sec
                 gc.alloc.rate.norm:  5088943856.000 B/op
                 gc.count:            127.000 counts
                 gc.time:             113.000 ms
                 heap.memory.used.mb: 101.451 MB

Iteration   3: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       516.645 MB/sec
                 gc.alloc.rate.norm:  5088942800.000 B/op
                 gc.count:            105.000 counts
                 gc.time:             109.000 ms
                 heap.memory.used.mb: 45.407 MB

Iteration   4: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       513.690 MB/sec
                 gc.alloc.rate.norm:  5088949232.000 B/op
                 gc.count:            128.000 counts
                 gc.time:             111.000 ms
                 heap.memory.used.mb: 80.257 MB

Iteration   5: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       518.100 MB/sec
                 gc.alloc.rate.norm:  5088943320.000 B/op
                 gc.count:            102.000 counts
                 gc.time:             99.000 ms
                 heap.memory.used.mb: 82.228 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 45.83% complete, ETA 00:50:25
# Fork: 1 of 1
# Warmup Iteration   1: ≈ 10⁻⁴ ops/ms
Iteration   1: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       503.311 MB/sec
                 gc.alloc.rate.norm:  5087535296.000 B/op
                 gc.count:            119.000 counts
                 gc.time:             89.000 ms
                 heap.memory.used.mb: 112.324 MB

Iteration   2: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       512.466 MB/sec
                 gc.alloc.rate.norm:  5085718056.000 B/op
                 gc.count:            129.000 counts
                 gc.time:             98.000 ms
                 heap.memory.used.mb: 110.967 MB

Iteration   3: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       502.192 MB/sec
                 gc.alloc.rate.norm:  5085717328.000 B/op
                 gc.count:            102.000 counts
                 gc.time:             95.000 ms
                 heap.memory.used.mb: 79.751 MB

Iteration   4: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       505.606 MB/sec
                 gc.alloc.rate.norm:  5085723456.000 B/op
                 gc.count:            130.000 counts
                 gc.time:             114.000 ms
                 heap.memory.used.mb: 86.094 MB

Iteration   5: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       513.667 MB/sec
                 gc.alloc.rate.norm:  5085717608.000 B/op
                 gc.count:            130.000 counts
                 gc.time:             114.000 ms
                 heap.memory.used.mb: 94.988 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax":
  ≈ 10⁻⁴ ops/ms

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate":
  507.448 ±(99.9%) 20.375 MB/sec [Average]
  (min, avg, max) = (502.192, 507.448, 513.667), stdev = 5.291
  CI (99.9%): [487.074, 527.823] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate.norm":
  5086082348.800 ±(99.9%) 3127593.464 B/op [Average]
  (min, avg, max) = (5085717328.000, 5086082348.800, 5087535296.000), stdev = 812226.090
  CI (99.9%): [5082954755.336, 5089209942.264] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.count":
  610.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (102.000, 122.000, 130.000), stdev = 12.104
  CI (99.9%): [610.000, 610.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.time":
  510.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (89.000, 102.000, 114.000), stdev = 11.424
  CI (99.9%): [510.000, 510.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:heap.memory.used.mb":
  96.825 ±(99.9%) 56.142 MB [Average]
  (min, avg, max) = (79.751, 96.825, 112.324), stdev = 14.580
  CI (99.9%): [40.683, 152.967] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./benchmark-heapdump.hprof
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax
# Parameters: (excelDataRowSize = 150000)

# Run progress: 47.22% complete, ETA 00:49:27
# Warmup Fork: 1 of 1
# Warmup Iteration   1: ≈ 10⁻⁴ ops/ms
Iteration   1: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       362.396 MB/sec
                 gc.alloc.rate.norm:  7595463592.000 B/op
                 gc.count:            189.000 counts
                 gc.time:             141.000 ms
                 heap.memory.used.mb: 95.068 MB

Iteration   2: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       358.566 MB/sec
                 gc.alloc.rate.norm:  7592341512.000 B/op
                 gc.count:            192.000 counts
                 gc.time:             162.000 ms
                 heap.memory.used.mb: 118.183 MB

Iteration   3: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       366.153 MB/sec
                 gc.alloc.rate.norm:  7592340280.000 B/op
                 gc.count:            189.000 counts
                 gc.time:             155.000 ms
                 heap.memory.used.mb: 89.895 MB

Iteration   4: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       362.177 MB/sec
                 gc.alloc.rate.norm:  7592361360.000 B/op
                 gc.count:            189.000 counts
                 gc.time:             140.000 ms
                 heap.memory.used.mb: 88.809 MB

Iteration   5: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       362.961 MB/sec
                 gc.alloc.rate.norm:  7592360448.000 B/op
                 gc.count:            192.000 counts
                 gc.time:             163.000 ms
                 heap.memory.used.mb: 90.846 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 48.61% complete, ETA 00:49:32
# Fork: 1 of 1
# Warmup Iteration   1: ≈ 10⁻⁴ ops/ms
Iteration   1: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       374.141 MB/sec
                 gc.alloc.rate.norm:  7602331528.000 B/op
                 gc.count:            184.000 counts
                 gc.time:             136.000 ms
                 heap.memory.used.mb: 87.443 MB

Iteration   2: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       368.893 MB/sec
                 gc.alloc.rate.norm:  7599541112.000 B/op
                 gc.count:            189.000 counts
                 gc.time:             150.000 ms
                 heap.memory.used.mb: 95.356 MB

Iteration   3: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       373.186 MB/sec
                 gc.alloc.rate.norm:  7599540024.000 B/op
                 gc.count:            192.000 counts
                 gc.time:             151.000 ms
                 heap.memory.used.mb: 124.426 MB

Iteration   4: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       374.948 MB/sec
                 gc.alloc.rate.norm:  7599565328.000 B/op
                 gc.count:            187.000 counts
                 gc.time:             140.000 ms
                 heap.memory.used.mb: 110.449 MB

Iteration   5: ≈ 10⁻⁴ ops/ms
                 gc.alloc.rate:       367.846 MB/sec
                 gc.alloc.rate.norm:  7599557808.000 B/op
                 gc.count:            192.000 counts
                 gc.time:             151.000 ms
                 heap.memory.used.mb: 93.222 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax":
  ≈ 10⁻⁴ ops/ms

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate":
  371.803 ±(99.9%) 12.388 MB/sec [Average]
  (min, avg, max) = (367.846, 371.803, 374.948), stdev = 3.217
  CI (99.9%): [359.415, 384.191] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate.norm":
  7600107160.000 ±(99.9%) 4788301.704 B/op [Average]
  (min, avg, max) = (7599540024.000, 7600107160.000, 7602331528.000), stdev = 1243506.747
  CI (99.9%): [7595318858.296, 7604895461.704] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.count":
  944.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (184.000, 188.800, 192.000), stdev = 3.421
  CI (99.9%): [944.000, 944.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.time":
  728.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (136.000, 145.600, 151.000), stdev = 7.092
  CI (99.9%): [728.000, 728.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:heap.memory.used.mb":
  102.179 ±(99.9%) 57.992 MB [Average]
  (min, avg, max) = (87.443, 102.179, 124.426), stdev = 15.060
  CI (99.9%): [44.187, 160.171] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./benchmark-heapdump.hprof
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom
# Parameters: (excelDataRowSize = 1)

# Run progress: 50.00% complete, ETA 00:49:26
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 4.008 ms/op
Iteration   1: 1.210 ms/op
                 gc.alloc.rate:       1536.699 MB/sec
                 gc.alloc.rate.norm:  1998784.379 B/op
                 gc.count:            115.000 counts
                 gc.time:             89.000 ms
                 heap.memory.used.mb: 41.939 MB

Iteration   2: 1.099 ms/op
                 gc.alloc.rate:       1682.019 MB/sec
                 gc.alloc.rate.norm:  1994130.475 B/op
                 gc.count:            120.000 counts
                 gc.time:             98.000 ms
                 heap.memory.used.mb: 17.687 MB

Iteration   3: 1.062 ms/op
                 gc.alloc.rate:       1737.650 MB/sec
                 gc.alloc.rate.norm:  1993830.616 B/op
                 gc.count:            124.000 counts
                 gc.time:             102.000 ms
                 heap.memory.used.mb: 25.139 MB

Iteration   4: 1.065 ms/op
                 gc.alloc.rate:       1732.923 MB/sec
                 gc.alloc.rate.norm:  1993767.949 B/op
                 gc.count:            123.000 counts
                 gc.time:             98.000 ms
                 heap.memory.used.mb: 72.133 MB

Iteration   5: 1.058 ms/op
                 gc.alloc.rate:       1747.815 MB/sec
                 gc.alloc.rate.norm:  1993761.032 B/op
                 gc.count:            124.000 counts
                 gc.time:             86.000 ms
                 heap.memory.used.mb: 58.175 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 51.39% complete, ETA 00:47:45
# Fork: 1 of 1
# Warmup Iteration   1: 3.957 ms/op
Iteration   1: 1.202 ms/op
                 gc.alloc.rate:       1541.280 MB/sec
                 gc.alloc.rate.norm:  2002025.177 B/op
                 gc.count:            92.000 counts
                 gc.time:             94.000 ms
                 heap.memory.used.mb: 12.344 MB

Iteration   2: 1.062 ms/op
                 gc.alloc.rate:       1740.027 MB/sec
                 gc.alloc.rate.norm:  1994017.014 B/op
                 gc.count:            123.000 counts
                 gc.time:             98.000 ms
                 heap.memory.used.mb: 5.618 MB

Iteration   3: 1.053 ms/op
                 gc.alloc.rate:       1756.476 MB/sec
                 gc.alloc.rate.norm:  1993649.060 B/op
                 gc.count:            122.000 counts
                 gc.time:             89.000 ms
                 heap.memory.used.mb: 9.213 MB

Iteration   4: 1.051 ms/op
                 gc.alloc.rate:       1762.036 MB/sec
                 gc.alloc.rate.norm:  1993563.214 B/op
                 gc.count:            122.000 counts
                 gc.time:             78.000 ms
                 heap.memory.used.mb: 23.128 MB

Iteration   5: 1.057 ms/op
                 gc.alloc.rate:       1750.840 MB/sec
                 gc.alloc.rate.norm:  1993580.304 B/op
                 gc.count:            121.000 counts
                 gc.time:             80.000 ms
                 heap.memory.used.mb: 45.155 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom":
  1.085 ±(99.9%) 0.252 ms/op [Average]
  (min, avg, max) = (1.051, 1.085, 1.202), stdev = 0.065
  CI (99.9%): [0.833, 1.337] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate":
  1710.132 ±(99.9%) 364.816 MB/sec [Average]
  (min, avg, max) = (1541.280, 1710.132, 1762.036), stdev = 94.741
  CI (99.9%): [1345.316, 2074.947] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate.norm":
  1995366.954 ±(99.9%) 14349.919 B/op [Average]
  (min, avg, max) = (1993563.214, 1995366.954, 2002025.177), stdev = 3726.628
  CI (99.9%): [1981017.035, 2009716.872] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.count":
  580.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (92.000, 116.000, 123.000), stdev = 13.435
  CI (99.9%): [580.000, 580.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.time":
  439.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (78.000, 87.800, 98.000), stdev = 8.672
  CI (99.9%): [439.000, 439.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:heap.memory.used.mb":
  19.092 ±(99.9%) 61.498 MB [Average]
  (min, avg, max) = (5.618, 19.092, 45.155), stdev = 15.971
  CI (99.9%): [≈ 0, 80.590] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./benchmark-heapdump.hprof
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom
# Parameters: (excelDataRowSize = 100)

# Run progress: 52.78% complete, ETA 00:46:07
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 11.456 ms/op
Iteration   1: 2.773 ms/op
                 gc.alloc.rate:       2386.751 MB/sec
                 gc.alloc.rate.norm:  7143149.456 B/op
                 gc.count:            137.000 counts
                 gc.time:             112.000 ms
                 heap.memory.used.mb: 5.720 MB

Iteration   2: 2.499 ms/op
                 gc.alloc.rate:       2646.828 MB/sec
                 gc.alloc.rate.norm:  7124366.929 B/op
                 gc.count:            185.000 counts
                 gc.time:             119.000 ms
                 heap.memory.used.mb: 31.371 MB

Iteration   3: 2.464 ms/op
                 gc.alloc.rate:       2678.979 MB/sec
                 gc.alloc.rate.norm:  7123625.163 B/op
                 gc.count:            185.000 counts
                 gc.time:             125.000 ms
                 heap.memory.used.mb: 69.790 MB

Iteration   4: 2.471 ms/op
                 gc.alloc.rate:       2672.725 MB/sec
                 gc.alloc.rate.norm:  7123286.628 B/op
                 gc.count:            159.000 counts
                 gc.time:             118.000 ms
                 heap.memory.used.mb: 26.208 MB

Iteration   5: 2.520 ms/op
                 gc.alloc.rate:       2629.168 MB/sec
                 gc.alloc.rate.norm:  7123239.094 B/op
                 gc.count:            179.000 counts
                 gc.time:             114.000 ms
                 heap.memory.used.mb: 81.147 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/java.lang.invoke.VarHandleGuards.guard_LLL_Z(VarHandleGuards.java:68)
  at java.base@21.0.3/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:350)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.isReleasable(AbstractQueuedSynchronizer.java:515)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 54.17% complete, ETA 00:44:30
# Fork: 1 of 1
# Warmup Iteration   1: 13.407 ms/op
Iteration   1: 2.748 ms/op
                 gc.alloc.rate:       2406.947 MB/sec
                 gc.alloc.rate.norm:  7136923.737 B/op
                 gc.count:            161.000 counts
                 gc.time:             127.000 ms
                 heap.memory.used.mb: 32.177 MB

Iteration   2: 2.467 ms/op
                 gc.alloc.rate:       2673.809 MB/sec
                 gc.alloc.rate.norm:  7125678.699 B/op
                 gc.count:            185.000 counts
                 gc.time:             130.000 ms
                 heap.memory.used.mb: 64.763 MB

Iteration   3: 2.494 ms/op
                 gc.alloc.rate:       2647.595 MB/sec
                 gc.alloc.rate.norm:  7125002.159 B/op
                 gc.count:            183.000 counts
                 gc.time:             123.000 ms
                 heap.memory.used.mb: 67.761 MB

Iteration   4: 2.616 ms/op
                 gc.alloc.rate:       2528.374 MB/sec
                 gc.alloc.rate.norm:  7124695.745 B/op
                 gc.count:            175.000 counts
                 gc.time:             119.000 ms
                 heap.memory.used.mb: 18.786 MB

Iteration   5: 2.434 ms/op
                 gc.alloc.rate:       2716.854 MB/sec
                 gc.alloc.rate.norm:  7124632.596 B/op
                 gc.count:            121.000 counts
                 gc.time:             88.000 ms
                 heap.memory.used.mb: 51.905 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.compareAndSetReference(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer.casTail(AbstractQueuedSynchronizer.java:575)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:741)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:990)
  at java.base@21.0.3/java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153)
  at java.base@21.0.3/java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.offer(ScheduledThreadPoolExecutor.java:1100)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add(ScheduledThreadPoolExecutor.java:1127)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.add(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor.reExecutePeriodic(ScheduledThreadPoolExecutor.java:358)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:307)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.enableWait(AbstractQueuedSynchronizer.java:1570)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1748)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom":
  2.552 ±(99.9%) 0.498 ms/op [Average]
  (min, avg, max) = (2.434, 2.552, 2.748), stdev = 0.129
  CI (99.9%): [2.054, 3.049] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate":
  2594.716 ±(99.9%) 485.654 MB/sec [Average]
  (min, avg, max) = (2406.947, 2594.716, 2716.854), stdev = 126.123
  CI (99.9%): [2109.062, 3080.370] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate.norm":
  7127386.587 ±(99.9%) 20591.469 B/op [Average]
  (min, avg, max) = (7124632.596, 7127386.587, 7136923.737), stdev = 5347.539
  CI (99.9%): [7106795.118, 7147978.056] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.count":
  825.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (121.000, 165.000, 185.000), stdev = 26.344
  CI (99.9%): [825.000, 825.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.time":
  587.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (88.000, 117.400, 130.000), stdev = 16.950
  CI (99.9%): [587.000, 587.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:heap.memory.used.mb":
  47.078 ±(99.9%) 81.373 MB [Average]
  (min, avg, max) = (18.786, 47.078, 67.761), stdev = 21.132
  CI (99.9%): [≈ 0, 128.452] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./benchmark-heapdump.hprof
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom
# Parameters: (excelDataRowSize = 500)

# Run progress: 55.56% complete, ETA 00:42:55
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 40.437 ms/op
Iteration   1: 9.550 ms/op
                 gc.alloc.rate:       2707.822 MB/sec
                 gc.alloc.rate.norm:  27871905.250 B/op
                 gc.count:            137.000 counts
                 gc.time:             118.000 ms
                 heap.memory.used.mb: 25.676 MB

Iteration   2: 8.836 ms/op
                 gc.alloc.rate:       2919.211 MB/sec
                 gc.alloc.rate.norm:  27837273.016 B/op
                 gc.count:            134.000 counts
                 gc.time:             150.000 ms
                 heap.memory.used.mb: 96.945 MB

Iteration   3: 8.516 ms/op
                 gc.alloc.rate:       3030.505 MB/sec
                 gc.alloc.rate.norm:  27834507.565 B/op
                 gc.count:            138.000 counts
                 gc.time:             149.000 ms
                 heap.memory.used.mb: 15.519 MB

Iteration   4: 8.476 ms/op
                 gc.alloc.rate:       3042.706 MB/sec
                 gc.alloc.rate.norm:  27834240.122 B/op
                 gc.count:            137.000 counts
                 gc.time:             142.000 ms
                 heap.memory.used.mb: 92.554 MB

Iteration   5: 8.475 ms/op
                 gc.alloc.rate:       3042.943 MB/sec
                 gc.alloc.rate.norm:  27834097.936 B/op
                 gc.count:            137.000 counts
                 gc.time:             142.000 ms
                 heap.memory.used.mb: 65.727 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 56.94% complete, ETA 00:41:22
# Fork: 1 of 1
# Warmup Iteration   1: 46.100 ms/op
Iteration   1: 10.690 ms/op
                 gc.alloc.rate:       2421.388 MB/sec
                 gc.alloc.rate.norm:  27887482.525 B/op
                 gc.count:            120.000 counts
                 gc.time:             139.000 ms
                 heap.memory.used.mb: 49.696 MB

Iteration   2: 10.230 ms/op
                 gc.alloc.rate:       2524.999 MB/sec
                 gc.alloc.rate.norm:  27851588.816 B/op
                 gc.count:            117.000 counts
                 gc.time:             153.000 ms
                 heap.memory.used.mb: 73.516 MB

Iteration   3: 9.690 ms/op
                 gc.alloc.rate:       2668.706 MB/sec
                 gc.alloc.rate.norm:  27848327.164 B/op
                 gc.count:            123.000 counts
                 gc.time:             146.000 ms
                 heap.memory.used.mb: 78.943 MB

Iteration   4: 9.621 ms/op
                 gc.alloc.rate:       2691.272 MB/sec
                 gc.alloc.rate.norm:  27847895.677 B/op
                 gc.count:            128.000 counts
                 gc.time:             147.000 ms
                 heap.memory.used.mb: 44.407 MB

Iteration   5: 9.040 ms/op
                 gc.alloc.rate:       2859.742 MB/sec
                 gc.alloc.rate.norm:  27847766.744 B/op
                 gc.count:            131.000 counts
                 gc.time:             146.000 ms
                 heap.memory.used.mb: 80.820 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom":
  9.854 ±(99.9%) 2.424 ms/op [Average]
  (min, avg, max) = (9.040, 9.854, 10.690), stdev = 0.629
  CI (99.9%): [7.430, 12.278] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate":
  2633.221 ±(99.9%) 645.848 MB/sec [Average]
  (min, avg, max) = (2421.388, 2633.221, 2859.742), stdev = 167.725
  CI (99.9%): [1987.374, 3279.069] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate.norm":
  27856612.185 ±(99.9%) 66724.921 B/op [Average]
  (min, avg, max) = (27847766.744, 27856612.185, 27887482.525), stdev = 17328.250
  CI (99.9%): [27789887.264, 27923337.106] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.count":
  619.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (117.000, 123.800, 131.000), stdev = 5.718
  CI (99.9%): [619.000, 619.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.time":
  731.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (139.000, 146.200, 153.000), stdev = 4.970
  CI (99.9%): [731.000, 731.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:heap.memory.used.mb":
  65.476 ±(99.9%) 65.977 MB [Average]
  (min, avg, max) = (44.407, 65.476, 80.820), stdev = 17.134
  CI (99.9%): [≈ 0, 131.454] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./benchmark-heapdump.hprof
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom
# Parameters: (excelDataRowSize = 1000)

# Run progress: 58.33% complete, ETA 00:39:50
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 63.843 ms/op
Iteration   1: 18.767 ms/op
                 gc.alloc.rate:       2661.853 MB/sec
                 gc.alloc.rate.norm:  53790988.315 B/op
                 gc.count:            113.000 counts
                 gc.time:             176.000 ms
                 heap.memory.used.mb: 124.027 MB

Iteration   2: 17.668 ms/op
                 gc.alloc.rate:       2822.422 MB/sec
                 gc.alloc.rate.norm:  53747364.620 B/op
                 gc.count:            116.000 counts
                 gc.time:             181.000 ms
                 heap.memory.used.mb: 38.830 MB

Iteration   3: 17.433 ms/op
                 gc.alloc.rate:       2860.239 MB/sec
                 gc.alloc.rate.norm:  53742309.444 B/op
                 gc.count:            113.000 counts
                 gc.time:             174.000 ms
                 heap.memory.used.mb: 113.249 MB

Iteration   4: 17.425 ms/op
                 gc.alloc.rate:       2862.289 MB/sec
                 gc.alloc.rate.norm:  53741356.528 B/op
                 gc.count:            110.000 counts
                 gc.time:             173.000 ms
                 heap.memory.used.mb: 20.600 MB

Iteration   5: 17.670 ms/op
                 gc.alloc.rate:       2821.600 MB/sec
                 gc.alloc.rate.norm:  53740641.014 B/op
                 gc.count:            112.000 counts
                 gc.time:             178.000 ms
                 heap.memory.used.mb: 110.973 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 59.72% complete, ETA 00:38:20
# Fork: 1 of 1
# Warmup Iteration   1: 68.219 ms/op
Iteration   1: 18.858 ms/op
                 gc.alloc.rate:       2646.634 MB/sec
                 gc.alloc.rate.norm:  53800019.579 B/op
                 gc.count:            114.000 counts
                 gc.time:             178.000 ms
                 heap.memory.used.mb: 9.270 MB

Iteration   2: 17.939 ms/op
                 gc.alloc.rate:       2775.713 MB/sec
                 gc.alloc.rate.norm:  53747838.194 B/op
                 gc.count:            108.000 counts
                 gc.time:             172.000 ms
                 heap.memory.used.mb: 94.715 MB

Iteration   3: 17.597 ms/op
                 gc.alloc.rate:       2836.743 MB/sec
                 gc.alloc.rate.norm:  53742360.056 B/op
                 gc.count:            117.000 counts
                 gc.time:             174.000 ms
                 heap.memory.used.mb: 67.202 MB

Iteration   4: 17.386 ms/op
                 gc.alloc.rate:       2866.121 MB/sec
                 gc.alloc.rate.norm:  53741378.722 B/op
                 gc.count:            111.000 counts
                 gc.time:             184.000 ms
                 heap.memory.used.mb: 89.511 MB

Iteration   5: 17.191 ms/op
                 gc.alloc.rate:       2899.286 MB/sec
                 gc.alloc.rate.norm:  53740540.384 B/op
                 gc.count:            122.000 counts
                 gc.time:             155.000 ms
                 heap.memory.used.mb: 27.361 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom":
  17.794 ±(99.9%) 2.526 ms/op [Average]
  (min, avg, max) = (17.191, 17.794, 18.858), stdev = 0.656
  CI (99.9%): [15.268, 20.320] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate":
  2804.900 ±(99.9%) 382.993 MB/sec [Average]
  (min, avg, max) = (2646.634, 2804.900, 2899.286), stdev = 99.462
  CI (99.9%): [2421.907, 3187.892] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate.norm":
  53754427.387 ±(99.9%) 98752.360 B/op [Average]
  (min, avg, max) = (53740540.384, 53754427.387, 53800019.579), stdev = 25645.674
  CI (99.9%): [53655675.027, 53853179.747] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.count":
  572.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (108.000, 114.400, 122.000), stdev = 5.413
  CI (99.9%): [572.000, 572.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.time":
  863.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (155.000, 172.600, 184.000), stdev = 10.854
  CI (99.9%): [863.000, 863.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:heap.memory.used.mb":
  57.612 ±(99.9%) 145.845 MB [Average]
  (min, avg, max) = (9.270, 57.612, 94.715), stdev = 37.875
  CI (99.9%): [≈ 0, 203.456] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./benchmark-heapdump.hprof
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom
# Parameters: (excelDataRowSize = 5000)

# Run progress: 61.11% complete, ETA 00:36:50
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 337.918 ms/op
Iteration   1: 135.402 ms/op
                 gc.alloc.rate:       1805.687 MB/sec
                 gc.alloc.rate.norm:  263718228.541 B/op
                 gc.count:            112.000 counts
                 gc.time:             441.000 ms
                 heap.memory.used.mb: 168.231 MB

Iteration   2: 132.387 ms/op
                 gc.alloc.rate:       1846.826 MB/sec
                 gc.alloc.rate.norm:  263633943.579 B/op
                 gc.count:            105.000 counts
                 gc.time:             429.000 ms
                 heap.memory.used.mb: 158.328 MB

Iteration   3: 133.300 ms/op
                 gc.alloc.rate:       1834.274 MB/sec
                 gc.alloc.rate.norm:  263626492.421 B/op
                 gc.count:            104.000 counts
                 gc.time:             430.000 ms
                 heap.memory.used.mb: 200.655 MB

Iteration   4: 135.730 ms/op
                 gc.alloc.rate:       1800.304 MB/sec
                 gc.alloc.rate.norm:  263629524.541 B/op
                 gc.count:            103.000 counts
                 gc.time:             444.000 ms
                 heap.memory.used.mb: 285.489 MB

Iteration   5: 148.037 ms/op
                 gc.alloc.rate:       1650.450 MB/sec
                 gc.alloc.rate.norm:  263612187.059 B/op
                 gc.count:            46.000 counts
                 gc.time:             183.000 ms
                 heap.memory.used.mb: 289.983 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 62.50% complete, ETA 00:35:22
# Fork: 1 of 1
# Warmup Iteration   1: 366.451 ms/op
Iteration   1: 136.370 ms/op
                 gc.alloc.rate:       1795.831 MB/sec
                 gc.alloc.rate.norm:  263723614.486 B/op
                 gc.count:            96.000 counts
                 gc.time:             413.000 ms
                 heap.memory.used.mb: 266.297 MB

Iteration   2: 135.581 ms/op
                 gc.alloc.rate:       1806.332 MB/sec
                 gc.alloc.rate.norm:  263633504.649 B/op
                 gc.count:            96.000 counts
                 gc.time:             418.000 ms
                 heap.memory.used.mb: 268.982 MB

Iteration   3: 131.969 ms/op
                 gc.alloc.rate:       1853.645 MB/sec
                 gc.alloc.rate.norm:  263630632.632 B/op
                 gc.count:            107.000 counts
                 gc.time:             432.000 ms
                 heap.memory.used.mb: 251.214 MB

Iteration   4: 132.206 ms/op
                 gc.alloc.rate:       1849.440 MB/sec
                 gc.alloc.rate.norm:  263631966.526 B/op
                 gc.count:            104.000 counts
                 gc.time:             440.000 ms
                 heap.memory.used.mb: 206.615 MB

Iteration   5: 133.299 ms/op
                 gc.alloc.rate:       1835.147 MB/sec
                 gc.alloc.rate.norm:  263613060.211 B/op
                 gc.count:            103.000 counts
                 gc.time:             437.000 ms
                 heap.memory.used.mb: 211.442 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom":
  133.885 ±(99.9%) 7.673 ms/op [Average]
  (min, avg, max) = (131.969, 133.885, 136.370), stdev = 1.993
  CI (99.9%): [126.212, 141.558] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate":
  1828.079 ±(99.9%) 99.536 MB/sec [Average]
  (min, avg, max) = (1795.831, 1828.079, 1853.645), stdev = 25.849
  CI (99.9%): [1728.543, 1927.615] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate.norm":
  263646555.701 ±(99.9%) 168910.356 B/op [Average]
  (min, avg, max) = (263613060.211, 263646555.701, 263723614.486), stdev = 43865.483
  CI (99.9%): [263477645.345, 263815466.057] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.count":
  506.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (96.000, 101.200, 107.000), stdev = 4.970
  CI (99.9%): [506.000, 506.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.time":
  2140.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (413.000, 428.000, 440.000), stdev = 11.895
  CI (99.9%): [2140.000, 2140.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:heap.memory.used.mb":
  240.910 ±(99.9%) 115.249 MB [Average]
  (min, avg, max) = (206.615, 240.910, 268.982), stdev = 29.930
  CI (99.9%): [125.661, 356.159] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./benchmark-heapdump.hprof
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom
# Parameters: (excelDataRowSize = 10000)

# Run progress: 63.89% complete, ETA 00:33:55
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 659.810 ms/op
Iteration   1: 345.145 ms/op
                 gc.alloc.rate:       1414.428 MB/sec
                 gc.alloc.rate.norm:  525734272.000 B/op
                 gc.count:            76.000 counts
                 gc.time:             378.000 ms
                 heap.memory.used.mb: 308.791 MB

Iteration   2: 342.262 ms/op
                 gc.alloc.rate:       1426.103 MB/sec
                 gc.alloc.rate.norm:  525526921.067 B/op
                 gc.count:            77.000 counts
                 gc.time:             376.000 ms
                 heap.memory.used.mb: 252.872 MB

Iteration   3: 345.173 ms/op
                 gc.alloc.rate:       1414.367 MB/sec
                 gc.alloc.rate.norm:  525513009.067 B/op
                 gc.count:            78.000 counts
                 gc.time:             392.000 ms
                 heap.memory.used.mb: 164.412 MB

Iteration   4: 340.956 ms/op
                 gc.alloc.rate:       1430.138 MB/sec
                 gc.alloc.rate.norm:  525516843.200 B/op
                 gc.count:            74.000 counts
                 gc.time:             388.000 ms
                 heap.memory.used.mb: 258.933 MB

Iteration   5: 343.436 ms/op
                 gc.alloc.rate:       1420.923 MB/sec
                 gc.alloc.rate.norm:  525514465.600 B/op
                 gc.count:            75.000 counts
                 gc.time:             387.000 ms
                 heap.memory.used.mb: 199.862 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 65.28% complete, ETA 00:32:29
# Fork: 1 of 1
# Warmup Iteration   1: 632.486 ms/op
Iteration   1: 348.668 ms/op
                 gc.alloc.rate:       1401.187 MB/sec
                 gc.alloc.rate.norm:  525405079.467 B/op
                 gc.count:            78.000 counts
                 gc.time:             386.000 ms
                 heap.memory.used.mb: 292.664 MB

Iteration   2: 338.507 ms/op
                 gc.alloc.rate:       1440.073 MB/sec
                 gc.alloc.rate.norm:  525207096.000 B/op
                 gc.count:            71.000 counts
                 gc.time:             388.000 ms
                 heap.memory.used.mb: 387.920 MB

Iteration   3: 346.089 ms/op
                 gc.alloc.rate:       1409.928 MB/sec
                 gc.alloc.rate.norm:  525192925.333 B/op
                 gc.count:            82.000 counts
                 gc.time:             386.000 ms
                 heap.memory.used.mb: 358.206 MB

Iteration   4: 340.864 ms/op
                 gc.alloc.rate:       1429.291 MB/sec
                 gc.alloc.rate.norm:  525196889.600 B/op
                 gc.count:            72.000 counts
                 gc.time:             387.000 ms
                 heap.memory.used.mb: 409.271 MB

Iteration   5: 345.223 ms/op
                 gc.alloc.rate:       1411.756 MB/sec
                 gc.alloc.rate.norm:  525194430.400 B/op
                 gc.count:            75.000 counts
                 gc.time:             394.000 ms
                 heap.memory.used.mb: 181.432 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom":
  343.870 ±(99.9%) 15.827 ms/op [Average]
  (min, avg, max) = (338.507, 343.870, 348.668), stdev = 4.110
  CI (99.9%): [328.043, 359.697] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate":
  1418.447 ±(99.9%) 60.901 MB/sec [Average]
  (min, avg, max) = (1401.187, 1418.447, 1440.073), stdev = 15.816
  CI (99.9%): [1357.546, 1479.348] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate.norm":
  525239284.160 ±(99.9%) 357521.769 B/op [Average]
  (min, avg, max) = (525192925.333, 525239284.160, 525405079.467), stdev = 92847.268
  CI (99.9%): [524881762.391, 525596805.929] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.count":
  378.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (71.000, 75.600, 82.000), stdev = 4.506
  CI (99.9%): [378.000, 378.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.time":
  1941.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (386.000, 388.200, 394.000), stdev = 3.347
  CI (99.9%): [1941.000, 1941.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:heap.memory.used.mb":
  325.899 ±(99.9%) 354.053 MB [Average]
  (min, avg, max) = (181.432, 325.899, 409.271), stdev = 91.947
  CI (99.9%): [≈ 0, 679.952] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./benchmark-heapdump.hprof
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom
# Parameters: (excelDataRowSize = 15000)

# Run progress: 66.67% complete, ETA 00:31:04
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 1207.138 ms/op
Iteration   1: 611.317 ms/op
                 gc.alloc.rate:       1203.492 MB/sec
                 gc.alloc.rate.norm:  789987944.000 B/op
                 gc.count:            67.000 counts
                 gc.time:             350.000 ms
                 heap.memory.used.mb: 394.500 MB

Iteration   2: 610.696 ms/op
                 gc.alloc.rate:       1202.067 MB/sec
                 gc.alloc.rate.norm:  789645541.333 B/op
                 gc.count:            61.000 counts
                 gc.time:             366.000 ms
                 heap.memory.used.mb: 276.505 MB

Iteration   3: 614.475 ms/op
                 gc.alloc.rate:       1194.704 MB/sec
                 gc.alloc.rate.norm:  789646122.667 B/op
                 gc.count:            60.000 counts
                 gc.time:             368.000 ms
                 heap.memory.used.mb: 372.490 MB

Iteration   4: 633.839 ms/op
                 gc.alloc.rate:       1157.528 MB/sec
                 gc.alloc.rate.norm:  789644307.000 B/op
                 gc.count:            60.000 counts
                 gc.time:             335.000 ms
                 heap.memory.used.mb: 297.804 MB

Iteration   5: 616.807 ms/op
                 gc.alloc.rate:       1191.597 MB/sec
                 gc.alloc.rate.norm:  789640330.667 B/op
                 gc.count:            65.000 counts
                 gc.time:             369.000 ms
                 heap.memory.used.mb: 434.907 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 68.06% complete, ETA 00:29:41
# Fork: 1 of 1
# Warmup Iteration   1: 1110.741 ms/op
Iteration   1: 616.682 ms/op
                 gc.alloc.rate:       1194.854 MB/sec
                 gc.alloc.rate.norm:  790507124.444 B/op
                 gc.count:            65.000 counts
                 gc.time:             354.000 ms
                 heap.memory.used.mb: 306.007 MB

Iteration   2: 608.800 ms/op
                 gc.alloc.rate:       1208.864 MB/sec
                 gc.alloc.rate.norm:  790133255.111 B/op
                 gc.count:            59.000 counts
                 gc.time:             351.000 ms
                 heap.memory.used.mb: 349.797 MB

Iteration   3: 636.557 ms/op
                 gc.alloc.rate:       1151.912 MB/sec
                 gc.alloc.rate.norm:  790126612.000 B/op
                 gc.count:            56.000 counts
                 gc.time:             331.000 ms
                 heap.memory.used.mb: 197.804 MB

Iteration   4: 628.662 ms/op
                 gc.alloc.rate:       1165.907 MB/sec
                 gc.alloc.rate.norm:  790124329.000 B/op
                 gc.count:            54.000 counts
                 gc.time:             329.000 ms
                 heap.memory.used.mb: 142.104 MB

Iteration   5: 642.910 ms/op
                 gc.alloc.rate:       1140.261 MB/sec
                 gc.alloc.rate.norm:  790125240.000 B/op
                 gc.count:            53.000 counts
                 gc.time:             318.000 ms
                 heap.memory.used.mb: 359.880 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom":
  626.722 ±(99.9%) 53.928 ms/op [Average]
  (min, avg, max) = (608.800, 626.722, 642.910), stdev = 14.005
  CI (99.9%): [572.795, 680.650] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate":
  1172.359 ±(99.9%) 111.081 MB/sec [Average]
  (min, avg, max) = (1140.261, 1172.359, 1208.864), stdev = 28.847
  CI (99.9%): [1061.278, 1283.440] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate.norm":
  790203312.111 ±(99.9%) 654117.790 B/op [Average]
  (min, avg, max) = (790124329.000, 790203312.111, 790507124.444), stdev = 169872.313
  CI (99.9%): [789549194.321, 790857429.901] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.count":
  287.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (53.000, 57.400, 65.000), stdev = 4.827
  CI (99.9%): [287.000, 287.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.time":
  1683.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (318.000, 336.600, 354.000), stdev = 15.372
  CI (99.9%): [1683.000, 1683.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:heap.memory.used.mb":
  271.118 ±(99.9%) 371.870 MB [Average]
  (min, avg, max) = (142.104, 271.118, 359.880), stdev = 96.573
  CI (99.9%): [≈ 0, 642.988] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./benchmark-heapdump.hprof
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom
# Parameters: (excelDataRowSize = 100000)

# Run progress: 69.44% complete, ETA 00:28:18
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 14716.909 ms/op
Iteration   1: 13635.345 ms/op
                 gc.alloc.rate:       364.433 MB/sec
                 gc.alloc.rate.norm:  5263465616.000 B/op
                 gc.count:            46.000 counts
                 gc.time:             274.000 ms
                 heap.memory.used.mb: 811.955 MB

Iteration   2: 14073.811 ms/op
                 gc.alloc.rate:       353.222 MB/sec
                 gc.alloc.rate.norm:  5263234320.000 B/op
                 gc.count:            49.000 counts
                 gc.time:             276.000 ms
                 heap.memory.used.mb: 673.828 MB

Iteration   3: 13913.271 ms/op
                 gc.alloc.rate:       357.182 MB/sec
                 gc.alloc.rate.norm:  5263022352.000 B/op
                 gc.count:            48.000 counts
                 gc.time:             274.000 ms
                 heap.memory.used.mb: 673.258 MB

Iteration   4: 14866.525 ms/op
                 gc.alloc.rate:       334.447 MB/sec
                 gc.alloc.rate.norm:  5262935304.000 B/op
                 gc.count:            50.000 counts
                 gc.time:             285.000 ms
                 heap.memory.used.mb: 668.163 MB

Iteration   5: 15817.288 ms/op
                 gc.alloc.rate:       314.656 MB/sec
                 gc.alloc.rate.norm:  5262931656.000 B/op
                 gc.count:            48.000 counts
                 gc.time:             295.000 ms
                 heap.memory.used.mb: 689.886 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 70.83% complete, ETA 00:27:20
# Fork: 1 of 1
# Warmup Iteration   1: 13463.116 ms/op
Iteration   1: 13482.091 ms/op
                 gc.alloc.rate:       368.709 MB/sec
                 gc.alloc.rate.norm:  5265064280.000 B/op
                 gc.count:            46.000 counts
                 gc.time:             271.000 ms
                 heap.memory.used.mb: 869.151 MB

Iteration   2: 15001.189 ms/op
                 gc.alloc.rate:       331.829 MB/sec
                 gc.alloc.rate.norm:  5264906400.000 B/op
                 gc.count:            49.000 counts
                 gc.time:             267.000 ms
                 heap.memory.used.mb: 750.552 MB

Iteration   3: 13839.227 ms/op
                 gc.alloc.rate:       359.298 MB/sec
                 gc.alloc.rate.norm:  5264696304.000 B/op
                 gc.count:            45.000 counts
                 gc.time:             279.000 ms
                 heap.memory.used.mb: 750.484 MB

Iteration   4: 14037.620 ms/op
                 gc.alloc.rate:       354.210 MB/sec
                 gc.alloc.rate.norm:  5264610240.000 B/op
                 gc.count:            50.000 counts
                 gc.time:             262.000 ms
                 heap.memory.used.mb: 667.274 MB

Iteration   5: 14405.604 ms/op
                 gc.alloc.rate:       345.277 MB/sec
                 gc.alloc.rate.norm:  5264530440.000 B/op
                 gc.count:            49.000 counts
                 gc.time:             268.000 ms
                 heap.memory.used.mb: 756.391 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom":
  14153.146 ±(99.9%) 2232.974 ms/op [Average]
  (min, avg, max) = (13482.091, 14153.146, 15001.189), stdev = 579.896
  CI (99.9%): [11920.172, 16386.120] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate":
  351.865 ±(99.9%) 54.092 MB/sec [Average]
  (min, avg, max) = (331.829, 351.865, 368.709), stdev = 14.048
  CI (99.9%): [297.773, 405.957] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate.norm":
  5264761532.800 ±(99.9%) 846245.396 B/op [Average]
  (min, avg, max) = (5264530440.000, 5264761532.800, 5265064280.000), stdev = 219767.242
  CI (99.9%): [5263915287.404, 5265607778.196] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.count":
  239.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (45.000, 47.800, 50.000), stdev = 2.168
  CI (99.9%): [239.000, 239.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.time":
  1347.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (262.000, 269.400, 279.000), stdev = 6.269
  CI (99.9%): [1347.000, 1347.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:heap.memory.used.mb":
  758.770 ±(99.9%) 276.988 MB [Average]
  (min, avg, max) = (667.274, 758.770, 869.151), stdev = 71.933
  CI (99.9%): [481.783, 1035.758] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./benchmark-heapdump.hprof
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom
# Parameters: (excelDataRowSize = 150000)

# Run progress: 72.22% complete, ETA 00:26:19
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 31368.062 ms/op
Iteration   1: 28887.282 ms/op
                 gc.alloc.rate:       258.549 MB/sec
                 gc.alloc.rate.norm:  7867054688.000 B/op
                 gc.count:            169.000 counts
                 gc.time:             871.000 ms
                 heap.memory.used.mb: 965.672 MB

Iteration   2: 28846.004 ms/op
                 gc.alloc.rate:       258.792 MB/sec
                 gc.alloc.rate.norm:  7863674824.000 B/op
                 gc.count:            182.000 counts
                 gc.time:             864.000 ms
                 heap.memory.used.mb: 930.599 MB

Iteration   3: 29983.397 ms/op
                 gc.alloc.rate:       249.041 MB/sec
                 gc.alloc.rate.norm:  7863251496.000 B/op
                 gc.count:            183.000 counts
                 gc.time:             879.000 ms
                 heap.memory.used.mb: 955.143 MB

Iteration   4: 30016.158 ms/op
                 gc.alloc.rate:       248.677 MB/sec
                 gc.alloc.rate.norm:  7863115600.000 B/op
                 gc.count:            166.000 counts
                 gc.time:             870.000 ms
                 heap.memory.used.mb: 955.596 MB

Iteration   5: 28631.094 ms/op
                 gc.alloc.rate:       260.692 MB/sec
                 gc.alloc.rate.norm:  7863111264.000 B/op
                 gc.count:            170.000 counts
                 gc.time:             880.000 ms
                 heap.memory.used.mb: 927.012 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 73.61% complete, ETA 00:25:49
# Fork: 1 of 1
# Warmup Iteration   1: 29695.603 ms/op
Iteration   1: 26306.170 ms/op
                 gc.alloc.rate:       283.977 MB/sec
                 gc.alloc.rate.norm:  7870690360.000 B/op
                 gc.count:            170.000 counts
                 gc.time:             645.000 ms
                 heap.memory.used.mb: 923.714 MB

Iteration   2: 29827.527 ms/op
                 gc.alloc.rate:       250.442 MB/sec
                 gc.alloc.rate.norm:  7868281672.000 B/op
                 gc.count:            170.000 counts
                 gc.time:             862.000 ms
                 heap.memory.used.mb: 870.517 MB

Iteration   3: 28080.123 ms/op
                 gc.alloc.rate:       265.908 MB/sec
                 gc.alloc.rate.norm:  7867984280.000 B/op
                 gc.count:            166.000 counts
                 gc.time:             860.000 ms
                 heap.memory.used.mb: 935.174 MB

Iteration   4: 27993.363 ms/op
                 gc.alloc.rate:       266.770 MB/sec
                 gc.alloc.rate.norm:  7869110600.000 B/op
                 gc.count:            181.000 counts
                 gc.time:             892.000 ms
                 heap.memory.used.mb: 966.272 MB

Iteration   5: 32756.527 ms/op
                 gc.alloc.rate:       228.234 MB/sec
                 gc.alloc.rate.norm:  7867911880.000 B/op
                 gc.count:            169.000 counts
                 gc.time:             864.000 ms
                 heap.memory.used.mb: 962.210 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom":
  28992.742 ±(99.9%) 9414.853 ms/op [Average]
  (min, avg, max) = (26306.170, 28992.742, 32756.527), stdev = 2445.007
  CI (99.9%): [19577.889, 38407.595] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate":
  259.066 ±(99.9%) 80.581 MB/sec [Average]
  (min, avg, max) = (228.234, 259.066, 283.977), stdev = 20.927
  CI (99.9%): [178.485, 339.647] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.alloc.rate.norm":
  7868795758.400 ±(99.9%) 4471003.667 B/op [Average]
  (min, avg, max) = (7867911880.000, 7868795758.400, 7870690360.000), stdev = 1161105.454
  CI (99.9%): [7864324754.733, 7873266762.067] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.count":
  856.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (166.000, 171.200, 181.000), stdev = 5.718
  CI (99.9%): [856.000, 856.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:gc.time":
  4123.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (645.000, 824.600, 892.000), stdev = 101.246
  CI (99.9%): [4123.000, 4123.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readDom:heap.memory.used.mb":
  931.577 ±(99.9%) 148.452 MB [Average]
  (min, avg, max) = (870.517, 931.577, 966.272), stdev = 38.553
  CI (99.9%): [783.125, 1080.030] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./benchmark-heapdump.hprof
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax
# Parameters: (excelDataRowSize = 1)

# Run progress: 75.00% complete, ETA 00:25:11
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 1.755 ms/op
Iteration   1: 0.521 ms/op
                 gc.alloc.rate:       2291.615 MB/sec
                 gc.alloc.rate.norm:  1286235.802 B/op
                 gc.count:            165.000 counts
                 gc.time:             120.000 ms
                 heap.memory.used.mb: 26.247 MB

Iteration   2: 0.507 ms/op
                 gc.alloc.rate:       2344.460 MB/sec
                 gc.alloc.rate.norm:  1285136.690 B/op
                 gc.count:            167.000 counts
                 gc.time:             127.000 ms
                 heap.memory.used.mb: 24.172 MB

Iteration   3: 0.508 ms/op
                 gc.alloc.rate:       2346.868 MB/sec
                 gc.alloc.rate.norm:  1285122.973 B/op
                 gc.count:            167.000 counts
                 gc.time:             108.000 ms
                 heap.memory.used.mb: 6.653 MB

Iteration   4: 0.494 ms/op
                 gc.alloc.rate:       2412.602 MB/sec
                 gc.alloc.rate.norm:  1285133.370 B/op
                 gc.count:            171.000 counts
                 gc.time:             102.000 ms
                 heap.memory.used.mb: 52.638 MB

Iteration   5: 0.499 ms/op
                 gc.alloc.rate:       2384.843 MB/sec
                 gc.alloc.rate.norm:  1285127.637 B/op
                 gc.count:            170.000 counts
                 gc.time:             114.000 ms
                 heap.memory.used.mb: 1.635 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 76.39% complete, ETA 00:23:40
# Fork: 1 of 1
# Warmup Iteration   1: 1.685 ms/op
Iteration   1: 0.537 ms/op
                 gc.alloc.rate:       2226.300 MB/sec
                 gc.alloc.rate.norm:  1289480.305 B/op
                 gc.count:            156.000 counts
                 gc.time:             113.000 ms
                 heap.memory.used.mb: 49.302 MB

Iteration   2: 0.474 ms/op
                 gc.alloc.rate:       2513.311 MB/sec
                 gc.alloc.rate.norm:  1285998.865 B/op
                 gc.count:            179.000 counts
                 gc.time:             116.000 ms
                 heap.memory.used.mb: 10.700 MB

Iteration   3: 0.475 ms/op
                 gc.alloc.rate:       2506.648 MB/sec
                 gc.alloc.rate.norm:  1285991.991 B/op
                 gc.count:            183.000 counts
                 gc.time:             116.000 ms
                 heap.memory.used.mb: 60.181 MB

Iteration   4: 0.476 ms/op
                 gc.alloc.rate:       2504.425 MB/sec
                 gc.alloc.rate.norm:  1285992.605 B/op
                 gc.count:            183.000 counts
                 gc.time:             114.000 ms
                 heap.memory.used.mb: 51.183 MB

Iteration   5: 0.473 ms/op
                 gc.alloc.rate:       2522.504 MB/sec
                 gc.alloc.rate.norm:  1285991.476 B/op
                 gc.count:            119.000 counts
                 gc.time:             84.000 ms
                 heap.memory.used.mb: 30.638 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax":
  0.487 ±(99.9%) 0.107 ms/op [Average]
  (min, avg, max) = (0.473, 0.487, 0.537), stdev = 0.028
  CI (99.9%): [0.379, 0.594] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate":
  2454.637 ±(99.9%) 492.258 MB/sec [Average]
  (min, avg, max) = (2226.300, 2454.637, 2522.504), stdev = 127.838
  CI (99.9%): [1962.379, 2946.896] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate.norm":
  1286691.048 ±(99.9%) 6004.096 B/op [Average]
  (min, avg, max) = (1285991.476, 1286691.048, 1289480.305), stdev = 1559.245
  CI (99.9%): [1280686.953, 1292695.144] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.count":
  820.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (119.000, 164.000, 183.000), stdev = 27.550
  CI (99.9%): [820.000, 820.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.time":
  543.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (84.000, 108.600, 116.000), stdev = 13.813
  CI (99.9%): [543.000, 543.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:heap.memory.used.mb":
  40.401 ±(99.9%) 76.147 MB [Average]
  (min, avg, max) = (10.700, 40.401, 60.181), stdev = 19.775
  CI (99.9%): [≈ 0, 116.548] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./benchmark-heapdump.hprof
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax
# Parameters: (excelDataRowSize = 100)

# Run progress: 77.78% complete, ETA 00:22:11
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 5.209 ms/op
Iteration   1: 1.759 ms/op
                 gc.alloc.rate:       3325.911 MB/sec
                 gc.alloc.rate.norm:  6311837.217 B/op
                 gc.count:            199.000 counts
                 gc.time:             131.000 ms
                 heap.memory.used.mb: 36.189 MB

Iteration   2: 1.648 ms/op
                 gc.alloc.rate:       3541.263 MB/sec
                 gc.alloc.rate.norm:  6307463.776 B/op
                 gc.count:            199.000 counts
                 gc.time:             128.000 ms
                 heap.memory.used.mb: 52.582 MB

Iteration   3: 1.637 ms/op
                 gc.alloc.rate:       3573.826 MB/sec
                 gc.alloc.rate.norm:  6306851.732 B/op
                 gc.count:            213.000 counts
                 gc.time:             125.000 ms
                 heap.memory.used.mb: 82.992 MB

Iteration   4: 1.623 ms/op
                 gc.alloc.rate:       3596.875 MB/sec
                 gc.alloc.rate.norm:  6306737.863 B/op
                 gc.count:            213.000 counts
                 gc.time:             129.000 ms
                 heap.memory.used.mb: 38.489 MB

Iteration   5: 1.625 ms/op
                 gc.alloc.rate:       3600.197 MB/sec
                 gc.alloc.rate.norm:  6306757.981 B/op
                 gc.count:            215.000 counts
                 gc.time:             118.000 ms
                 heap.memory.used.mb: 21.077 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 79.17% complete, ETA 00:20:42
# Fork: 1 of 1
# Warmup Iteration   1: 5.517 ms/op
Iteration   1: 1.748 ms/op
                 gc.alloc.rate:       3348.048 MB/sec
                 gc.alloc.rate.norm:  6312975.687 B/op
                 gc.count:            207.000 counts
                 gc.time:             128.000 ms
                 heap.memory.used.mb: 64.717 MB

Iteration   2: 1.693 ms/op
                 gc.alloc.rate:       3455.823 MB/sec
                 gc.alloc.rate.norm:  6305278.776 B/op
                 gc.count:            205.000 counts
                 gc.time:             126.000 ms
                 heap.memory.used.mb: 6.467 MB

Iteration   3: 1.605 ms/op
                 gc.alloc.rate:       3640.907 MB/sec
                 gc.alloc.rate.norm:  6304712.821 B/op
                 gc.count:            213.000 counts
                 gc.time:             124.000 ms
                 heap.memory.used.mb: 21.074 MB

Iteration   4: 1.591 ms/op
                 gc.alloc.rate:       3690.064 MB/sec
                 gc.alloc.rate.norm:  6304532.413 B/op
                 gc.count:            215.000 counts
                 gc.time:             96.000 ms
                 heap.memory.used.mb: 3.725 MB

Iteration   5: 1.593 ms/op
                 gc.alloc.rate:       3668.079 MB/sec
                 gc.alloc.rate.norm:  6304510.279 B/op
                 gc.count:            214.000 counts
                 gc.time:             119.000 ms
                 heap.memory.used.mb: 78.443 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax":
  1.646 ±(99.9%) 0.273 ms/op [Average]
  (min, avg, max) = (1.591, 1.646, 1.748), stdev = 0.071
  CI (99.9%): [1.373, 1.919] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate":
  3560.584 ±(99.9%) 580.536 MB/sec [Average]
  (min, avg, max) = (3348.048, 3560.584, 3690.064), stdev = 150.763
  CI (99.9%): [2980.048, 4141.121] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate.norm":
  6306401.995 ±(99.9%) 14200.771 B/op [Average]
  (min, avg, max) = (6304510.279, 6306401.995, 6312975.687), stdev = 3687.895
  CI (99.9%): [6292201.225, 6320602.766] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.count":
  1054.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (205.000, 210.800, 215.000), stdev = 4.494
  CI (99.9%): [1054.000, 1054.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.time":
  593.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (96.000, 118.600, 128.000), stdev = 13.069
  CI (99.9%): [593.000, 593.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:heap.memory.used.mb":
  34.885 ±(99.9%) 132.785 MB [Average]
  (min, avg, max) = (3.725, 34.885, 78.443), stdev = 34.484
  CI (99.9%): [≈ 0, 167.670] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./benchmark-heapdump.hprof
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax
# Parameters: (excelDataRowSize = 500)

# Run progress: 80.56% complete, ETA 00:19:15
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 72.114 ms/op
Iteration   1: 7.906 ms/op
                 gc.alloc.rate:       3121.331 MB/sec
                 gc.alloc.rate.norm:  26588119.634 B/op
                 gc.count:            168.000 counts
                 gc.time:             122.000 ms
                 heap.memory.used.mb: 38.723 MB

Iteration   2: 7.022 ms/op
                 gc.alloc.rate:       3505.536 MB/sec
                 gc.alloc.rate.norm:  26565927.405 B/op
                 gc.count:            195.000 counts
                 gc.time:             133.000 ms
                 heap.memory.used.mb: 14.216 MB

Iteration   3: 6.728 ms/op
                 gc.alloc.rate:       3663.242 MB/sec
                 gc.alloc.rate.norm:  26565268.344 B/op
                 gc.count:            218.000 counts
                 gc.time:             120.000 ms
                 heap.memory.used.mb: 86.152 MB

Iteration   4: 6.760 ms/op
                 gc.alloc.rate:       3644.836 MB/sec
                 gc.alloc.rate.norm:  26565061.582 B/op
                 gc.count:            215.000 counts
                 gc.time:             124.000 ms
                 heap.memory.used.mb: 66.648 MB

Iteration   5: 6.790 ms/op
                 gc.alloc.rate:       3624.370 MB/sec
                 gc.alloc.rate.norm:  26564963.626 B/op
                 gc.count:            214.000 counts
                 gc.time:             131.000 ms
                 heap.memory.used.mb: 53.533 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 81.94% complete, ETA 00:17:48
# Fork: 1 of 1
# Warmup Iteration   1: 29.594 ms/op
Iteration   1: 7.483 ms/op
                 gc.alloc.rate:       3295.302 MB/sec
                 gc.alloc.rate.norm:  26590245.776 B/op
                 gc.count:            182.000 counts
                 gc.time:             122.000 ms
                 heap.memory.used.mb: 22.127 MB

Iteration   2: 6.931 ms/op
                 gc.alloc.rate:       3553.656 MB/sec
                 gc.alloc.rate.norm:  26559659.291 B/op
                 gc.count:            212.000 counts
                 gc.time:             124.000 ms
                 heap.memory.used.mb: 58.206 MB

Iteration   3: 6.896 ms/op
                 gc.alloc.rate:       3567.442 MB/sec
                 gc.alloc.rate.norm:  26557909.212 B/op
                 gc.count:            211.000 counts
                 gc.time:             131.000 ms
                 heap.memory.used.mb: 29.037 MB

Iteration   4: 6.931 ms/op
                 gc.alloc.rate:       3549.531 MB/sec
                 gc.alloc.rate.norm:  26557797.046 B/op
                 gc.count:            194.000 counts
                 gc.time:             130.000 ms
                 heap.memory.used.mb: 14.264 MB

Iteration   5: 6.967 ms/op
                 gc.alloc.rate:       3525.246 MB/sec
                 gc.alloc.rate.norm:  26557360.256 B/op
                 gc.count:            190.000 counts
                 gc.time:             138.000 ms
                 heap.memory.used.mb: 92.441 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax":
  7.042 ±(99.9%) 0.955 ms/op [Average]
  (min, avg, max) = (6.896, 7.042, 7.483), stdev = 0.248
  CI (99.9%): [6.087, 7.996] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate":
  3498.235 ±(99.9%) 440.742 MB/sec [Average]
  (min, avg, max) = (3295.302, 3498.235, 3567.442), stdev = 114.459
  CI (99.9%): [3057.494, 3938.977] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate.norm":
  26564594.316 ±(99.9%) 55319.998 B/op [Average]
  (min, avg, max) = (26557360.256, 26564594.316, 26590245.776), stdev = 14366.428
  CI (99.9%): [26509274.318, 26619914.314] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.count":
  989.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (182.000, 197.800, 212.000), stdev = 13.236
  CI (99.9%): [989.000, 989.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.time":
  645.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (122.000, 129.000, 138.000), stdev = 6.325
  CI (99.9%): [645.000, 645.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:heap.memory.used.mb":
  43.215 ±(99.9%) 123.757 MB [Average]
  (min, avg, max) = (14.264, 43.215, 92.441), stdev = 32.139
  CI (99.9%): [≈ 0, 166.972] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./benchmark-heapdump.hprof
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax
# Parameters: (excelDataRowSize = 1000)

# Run progress: 83.33% complete, ETA 00:16:22
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 53.185 ms/op
Iteration   1: 16.531 ms/op
                 gc.alloc.rate:       2916.290 MB/sec
                 gc.alloc.rate.norm:  51937046.020 B/op
                 gc.count:            173.000 counts
                 gc.time:             136.000 ms
                 heap.memory.used.mb: 9.780 MB

Iteration   2: 15.550 ms/op
                 gc.alloc.rate:       3106.592 MB/sec
                 gc.alloc.rate.norm:  51917770.932 B/op
                 gc.count:            171.000 counts
                 gc.time:             117.000 ms
                 heap.memory.used.mb: 91.980 MB

Iteration   3: 14.873 ms/op
                 gc.alloc.rate:       3236.897 MB/sec
                 gc.alloc.rate.norm:  51909303.003 B/op
                 gc.count:            188.000 counts
                 gc.time:             134.000 ms
                 heap.memory.used.mb: 27.121 MB

Iteration   4: 14.077 ms/op
                 gc.alloc.rate:       3407.202 MB/sec
                 gc.alloc.rate.norm:  51909311.191 B/op
                 gc.count:            184.000 counts
                 gc.time:             143.000 ms
                 heap.memory.used.mb: 98.516 MB

Iteration   5: 13.955 ms/op
                 gc.alloc.rate:       3447.348 MB/sec
                 gc.alloc.rate.norm:  51908937.270 B/op
                 gc.count:            190.000 counts
                 gc.time:             126.000 ms
                 heap.memory.used.mb: 26.675 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 84.72% complete, ETA 00:14:57
# Fork: 1 of 1
# Warmup Iteration   1: 43.752 ms/op
Iteration   1: 14.686 ms/op
                 gc.alloc.rate:       3288.464 MB/sec
                 gc.alloc.rate.norm:  51936468.528 B/op
                 gc.count:            196.000 counts
                 gc.time:             112.000 ms
                 heap.memory.used.mb: 46.510 MB

Iteration   2: 14.358 ms/op
                 gc.alloc.rate:       3352.311 MB/sec
                 gc.alloc.rate.norm:  51915707.209 B/op
                 gc.count:            201.000 counts
                 gc.time:             131.000 ms
                 heap.memory.used.mb: 19.486 MB

Iteration   3: 14.244 ms/op
                 gc.alloc.rate:       3381.207 MB/sec
                 gc.alloc.rate.norm:  51909236.773 B/op
                 gc.count:            202.000 counts
                 gc.time:             127.000 ms
                 heap.memory.used.mb: 72.985 MB

Iteration   4: 14.040 ms/op
                 gc.alloc.rate:       3426.185 MB/sec
                 gc.alloc.rate.norm:  51909292.034 B/op
                 gc.count:            197.000 counts
                 gc.time:             126.000 ms
                 heap.memory.used.mb: 10.146 MB

Iteration   5: 13.986 ms/op
                 gc.alloc.rate:       3440.057 MB/sec
                 gc.alloc.rate.norm:  51908835.017 B/op
                 gc.count:            201.000 counts
                 gc.time:             125.000 ms
                 heap.memory.used.mb: 77.009 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax":
  14.263 ±(99.9%) 1.080 ms/op [Average]
  (min, avg, max) = (13.986, 14.263, 14.686), stdev = 0.281
  CI (99.9%): [13.183, 15.343] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate":
  3377.645 ±(99.9%) 234.693 MB/sec [Average]
  (min, avg, max) = (3288.464, 3377.645, 3440.057), stdev = 60.949
  CI (99.9%): [3142.952, 3612.337] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate.norm":
  51915907.912 ±(99.9%) 45605.306 B/op [Average]
  (min, avg, max) = (51908835.017, 51915907.912, 51936468.528), stdev = 11843.553
  CI (99.9%): [51870302.606, 51961513.218] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.count":
  997.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (196.000, 199.400, 202.000), stdev = 2.702
  CI (99.9%): [997.000, 997.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.time":
  621.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (112.000, 124.200, 131.000), stdev = 7.190
  CI (99.9%): [621.000, 621.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:heap.memory.used.mb":
  45.227 ±(99.9%) 116.725 MB [Average]
  (min, avg, max) = (10.146, 45.227, 77.009), stdev = 30.313
  CI (99.9%): [≈ 0, 161.952] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./benchmark-heapdump.hprof
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax
# Parameters: (excelDataRowSize = 5000)

# Run progress: 86.11% complete, ETA 00:13:32
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 205.896 ms/op
Iteration   1: 89.657 ms/op
                 gc.alloc.rate:       2636.473 MB/sec
                 gc.alloc.rate.norm:  254356983.286 B/op
                 gc.count:            160.000 counts
                 gc.time:             102.000 ms
                 heap.memory.used.mb: 6.898 MB

Iteration   2: 96.725 ms/op
                 gc.alloc.rate:       2437.459 MB/sec
                 gc.alloc.rate.norm:  254350802.923 B/op
                 gc.count:            337.000 counts
                 gc.time:             239.000 ms
                 heap.memory.used.mb: 25.356 MB

Iteration   3: 96.498 ms/op
                 gc.alloc.rate:       2443.722 MB/sec
                 gc.alloc.rate.norm:  254343377.692 B/op
                 gc.count:            311.000 counts
                 gc.time:             229.000 ms
                 heap.memory.used.mb: 24.616 MB

Iteration   4: 96.141 ms/op
                 gc.alloc.rate:       2454.029 MB/sec
                 gc.alloc.rate.norm:  254336215.547 B/op
                 gc.count:            311.000 counts
                 gc.time:             227.000 ms
                 heap.memory.used.mb: 113.510 MB

Iteration   5: 95.070 ms/op
                 gc.alloc.rate:       2489.092 MB/sec
                 gc.alloc.rate.norm:  254331755.019 B/op
                 gc.count:            299.000 counts
                 gc.time:             209.000 ms
                 heap.memory.used.mb: 47.422 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 87.50% complete, ETA 00:12:08
# Fork: 1 of 1
# Warmup Iteration   1: 218.079 ms/op
Iteration   1: 94.254 ms/op
                 gc.alloc.rate:       2502.710 MB/sec
                 gc.alloc.rate.norm:  254199630.519 B/op
                 gc.count:            154.000 counts
                 gc.time:             115.000 ms
                 heap.memory.used.mb: 19.688 MB

Iteration   2: 100.799 ms/op
                 gc.alloc.rate:       2337.915 MB/sec
                 gc.alloc.rate.norm:  254192602.240 B/op
                 gc.count:            279.000 counts
                 gc.time:             206.000 ms
                 heap.memory.used.mb: 20.414 MB

Iteration   3: 96.029 ms/op
                 gc.alloc.rate:       2454.778 MB/sec
                 gc.alloc.rate.norm:  254183755.925 B/op
                 gc.count:            150.000 counts
                 gc.time:             120.000 ms
                 heap.memory.used.mb: 100.682 MB

Iteration   4: 95.655 ms/op
                 gc.alloc.rate:       2462.934 MB/sec
                 gc.alloc.rate.norm:  254176686.792 B/op
                 gc.count:            138.000 counts
                 gc.time:             113.000 ms
                 heap.memory.used.mb: 8.736 MB

Iteration   5: 94.493 ms/op
                 gc.alloc.rate:       2494.805 MB/sec
                 gc.alloc.rate.norm:  254172932.528 B/op
                 gc.count:            132.000 counts
                 gc.time:             103.000 ms
                 heap.memory.used.mb: 31.110 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#68,DestroyJavaVM,5,main]

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax":
  96.246 ±(99.9%) 10.219 ms/op [Average]
  (min, avg, max) = (94.254, 96.246, 100.799), stdev = 2.654
  CI (99.9%): [86.027, 106.465] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate":
  2450.628 ±(99.9%) 254.965 MB/sec [Average]
  (min, avg, max) = (2337.915, 2450.628, 2502.710), stdev = 66.213
  CI (99.9%): [2195.664, 2705.593] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate.norm":
  254185121.601 ±(99.9%) 42534.071 B/op [Average]
  (min, avg, max) = (254172932.528, 254185121.601, 254199630.519), stdev = 11045.963
  CI (99.9%): [254142587.530, 254227655.672] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.count":
  853.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (132.000, 170.600, 279.000), stdev = 61.244
  CI (99.9%): [853.000, 853.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.time":
  657.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (103.000, 131.400, 206.000), stdev = 42.158
  CI (99.9%): [657.000, 657.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:heap.memory.used.mb":
  36.126 ±(99.9%) 142.264 MB [Average]
  (min, avg, max) = (8.736, 36.126, 100.682), stdev = 36.945
  CI (99.9%): [≈ 0, 178.390] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./benchmark-heapdump.hprof
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax
# Parameters: (excelDataRowSize = 10000)

# Run progress: 88.89% complete, ETA 00:10:45
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 516.187 ms/op
Iteration   1: 223.060 ms/op
                 gc.alloc.rate:       2110.884 MB/sec
                 gc.alloc.rate.norm:  507499537.043 B/op
                 gc.count:            232.000 counts
                 gc.time:             164.000 ms
                 heap.memory.used.mb: 10.001 MB

Iteration   2: 223.179 ms/op
                 gc.alloc.rate:       2113.960 MB/sec
                 gc.alloc.rate.norm:  507474174.609 B/op
                 gc.count:            223.000 counts
                 gc.time:             154.000 ms
                 heap.memory.used.mb: 56.751 MB

Iteration   3: 217.869 ms/op
                 gc.alloc.rate:       2163.795 MB/sec
                 gc.alloc.rate.norm:  507472190.261 B/op
                 gc.count:            130.000 counts
                 gc.time:             96.000 ms
                 heap.memory.used.mb: 55.580 MB

Iteration   4: 221.900 ms/op
                 gc.alloc.rate:       2122.298 MB/sec
                 gc.alloc.rate.norm:  507470303.652 B/op
                 gc.count:            208.000 counts
                 gc.time:             156.000 ms
                 heap.memory.used.mb: 56.024 MB

Iteration   5: 222.311 ms/op
                 gc.alloc.rate:       2116.112 MB/sec
                 gc.alloc.rate.norm:  507466443.478 B/op
                 gc.count:            201.000 counts
                 gc.time:             160.000 ms
                 heap.memory.used.mb: 19.993 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 90.28% complete, ETA 00:09:23
# Fork: 1 of 1
# Warmup Iteration   1: 535.840 ms/op
Iteration   1: 224.908 ms/op
                 gc.alloc.rate:       2094.837 MB/sec
                 gc.alloc.rate.norm:  507505470.261 B/op
                 gc.count:            240.000 counts
                 gc.time:             172.000 ms
                 heap.memory.used.mb: 56.106 MB

Iteration   2: 221.410 ms/op
                 gc.alloc.rate:       2125.916 MB/sec
                 gc.alloc.rate.norm:  507474201.739 B/op
                 gc.count:            216.000 counts
                 gc.time:             158.000 ms
                 heap.memory.used.mb: 107.951 MB

Iteration   3: 217.386 ms/op
                 gc.alloc.rate:       2167.604 MB/sec
                 gc.alloc.rate.norm:  507472256.333 B/op
                 gc.count:            127.000 counts
                 gc.time:             99.000 ms
                 heap.memory.used.mb: 53.726 MB

Iteration   4: 222.723 ms/op
                 gc.alloc.rate:       2115.284 MB/sec
                 gc.alloc.rate.norm:  507470122.087 B/op
                 gc.count:            227.000 counts
                 gc.time:             166.000 ms
                 heap.memory.used.mb: 56.631 MB

Iteration   5: 224.630 ms/op
                 gc.alloc.rate:       2096.252 MB/sec
                 gc.alloc.rate.norm:  507466801.391 B/op
                 gc.count:            222.000 counts
                 gc.time:             169.000 ms
                 heap.memory.used.mb: 56.030 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax":
  222.211 ±(99.9%) 11.760 ms/op [Average]
  (min, avg, max) = (217.386, 222.211, 224.908), stdev = 3.054
  CI (99.9%): [210.452, 233.971] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate":
  2119.979 ±(99.9%) 114.236 MB/sec [Average]
  (min, avg, max) = (2094.837, 2119.979, 2167.604), stdev = 29.667
  CI (99.9%): [2005.742, 2234.215] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate.norm":
  507477770.362 ±(99.9%) 60555.536 B/op [Average]
  (min, avg, max) = (507466801.391, 507477770.362, 507505470.261), stdev = 15726.080
  CI (99.9%): [507417214.827, 507538325.898] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.count":
  1032.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (127.000, 206.400, 240.000), stdev = 45.258
  CI (99.9%): [1032.000, 1032.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.time":
  764.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (99.000, 152.800, 172.000), stdev = 30.524
  CI (99.9%): [764.000, 764.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:heap.memory.used.mb":
  66.089 ±(99.9%) 90.215 MB [Average]
  (min, avg, max) = (53.726, 66.089, 107.951), stdev = 23.428
  CI (99.9%): [≈ 0, 156.304] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./benchmark-heapdump.hprof
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax
# Parameters: (excelDataRowSize = 15000)

# Run progress: 91.67% complete, ETA 00:08:01
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 668.650 ms/op
Iteration   1: 399.968 ms/op
                 gc.alloc.rate:       1777.304 MB/sec
                 gc.alloc.rate.norm:  762791449.846 B/op
                 gc.count:            196.000 counts
                 gc.time:             127.000 ms
                 heap.memory.used.mb: 107.904 MB

Iteration   2: 395.410 ms/op
                 gc.alloc.rate:       1792.832 MB/sec
                 gc.alloc.rate.norm:  762715825.846 B/op
                 gc.count:            189.000 counts
                 gc.time:             138.000 ms
                 heap.memory.used.mb: 107.930 MB

Iteration   3: 394.422 ms/op
                 gc.alloc.rate:       1796.744 MB/sec
                 gc.alloc.rate.norm:  762714489.846 B/op
                 gc.count:            189.000 counts
                 gc.time:             139.000 ms
                 heap.memory.used.mb: 95.614 MB

Iteration   4: 391.218 ms/op
                 gc.alloc.rate:       1808.381 MB/sec
                 gc.alloc.rate.norm:  762716776.000 B/op
                 gc.count:            185.000 counts
                 gc.time:             142.000 ms
                 heap.memory.used.mb: 95.103 MB

Iteration   5: 401.785 ms/op
                 gc.alloc.rate:       1767.746 MB/sec
                 gc.alloc.rate.norm:  762714368.000 B/op
                 gc.count:            186.000 counts
                 gc.time:             137.000 ms
                 heap.memory.used.mb: 95.210 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 93.06% complete, ETA 00:06:39
# Fork: 1 of 1
# Warmup Iteration   1: 1027.490 ms/op
Iteration   1: 396.745 ms/op
                 gc.alloc.rate:       1786.091 MB/sec
                 gc.alloc.rate.norm:  763191863.385 B/op
                 gc.count:            171.000 counts
                 gc.time:             129.000 ms
                 heap.memory.used.mb: 81.115 MB

Iteration   2: 383.802 ms/op
                 gc.alloc.rate:       1847.698 MB/sec
                 gc.alloc.rate.norm:  762716226.857 B/op
                 gc.count:            183.000 counts
                 gc.time:             134.000 ms
                 heap.memory.used.mb: 95.807 MB

Iteration   3: 389.918 ms/op
                 gc.alloc.rate:       1814.535 MB/sec
                 gc.alloc.rate.norm:  762714908.308 B/op
                 gc.count:            173.000 counts
                 gc.time:             139.000 ms
                 heap.memory.used.mb: 75.707 MB

Iteration   4: 386.963 ms/op
                 gc.alloc.rate:       1828.080 MB/sec
                 gc.alloc.rate.norm:  762717353.231 B/op
                 gc.count:            177.000 counts
                 gc.time:             142.000 ms
                 heap.memory.used.mb: 70.854 MB

Iteration   5: 406.216 ms/op
                 gc.alloc.rate:       1746.342 MB/sec
                 gc.alloc.rate.norm:  762714904.615 B/op
                 gc.count:            184.000 counts
                 gc.time:             142.000 ms
                 heap.memory.used.mb: 95.142 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax":
  392.729 ±(99.9%) 34.380 ms/op [Average]
  (min, avg, max) = (383.802, 392.729, 406.216), stdev = 8.928
  CI (99.9%): [358.348, 427.109] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate":
  1804.549 ±(99.9%) 152.137 MB/sec [Average]
  (min, avg, max) = (1746.342, 1804.549, 1847.698), stdev = 39.509
  CI (99.9%): [1652.413, 1956.686] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate.norm":
  762811051.279 ±(99.9%) 819736.225 B/op [Average]
  (min, avg, max) = (762714904.615, 762811051.279, 763191863.385), stdev = 212882.894
  CI (99.9%): [761991315.054, 763630787.504] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.count":
  888.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (171.000, 177.600, 184.000), stdev = 5.814
  CI (99.9%): [888.000, 888.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.time":
  686.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (129.000, 137.200, 142.000), stdev = 5.630
  CI (99.9%): [686.000, 686.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:heap.memory.used.mb":
  83.725 ±(99.9%) 43.612 MB [Average]
  (min, avg, max) = (70.854, 83.725, 95.807), stdev = 11.326
  CI (99.9%): [40.113, 127.337] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./benchmark-heapdump.hprof
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax
# Parameters: (excelDataRowSize = 100000)

# Run progress: 94.44% complete, ETA 00:05:19
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 10017.722 ms/op
Iteration   1: 9343.773 ms/op
                 gc.alloc.rate:       511.958 MB/sec
                 gc.alloc.rate.norm:  5091358968.000 B/op
                 gc.count:            132.000 counts
                 gc.time:             111.000 ms
                 heap.memory.used.mb: 71.042 MB

Iteration   2: 9447.926 ms/op
                 gc.alloc.rate:       506.055 MB/sec
                 gc.alloc.rate.norm:  5088918328.000 B/op
                 gc.count:            106.000 counts
                 gc.time:             99.000 ms
                 heap.memory.used.mb: 45.603 MB

Iteration   3: 9246.149 ms/op
                 gc.alloc.rate:       517.570 MB/sec
                 gc.alloc.rate.norm:  5088917072.000 B/op
                 gc.count:            104.000 counts
                 gc.time:             85.000 ms
                 heap.memory.used.mb: 41.735 MB

Iteration   4: 9229.106 ms/op
                 gc.alloc.rate:       517.827 MB/sec
                 gc.alloc.rate.norm:  5088923360.000 B/op
                 gc.count:            104.000 counts
                 gc.time:             100.000 ms
                 heap.memory.used.mb: 42.563 MB

Iteration   5: 9425.504 ms/op
                 gc.alloc.rate:       507.158 MB/sec
                 gc.alloc.rate.norm:  5088917424.000 B/op
                 gc.count:            99.000 counts
                 gc.time:             98.000 ms
                 heap.memory.used.mb: 83.299 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 95.83% complete, ETA 00:03:59
# Fork: 1 of 1
# Warmup Iteration   1: 9876.916 ms/op
Iteration   1: 9589.999 ms/op
                 gc.alloc.rate:       498.966 MB/sec
                 gc.alloc.rate.norm:  5092184968.000 B/op
                 gc.count:            132.000 counts
                 gc.time:             117.000 ms
                 heap.memory.used.mb: 65.471 MB

Iteration   2: 9400.010 ms/op
                 gc.alloc.rate:       508.469 MB/sec
                 gc.alloc.rate.norm:  5088918488.000 B/op
                 gc.count:            128.000 counts
                 gc.time:             112.000 ms
                 heap.memory.used.mb: 42.119 MB

Iteration   3: 9434.026 ms/op
                 gc.alloc.rate:       506.784 MB/sec
                 gc.alloc.rate.norm:  5088916976.000 B/op
                 gc.count:            127.000 counts
                 gc.time:             111.000 ms
                 heap.memory.used.mb: 108.003 MB

Iteration   4: 9439.603 ms/op
                 gc.alloc.rate:       506.549 MB/sec
                 gc.alloc.rate.norm:  5088923128.000 B/op
                 gc.count:            100.000 counts
                 gc.time:             96.000 ms
                 heap.memory.used.mb: 82.251 MB

Iteration   5: 9578.206 ms/op
                 gc.alloc.rate:       499.419 MB/sec
                 gc.alloc.rate.norm:  5088917480.000 B/op
                 gc.count:            126.000 counts
                 gc.time:             112.000 ms
                 heap.memory.used.mb: 88.514 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax":
  9488.369 ±(99.9%) 341.916 ms/op [Average]
  (min, avg, max) = (9400.010, 9488.369, 9589.999), stdev = 88.794
  CI (99.9%): [9146.453, 9830.284] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate":
  504.037 ±(99.9%) 17.279 MB/sec [Average]
  (min, avg, max) = (498.966, 504.037, 508.469), stdev = 4.487
  CI (99.9%): [486.759, 521.316] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate.norm":
  5089572208.000 ±(99.9%) 5624170.703 B/op [Average]
  (min, avg, max) = (5088916976.000, 5089572208.000, 5092184968.000), stdev = 1460579.271
  CI (99.9%): [5083948037.297, 5095196378.703] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.count":
  613.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (100.000, 122.600, 132.000), stdev = 12.837
  CI (99.9%): [613.000, 613.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.time":
  548.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (96.000, 109.600, 117.000), stdev = 7.956
  CI (99.9%): [548.000, 548.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:heap.memory.used.mb":
  77.272 ±(99.9%) 95.698 MB [Average]
  (min, avg, max) = (42.119, 77.272, 108.003), stdev = 24.853
  CI (99.9%): [≈ 0, 172.970] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.3, OpenJDK 64-Bit Server VM, 21.0.3+9-LTS
# VM invoker: /Library/Java/JavaVirtualMachines/zulu-21.jdk/Contents/Home/bin/java
# VM options: -Xmx1024m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=./benchmark-heapdump.hprof
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 1 iterations, 1 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax
# Parameters: (excelDataRowSize = 150000)

# Run progress: 97.22% complete, ETA 00:02:40
# Warmup Fork: 1 of 1
# Warmup Iteration   1: 20473.608 ms/op
Iteration   1: 19449.730 ms/op
                 gc.alloc.rate:       370.031 MB/sec
                 gc.alloc.rate.norm:  7601126896.000 B/op
                 gc.count:            198.000 counts
                 gc.time:             158.000 ms
                 heap.memory.used.mb: 72.163 MB

Iteration   2: 19250.325 ms/op
                 gc.alloc.rate:       373.723 MB/sec
                 gc.alloc.rate.norm:  7597167536.000 B/op
                 gc.count:            189.000 counts
                 gc.time:             149.000 ms
                 heap.memory.used.mb: 90.329 MB

Iteration   3: 19022.993 ms/op
                 gc.alloc.rate:       378.239 MB/sec
                 gc.alloc.rate.norm:  7597166472.000 B/op
                 gc.count:            189.000 counts
                 gc.time:             143.000 ms
                 heap.memory.used.mb: 89.847 MB

Iteration   4: 19064.531 ms/op
                 gc.alloc.rate:       377.313 MB/sec
                 gc.alloc.rate.norm:  7597181272.000 B/op
                 gc.count:            192.000 counts
                 gc.time:             150.000 ms
                 heap.memory.used.mb: 118.328 MB

Iteration   5: 19269.737 ms/op
                 gc.alloc.rate:       373.326 MB/sec
                 gc.alloc.rate.norm:  7597197712.000 B/op
                 gc.count:            192.000 counts
                 gc.time:             150.000 ms
                 heap.memory.used.mb: 89.213 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#68,DestroyJavaVM,5,main]


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>

# Run progress: 98.61% complete, ETA 00:01:21
# Fork: 1 of 1
# Warmup Iteration   1: 20230.910 ms/op
Iteration   1: 19373.397 ms/op
                 gc.alloc.rate:       371.850 MB/sec
                 gc.alloc.rate.norm:  7602004168.000 B/op
                 gc.count:            205.000 counts
                 gc.time:             146.000 ms
                 heap.memory.used.mb: 73.572 MB

Iteration   2: 19153.586 ms/op
                 gc.alloc.rate:       375.697 MB/sec
                 gc.alloc.rate.norm:  7599541264.000 B/op
                 gc.count:            191.000 counts
                 gc.time:             152.000 ms
                 heap.memory.used.mb: 96.236 MB

Iteration   3: 19225.617 ms/op
                 gc.alloc.rate:       374.231 MB/sec
                 gc.alloc.rate.norm:  7599540256.000 B/op
                 gc.count:            192.000 counts
                 gc.time:             154.000 ms
                 heap.memory.used.mb: 124.372 MB

Iteration   4: 19445.336 ms/op
                 gc.alloc.rate:       370.004 MB/sec
                 gc.alloc.rate.norm:  7599565552.000 B/op
                 gc.count:            189.000 counts
                 gc.time:             159.000 ms
                 heap.memory.used.mb: 94.274 MB

Iteration   5: 19317.978 ms/op
                 gc.alloc.rate:       372.483 MB/sec
                 gc.alloc.rate.norm:  7599560984.000 B/op
                 gc.count:            195.000 counts
                 gc.time:             155.000 ms
                 heap.memory.used.mb: 125.341 MB

<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 24 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 19 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 14 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 9 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 4 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<JMH had finished, but forked VM did not exit, are there stray running threads? Waiting 0 seconds more...>

Non-finished threads:

Thread[#42,container-0,5,main]
  at java.base@21.0.3/java.lang.Thread.sleep0(Native Method)
  at java.base@21.0.3/java.lang.Thread.sleep(Thread.java:509)
  at app//org.apache.catalina.core.StandardServer.await(StandardServer.java:520)
  at app//org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run(TomcatWebServer.java:219)

Thread[#41,Catalina-utility-2,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1758)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)

Thread[#68,DestroyJavaVM,5,main]

Thread[#40,Catalina-utility-1,1,main]
  at java.base@21.0.3/jdk.internal.misc.Unsafe.park(Native Method)
  at java.base@21.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:371)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:519)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3780)
  at java.base@21.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3725)
  at java.base@21.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1707)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1177)
  at java.base@21.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
  at java.base@21.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
  at app//org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
  at java.base@21.0.3/java.lang.Thread.runWith(Thread.java:1596)
  at java.base@21.0.3/java.lang.Thread.run(Thread.java:1583)


<shutdown timeout of 30 seconds expired, forcing forked VM to exit>


Result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax":
  19303.183 ±(99.9%) 446.376 ms/op [Average]
  (min, avg, max) = (19153.586, 19303.183, 19445.336), stdev = 115.922
  CI (99.9%): [18856.807, 19749.558] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate":
  372.853 ±(99.9%) 8.446 MB/sec [Average]
  (min, avg, max) = (370.004, 372.853, 375.697), stdev = 2.194
  CI (99.9%): [364.406, 381.299] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.alloc.rate.norm":
  7600042444.800 ±(99.9%) 4222984.248 B/op [Average]
  (min, avg, max) = (7599540256.000, 7600042444.800, 7602004168.000), stdev = 1096695.599
  CI (99.9%): [7595819460.552, 7604265429.048] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.count":
  972.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (189.000, 194.400, 205.000), stdev = 6.309
  CI (99.9%): [972.000, 972.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:gc.time":
  766.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (146.000, 153.200, 159.000), stdev = 4.764
  CI (99.9%): [766.000, 766.000] (assumes normal distribution)

Secondary result "com.gmoon.springpoi.benchmark.ExcelSAXBenchmark.readSax:heap.memory.used.mb":
  102.759 ±(99.9%) 84.879 MB [Average]
  (min, avg, max) = (73.572, 102.759, 125.341), stdev = 22.043
  CI (99.9%): [17.880, 187.637] (assumes normal distribution)


# Run complete. Total time: 01:38:39

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                      (excelDataRowSize)   Mode  Cnt           Score         Error   Units
ExcelSAXBenchmark.readDom                                       1  thrpt    5           0.886 ±       0.265  ops/ms
ExcelSAXBenchmark.readDom:gc.alloc.rate                         1  thrpt    5        1640.457 ±     486.873  MB/sec
ExcelSAXBenchmark.readDom:gc.alloc.rate.norm                    1  thrpt    5     1994645.134 ±   15193.562    B/op
ExcelSAXBenchmark.readDom:gc.count                              1  thrpt    5         561.000                counts
ExcelSAXBenchmark.readDom:gc.time                               1  thrpt    5         419.000                    ms
ExcelSAXBenchmark.readDom:heap.memory.used.mb                   1  thrpt    5          43.097 ±      71.203      MB
ExcelSAXBenchmark.readDom                                     100  thrpt    5           0.399 ±       0.073  ops/ms
ExcelSAXBenchmark.readDom:gc.alloc.rate                       100  thrpt    5        2640.296 ±     473.203  MB/sec
ExcelSAXBenchmark.readDom:gc.alloc.rate.norm                  100  thrpt    5     7131590.005 ±   31570.531    B/op
ExcelSAXBenchmark.readDom:gc.count                            100  thrpt    5         876.000                counts
ExcelSAXBenchmark.readDom:gc.time                             100  thrpt    5         585.000                    ms
ExcelSAXBenchmark.readDom:heap.memory.used.mb                 100  thrpt    5          27.817 ±      64.029      MB
ExcelSAXBenchmark.readDom                                     500  thrpt    5           0.112 ±       0.013  ops/ms
ExcelSAXBenchmark.readDom:gc.alloc.rate                       500  thrpt    5        2891.778 ±     336.298  MB/sec
ExcelSAXBenchmark.readDom:gc.alloc.rate.norm                  500  thrpt    5    27856264.931 ±   54924.481    B/op
ExcelSAXBenchmark.readDom:gc.count                            500  thrpt    5         673.000                counts
ExcelSAXBenchmark.readDom:gc.time                             500  thrpt    5         717.000                    ms
ExcelSAXBenchmark.readDom:heap.memory.used.mb                 500  thrpt    5          47.325 ±     139.891      MB
ExcelSAXBenchmark.readDom                                    1000  thrpt    5           0.056 ±       0.007  ops/ms
ExcelSAXBenchmark.readDom:gc.alloc.rate                      1000  thrpt    5        2801.444 ±     331.734  MB/sec
ExcelSAXBenchmark.readDom:gc.alloc.rate.norm                 1000  thrpt    5    53755259.736 ±  100107.292    B/op
ExcelSAXBenchmark.readDom:gc.count                           1000  thrpt    5         561.000                counts
ExcelSAXBenchmark.readDom:gc.time                            1000  thrpt    5         889.000                    ms
ExcelSAXBenchmark.readDom:heap.memory.used.mb                1000  thrpt    5          79.774 ±     164.586      MB
ExcelSAXBenchmark.readDom                                    5000  thrpt    5           0.007 ±       0.001  ops/ms
ExcelSAXBenchmark.readDom:gc.alloc.rate                      5000  thrpt    5        1714.631 ±      97.338  MB/sec
ExcelSAXBenchmark.readDom:gc.alloc.rate.norm                 5000  thrpt    5   263809845.098 ±  193840.730    B/op
ExcelSAXBenchmark.readDom:gc.count                           5000  thrpt    5         481.000                counts
ExcelSAXBenchmark.readDom:gc.time                            5000  thrpt    5        2102.000                    ms
ExcelSAXBenchmark.readDom:heap.memory.used.mb                5000  thrpt    5         188.500 ±     173.775      MB
ExcelSAXBenchmark.readDom                                   10000  thrpt    5           0.003 ±       0.001  ops/ms
ExcelSAXBenchmark.readDom:gc.alloc.rate                     10000  thrpt    5        1359.592 ±      95.817  MB/sec
ExcelSAXBenchmark.readDom:gc.alloc.rate.norm                10000  thrpt    5   525719189.112 ±  377170.550    B/op
ExcelSAXBenchmark.readDom:gc.count                          10000  thrpt    5         354.000                counts
ExcelSAXBenchmark.readDom:gc.time                           10000  thrpt    5        1837.000                    ms
ExcelSAXBenchmark.readDom:heap.memory.used.mb               10000  thrpt    5         171.370 ±      80.038      MB
ExcelSAXBenchmark.readDom                                   15000  thrpt    5           0.002 ±       0.001  ops/ms
ExcelSAXBenchmark.readDom:gc.alloc.rate                     15000  thrpt    5        1168.959 ±     115.792  MB/sec
ExcelSAXBenchmark.readDom:gc.alloc.rate.norm                15000  thrpt    5   789492498.289 ±  724003.101    B/op
ExcelSAXBenchmark.readDom:gc.count                          15000  thrpt    5         289.000                counts
ExcelSAXBenchmark.readDom:gc.time                           15000  thrpt    5        1732.000                    ms
ExcelSAXBenchmark.readDom:heap.memory.used.mb               15000  thrpt    5         368.738 ±     273.173      MB
ExcelSAXBenchmark.readDom                                  100000  thrpt    5          ≈ 10⁻⁴                ops/ms
ExcelSAXBenchmark.readDom:gc.alloc.rate                    100000  thrpt    5         349.447 ±      71.398  MB/sec
ExcelSAXBenchmark.readDom:gc.alloc.rate.norm               100000  thrpt    5  5267895936.000 ±  781209.545    B/op
ExcelSAXBenchmark.readDom:gc.count                         100000  thrpt    5         242.000                counts
ExcelSAXBenchmark.readDom:gc.time                          100000  thrpt    5        1361.000                    ms
ExcelSAXBenchmark.readDom:heap.memory.used.mb              100000  thrpt    5         748.346 ±     282.482      MB
ExcelSAXBenchmark.readDom                                  150000  thrpt    5          ≈ 10⁻⁴                ops/ms
ExcelSAXBenchmark.readDom:gc.alloc.rate                    150000  thrpt    5         250.560 ±      60.100  MB/sec
ExcelSAXBenchmark.readDom:gc.alloc.rate.norm               150000  thrpt    5  7864128262.400 ± 4672762.937    B/op
ExcelSAXBenchmark.readDom:gc.count                         150000  thrpt    5         848.000                counts
ExcelSAXBenchmark.readDom:gc.time                          150000  thrpt    5        4264.000                    ms
ExcelSAXBenchmark.readDom:heap.memory.used.mb              150000  thrpt    5         925.557 ±      20.490      MB
ExcelSAXBenchmark.readSax                                       1  thrpt    5           2.071 ±       0.440  ops/ms
ExcelSAXBenchmark.readSax:gc.alloc.rate                         1  thrpt    5        2466.068 ±     513.667  MB/sec
ExcelSAXBenchmark.readSax:gc.alloc.rate.norm                    1  thrpt    5     1284018.719 ±    5909.050    B/op
ExcelSAXBenchmark.readSax:gc.count                              1  thrpt    5         878.000                counts
ExcelSAXBenchmark.readSax:gc.time                               1  thrpt    5         548.000                    ms
ExcelSAXBenchmark.readSax:heap.memory.used.mb                   1  thrpt    5          44.052 ±      76.605      MB
ExcelSAXBenchmark.readSax                                     100  thrpt    5           0.589 ±       0.117  ops/ms
ExcelSAXBenchmark.readSax:gc.alloc.rate                       100  thrpt    5        3448.456 ±     677.442  MB/sec
ExcelSAXBenchmark.readSax:gc.alloc.rate.norm                  100  thrpt    5     6305752.428 ±   13064.235    B/op
ExcelSAXBenchmark.readSax:gc.count                            100  thrpt    5         963.000                counts
ExcelSAXBenchmark.readSax:gc.time                             100  thrpt    5         581.000                    ms
ExcelSAXBenchmark.readSax:heap.memory.used.mb                 100  thrpt    5          47.790 ±     127.199      MB
ExcelSAXBenchmark.readSax                                     500  thrpt    5           0.139 ±       0.022  ops/ms
ExcelSAXBenchmark.readSax:gc.alloc.rate                       500  thrpt    5        3439.485 ±     556.783  MB/sec
ExcelSAXBenchmark.readSax:gc.alloc.rate.norm                  500  thrpt    5    26584422.283 ±   30932.585    B/op
ExcelSAXBenchmark.readSax:gc.count                            500  thrpt    5        1015.000                counts
ExcelSAXBenchmark.readSax:gc.time                             500  thrpt    5         620.000                    ms
ExcelSAXBenchmark.readSax:heap.memory.used.mb                 500  thrpt    5          63.641 ±      93.729      MB
ExcelSAXBenchmark.readSax                                    1000  thrpt    5           0.069 ±       0.008  ops/ms
ExcelSAXBenchmark.readSax:gc.alloc.rate                      1000  thrpt    5        3337.790 ±     403.131  MB/sec
ExcelSAXBenchmark.readSax:gc.alloc.rate.norm                 1000  thrpt    5    51914772.014 ±   45972.442    B/op
ExcelSAXBenchmark.readSax:gc.count                           1000  thrpt    5         981.000                counts
ExcelSAXBenchmark.readSax:gc.time                            1000  thrpt    5         602.000                    ms
ExcelSAXBenchmark.readSax:heap.memory.used.mb                1000  thrpt    5          63.831 ±      75.054      MB
ExcelSAXBenchmark.readSax                                    5000  thrpt    5           0.011 ±       0.001  ops/ms
ExcelSAXBenchmark.readSax:gc.alloc.rate                      5000  thrpt    5        2548.095 ±     267.067  MB/sec
ExcelSAXBenchmark.readSax:gc.alloc.rate.norm                 5000  thrpt    5   254343827.030 ±   36487.355    B/op
ExcelSAXBenchmark.readSax:gc.count                           5000  thrpt    5         933.000                counts
ExcelSAXBenchmark.readSax:gc.time                            5000  thrpt    5         650.000                    ms
ExcelSAXBenchmark.readSax:heap.memory.used.mb                5000  thrpt    5          76.258 ±     144.264      MB
ExcelSAXBenchmark.readSax                                   10000  thrpt    5           0.004 ±       0.001  ops/ms
ExcelSAXBenchmark.readSax:gc.alloc.rate                     10000  thrpt    5        2079.088 ±      68.969  MB/sec
ExcelSAXBenchmark.readSax:gc.alloc.rate.norm                10000  thrpt    5   507476210.157 ±   47170.994    B/op
ExcelSAXBenchmark.readSax:gc.count                          10000  thrpt    5        1162.000                counts
ExcelSAXBenchmark.readSax:gc.time                           10000  thrpt    5         854.000                    ms
ExcelSAXBenchmark.readSax:heap.memory.used.mb               10000  thrpt    5          73.018 ±      75.152      MB
ExcelSAXBenchmark.readSax                                   15000  thrpt    5           0.002 ±       0.001  ops/ms
ExcelSAXBenchmark.readSax:gc.alloc.rate                     15000  thrpt    5        1645.595 ±      54.434  MB/sec
ExcelSAXBenchmark.readSax:gc.alloc.rate.norm                15000  thrpt    5   762240674.400 ±   43837.741    B/op
ExcelSAXBenchmark.readSax:gc.count                          15000  thrpt    5         870.000                counts
ExcelSAXBenchmark.readSax:gc.time                           15000  thrpt    5         668.000                    ms
ExcelSAXBenchmark.readSax:heap.memory.used.mb               15000  thrpt    5          92.257 ±     101.602      MB
ExcelSAXBenchmark.readSax                                  100000  thrpt    5          ≈ 10⁻⁴                ops/ms
ExcelSAXBenchmark.readSax:gc.alloc.rate                    100000  thrpt    5         507.448 ±      20.375  MB/sec
ExcelSAXBenchmark.readSax:gc.alloc.rate.norm               100000  thrpt    5  5086082348.800 ± 3127593.464    B/op
ExcelSAXBenchmark.readSax:gc.count                         100000  thrpt    5         610.000                counts
ExcelSAXBenchmark.readSax:gc.time                          100000  thrpt    5         510.000                    ms
ExcelSAXBenchmark.readSax:heap.memory.used.mb              100000  thrpt    5          96.825 ±      56.142      MB
ExcelSAXBenchmark.readSax                                  150000  thrpt    5          ≈ 10⁻⁴                ops/ms
ExcelSAXBenchmark.readSax:gc.alloc.rate                    150000  thrpt    5         371.803 ±      12.388  MB/sec
ExcelSAXBenchmark.readSax:gc.alloc.rate.norm               150000  thrpt    5  7600107160.000 ± 4788301.704    B/op
ExcelSAXBenchmark.readSax:gc.count                         150000  thrpt    5         944.000                counts
ExcelSAXBenchmark.readSax:gc.time                          150000  thrpt    5         728.000                    ms
ExcelSAXBenchmark.readSax:heap.memory.used.mb              150000  thrpt    5         102.179 ±      57.992      MB
ExcelSAXBenchmark.readDom                                       1   avgt    5           1.085 ±       0.252   ms/op
ExcelSAXBenchmark.readDom:gc.alloc.rate                         1   avgt    5        1710.132 ±     364.816  MB/sec
ExcelSAXBenchmark.readDom:gc.alloc.rate.norm                    1   avgt    5     1995366.954 ±   14349.919    B/op
ExcelSAXBenchmark.readDom:gc.count                              1   avgt    5         580.000                counts
ExcelSAXBenchmark.readDom:gc.time                               1   avgt    5         439.000                    ms
ExcelSAXBenchmark.readDom:heap.memory.used.mb                   1   avgt    5          19.092 ±      61.498      MB
ExcelSAXBenchmark.readDom                                     100   avgt    5           2.552 ±       0.498   ms/op
ExcelSAXBenchmark.readDom:gc.alloc.rate                       100   avgt    5        2594.716 ±     485.654  MB/sec
ExcelSAXBenchmark.readDom:gc.alloc.rate.norm                  100   avgt    5     7127386.587 ±   20591.469    B/op
ExcelSAXBenchmark.readDom:gc.count                            100   avgt    5         825.000                counts
ExcelSAXBenchmark.readDom:gc.time                             100   avgt    5         587.000                    ms
ExcelSAXBenchmark.readDom:heap.memory.used.mb                 100   avgt    5          47.078 ±      81.373      MB
ExcelSAXBenchmark.readDom                                     500   avgt    5           9.854 ±       2.424   ms/op
ExcelSAXBenchmark.readDom:gc.alloc.rate                       500   avgt    5        2633.221 ±     645.848  MB/sec
ExcelSAXBenchmark.readDom:gc.alloc.rate.norm                  500   avgt    5    27856612.185 ±   66724.921    B/op
ExcelSAXBenchmark.readDom:gc.count                            500   avgt    5         619.000                counts
ExcelSAXBenchmark.readDom:gc.time                             500   avgt    5         731.000                    ms
ExcelSAXBenchmark.readDom:heap.memory.used.mb                 500   avgt    5          65.476 ±      65.977      MB
ExcelSAXBenchmark.readDom                                    1000   avgt    5          17.794 ±       2.526   ms/op
ExcelSAXBenchmark.readDom:gc.alloc.rate                      1000   avgt    5        2804.900 ±     382.993  MB/sec
ExcelSAXBenchmark.readDom:gc.alloc.rate.norm                 1000   avgt    5    53754427.387 ±   98752.360    B/op
ExcelSAXBenchmark.readDom:gc.count                           1000   avgt    5         572.000                counts
ExcelSAXBenchmark.readDom:gc.time                            1000   avgt    5         863.000                    ms
ExcelSAXBenchmark.readDom:heap.memory.used.mb                1000   avgt    5          57.612 ±     145.845      MB
ExcelSAXBenchmark.readDom                                    5000   avgt    5         133.885 ±       7.673   ms/op
ExcelSAXBenchmark.readDom:gc.alloc.rate                      5000   avgt    5        1828.079 ±      99.536  MB/sec
ExcelSAXBenchmark.readDom:gc.alloc.rate.norm                 5000   avgt    5   263646555.701 ±  168910.356    B/op
ExcelSAXBenchmark.readDom:gc.count                           5000   avgt    5         506.000                counts
ExcelSAXBenchmark.readDom:gc.time                            5000   avgt    5        2140.000                    ms
ExcelSAXBenchmark.readDom:heap.memory.used.mb                5000   avgt    5         240.910 ±     115.249      MB
ExcelSAXBenchmark.readDom                                   10000   avgt    5         343.870 ±      15.827   ms/op
ExcelSAXBenchmark.readDom:gc.alloc.rate                     10000   avgt    5        1418.447 ±      60.901  MB/sec
ExcelSAXBenchmark.readDom:gc.alloc.rate.norm                10000   avgt    5   525239284.160 ±  357521.769    B/op
ExcelSAXBenchmark.readDom:gc.count                          10000   avgt    5         378.000                counts
ExcelSAXBenchmark.readDom:gc.time                           10000   avgt    5        1941.000                    ms
ExcelSAXBenchmark.readDom:heap.memory.used.mb               10000   avgt    5         325.899 ±     354.053      MB
ExcelSAXBenchmark.readDom                                   15000   avgt    5         626.722 ±      53.928   ms/op
ExcelSAXBenchmark.readDom:gc.alloc.rate                     15000   avgt    5        1172.359 ±     111.081  MB/sec
ExcelSAXBenchmark.readDom:gc.alloc.rate.norm                15000   avgt    5   790203312.111 ±  654117.790    B/op
ExcelSAXBenchmark.readDom:gc.count                          15000   avgt    5         287.000                counts
ExcelSAXBenchmark.readDom:gc.time                           15000   avgt    5        1683.000                    ms
ExcelSAXBenchmark.readDom:heap.memory.used.mb               15000   avgt    5         271.118 ±     371.870      MB
ExcelSAXBenchmark.readDom                                  100000   avgt    5       14153.146 ±    2232.974   ms/op
ExcelSAXBenchmark.readDom:gc.alloc.rate                    100000   avgt    5         351.865 ±      54.092  MB/sec
ExcelSAXBenchmark.readDom:gc.alloc.rate.norm               100000   avgt    5  5264761532.800 ±  846245.396    B/op
ExcelSAXBenchmark.readDom:gc.count                         100000   avgt    5         239.000                counts
ExcelSAXBenchmark.readDom:gc.time                          100000   avgt    5        1347.000                    ms
ExcelSAXBenchmark.readDom:heap.memory.used.mb              100000   avgt    5         758.770 ±     276.988      MB
ExcelSAXBenchmark.readDom                                  150000   avgt    5       28992.742 ±    9414.853   ms/op
ExcelSAXBenchmark.readDom:gc.alloc.rate                    150000   avgt    5         259.066 ±      80.581  MB/sec
ExcelSAXBenchmark.readDom:gc.alloc.rate.norm               150000   avgt    5  7868795758.400 ± 4471003.667    B/op
ExcelSAXBenchmark.readDom:gc.count                         150000   avgt    5         856.000                counts
ExcelSAXBenchmark.readDom:gc.time                          150000   avgt    5        4123.000                    ms
ExcelSAXBenchmark.readDom:heap.memory.used.mb              150000   avgt    5         931.577 ±     148.452      MB
ExcelSAXBenchmark.readSax                                       1   avgt    5           0.487 ±       0.107   ms/op
ExcelSAXBenchmark.readSax:gc.alloc.rate                         1   avgt    5        2454.637 ±     492.258  MB/sec
ExcelSAXBenchmark.readSax:gc.alloc.rate.norm                    1   avgt    5     1286691.048 ±    6004.096    B/op
ExcelSAXBenchmark.readSax:gc.count                              1   avgt    5         820.000                counts
ExcelSAXBenchmark.readSax:gc.time                               1   avgt    5         543.000                    ms
ExcelSAXBenchmark.readSax:heap.memory.used.mb                   1   avgt    5          40.401 ±      76.147      MB
ExcelSAXBenchmark.readSax                                     100   avgt    5           1.646 ±       0.273   ms/op
ExcelSAXBenchmark.readSax:gc.alloc.rate                       100   avgt    5        3560.584 ±     580.536  MB/sec
ExcelSAXBenchmark.readSax:gc.alloc.rate.norm                  100   avgt    5     6306401.995 ±   14200.771    B/op
ExcelSAXBenchmark.readSax:gc.count                            100   avgt    5        1054.000                counts
ExcelSAXBenchmark.readSax:gc.time                             100   avgt    5         593.000                    ms
ExcelSAXBenchmark.readSax:heap.memory.used.mb                 100   avgt    5          34.885 ±     132.785      MB
ExcelSAXBenchmark.readSax                                     500   avgt    5           7.042 ±       0.955   ms/op
ExcelSAXBenchmark.readSax:gc.alloc.rate                       500   avgt    5        3498.235 ±     440.742  MB/sec
ExcelSAXBenchmark.readSax:gc.alloc.rate.norm                  500   avgt    5    26564594.316 ±   55319.998    B/op
ExcelSAXBenchmark.readSax:gc.count                            500   avgt    5         989.000                counts
ExcelSAXBenchmark.readSax:gc.time                             500   avgt    5         645.000                    ms
ExcelSAXBenchmark.readSax:heap.memory.used.mb                 500   avgt    5          43.215 ±     123.757      MB
ExcelSAXBenchmark.readSax                                    1000   avgt    5          14.263 ±       1.080   ms/op
ExcelSAXBenchmark.readSax:gc.alloc.rate                      1000   avgt    5        3377.645 ±     234.693  MB/sec
ExcelSAXBenchmark.readSax:gc.alloc.rate.norm                 1000   avgt    5    51915907.912 ±   45605.306    B/op
ExcelSAXBenchmark.readSax:gc.count                           1000   avgt    5         997.000                counts
ExcelSAXBenchmark.readSax:gc.time                            1000   avgt    5         621.000                    ms
ExcelSAXBenchmark.readSax:heap.memory.used.mb                1000   avgt    5          45.227 ±     116.725      MB
ExcelSAXBenchmark.readSax                                    5000   avgt    5          96.246 ±      10.219   ms/op
ExcelSAXBenchmark.readSax:gc.alloc.rate                      5000   avgt    5        2450.628 ±     254.965  MB/sec
ExcelSAXBenchmark.readSax:gc.alloc.rate.norm                 5000   avgt    5   254185121.601 ±   42534.071    B/op
ExcelSAXBenchmark.readSax:gc.count                           5000   avgt    5         853.000                counts
ExcelSAXBenchmark.readSax:gc.time                            5000   avgt    5         657.000                    ms
ExcelSAXBenchmark.readSax:heap.memory.used.mb                5000   avgt    5          36.126 ±     142.264      MB
ExcelSAXBenchmark.readSax                                   10000   avgt    5         222.211 ±      11.760   ms/op
ExcelSAXBenchmark.readSax:gc.alloc.rate                     10000   avgt    5        2119.979 ±     114.236  MB/sec
ExcelSAXBenchmark.readSax:gc.alloc.rate.norm                10000   avgt    5   507477770.362 ±   60555.536    B/op
ExcelSAXBenchmark.readSax:gc.count                          10000   avgt    5        1032.000                counts
ExcelSAXBenchmark.readSax:gc.time                           10000   avgt    5         764.000                    ms
ExcelSAXBenchmark.readSax:heap.memory.used.mb               10000   avgt    5          66.089 ±      90.215      MB
ExcelSAXBenchmark.readSax                                   15000   avgt    5         392.729 ±      34.380   ms/op
ExcelSAXBenchmark.readSax:gc.alloc.rate                     15000   avgt    5        1804.549 ±     152.137  MB/sec
ExcelSAXBenchmark.readSax:gc.alloc.rate.norm                15000   avgt    5   762811051.279 ±  819736.225    B/op
ExcelSAXBenchmark.readSax:gc.count                          15000   avgt    5         888.000                counts
ExcelSAXBenchmark.readSax:gc.time                           15000   avgt    5         686.000                    ms
ExcelSAXBenchmark.readSax:heap.memory.used.mb               15000   avgt    5          83.725 ±      43.612      MB
ExcelSAXBenchmark.readSax                                  100000   avgt    5        9488.369 ±     341.916   ms/op
ExcelSAXBenchmark.readSax:gc.alloc.rate                    100000   avgt    5         504.037 ±      17.279  MB/sec
ExcelSAXBenchmark.readSax:gc.alloc.rate.norm               100000   avgt    5  5089572208.000 ± 5624170.703    B/op
ExcelSAXBenchmark.readSax:gc.count                         100000   avgt    5         613.000                counts
ExcelSAXBenchmark.readSax:gc.time                          100000   avgt    5         548.000                    ms
ExcelSAXBenchmark.readSax:heap.memory.used.mb              100000   avgt    5          77.272 ±      95.698      MB
ExcelSAXBenchmark.readSax                                  150000   avgt    5       19303.183 ±     446.376   ms/op
ExcelSAXBenchmark.readSax:gc.alloc.rate                    150000   avgt    5         372.853 ±       8.446  MB/sec
ExcelSAXBenchmark.readSax:gc.alloc.rate.norm               150000   avgt    5  7600042444.800 ± 4222984.248    B/op
ExcelSAXBenchmark.readSax:gc.count                         150000   avgt    5         972.000                counts
ExcelSAXBenchmark.readSax:gc.time                          150000   avgt    5         766.000                    ms
ExcelSAXBenchmark.readSax:heap.memory.used.mb              150000   avgt    5         102.759 ±      84.879      MB
