/*
 * This file is generated by jOOQ.
 */
package com.gmoon.batchinsert.global.jmodel;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;

import com.gmoon.batchinsert.global.jmodel.tables.FlywaySchemaHistory;
import com.gmoon.batchinsert.global.jmodel.tables.TbAccessLog;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.16",
        "schema version:2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Batchinsert extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>batchinsert</code>
     */
    public static final Batchinsert BATCHINSERT = new Batchinsert();

    /**
     * The table <code>batchinsert.flyway_schema_history</code>.
     */
    public final FlywaySchemaHistory FLYWAY_SCHEMA_HISTORY = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY;

    /**
     * The table <code>batchinsert.tb_access_log</code>.
     */
    public final TbAccessLog TB_ACCESS_LOG = TbAccessLog.TB_ACCESS_LOG;

    /**
     * No further instances allowed
     */
    private Batchinsert() {
        super("batchinsert", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.<Table<?>>asList(
            FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY,
            TbAccessLog.TB_ACCESS_LOG);
    }
}
